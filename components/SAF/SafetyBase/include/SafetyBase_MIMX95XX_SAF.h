/**************************************************************************
 * FILE NAME: SafetyBase_MIMX95XX_SAF.h                                   *
 * REVISION:  1.0                                                         *
 *                                                                        *
 * DESCRIPTION:                                                           *
 * This file contains all of the register and bit field definitions for   *
 * the ip_params_top.                                                     *
 *========================================================================*
 * UPDATE HISTORY                                                         *
 * REV      AUTHOR      DATE       DESCRIPTION OF CHANGE                  *
 * ---   -----------  ---------    ---------------------                  *
 * 0       nxf85805   01-Sep-2023  Initial revision                       *
 * 1       nxf85804   09-Jan-2024  Changes for EAR 0.8.0 release          *
 * 2       nxa16961   16-Feb-2024  Added SCB module section               *
 * 3       nxa16961   22-Feb-2024  Added SysTick core registers           *
 * 4       nxf84805   13-Mar-2024  Added EIM, SRAM, DDR registers         *
 * 5       nxf84805   13-Mar-2024  Added ERM registers                    *
 * 6       nxf84805   08-Apr-2024  Added LSCTU registers                  *
 *========================================================================*
 * Copyright 2023-2024 NXP                                                *
 * Detailed license terms of software usage can be found in the           *
 * license.txt file located in the root folder of this package.           *
 *                                                                        *
 **************************************************************************/
/*>>>>>>> NOTE! this file is auto-generated please do not edit it! <<<<<<<*/

/**************************************************************************
 * Example register & bit field write:                                    *
 *                                                                        *
 *  <MODULE>.<REGISTER>.B.<BIT> = 1;                                      *
 *  <MODULE>.<REGISTER>.R       = 0x10000000;                             *
 *                                                                        *
 **************************************************************************/

#ifndef _SafetyBase_MIMX95XX_SAF_H_
#define _SafetyBase_MIMX95XX_SAF_H_
#include "typedefs.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __MWERKS__
#pragma push
#pragma ANSI_strict off
#endif
#ifdef __ghs__
#pragma ghs nowarning 618
#endif
#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wpedantic"
#pragma pack(push,1)
#endif

#if defined(SAFETY_BASE_MIMX95XX)
/* ============================================================================
   =============================== Module: AON_BLK_CTRL_S_AONMIX ==============
   ============================================================================ */

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK0_union_tag { /* CM33_IRQ_MASK0 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK0_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK1_union_tag { /* CM33_IRQ_MASK1 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK1_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK2_union_tag { /* CM33_IRQ_MASK2 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK2_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK3_union_tag { /* CM33_IRQ_MASK3 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK3_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK4_union_tag { /* CM33_IRQ_MASK4 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK4_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK5_union_tag { /* CM33_IRQ_MASK5 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK5_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK6_union_tag { /* CM33_IRQ_MASK6 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK6_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK7_union_tag { /* CM33_IRQ_MASK7 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK7_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK8_union_tag { /* CM33_IRQ_MASK8 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK8_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK9_union_tag { /* CM33_IRQ_MASK9 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK9_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK10_union_tag { /* CM33_IRQ_MASK10 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK10_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK11_union_tag { /* CM33_IRQ_MASK11 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM33 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK11_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK0_union_tag { /* CA55_IRQ_MASK0 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK0_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK1_union_tag { /* CA55_IRQ_MASK1 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK1_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK2_union_tag { /* CA55_IRQ_MASK2 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK2_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK3_union_tag { /* CA55_IRQ_MASK3 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK3_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK4_union_tag { /* CA55_IRQ_MASK4 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK4_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK5_union_tag { /* CA55_IRQ_MASK5 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK5_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK6_union_tag { /* CA55_IRQ_MASK6 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK6_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK7_union_tag { /* CA55_IRQ_MASK7 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK7_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK8_union_tag { /* CA55_IRQ_MASK8 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK8_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK9_union_tag { /* CA55_IRQ_MASK9 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK9_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK10_union_tag { /* CA55_IRQ_MASK10 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK10_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK11_union_tag { /* CA55_IRQ_MASK11 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CA55 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK11_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK0_union_tag { /* CM7_IRQ_MASK0 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK0_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK1_union_tag { /* CM7_IRQ_MASK1 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK1_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK2_union_tag { /* CM7_IRQ_MASK2 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK2_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK3_union_tag { /* CM7_IRQ_MASK3 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK3_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK4_union_tag { /* CM7_IRQ_MASK4 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK4_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK5_union_tag { /* CM7_IRQ_MASK5 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK5_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK6_union_tag { /* CM7_IRQ_MASK6 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK6_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK7_union_tag { /* CM7_IRQ_MASK7 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK7_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK8_union_tag { /* CM7_IRQ_MASK8 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK8_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK9_union_tag { /* CM7_IRQ_MASK9 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK9_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK10_union_tag { /* CM7_IRQ_MASK10 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK10_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK11_union_tag { /* CM7_IRQ_MASK11 */
  vuint32_t R;
  struct {
    vuint32_t M:32;                    /* CM7 IRQ MASK */
  } B;
} AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK11_tag;

typedef union AON_BLK_CTRL_S_AONMIX_INITSVTOR_union_tag { /* M33 restart secure address */
  vuint32_t R;
  struct {
    vuint32_t M33:32;                  /* INITSVTOR */
  } B;
} AON_BLK_CTRL_S_AONMIX_INITSVTOR_tag;

typedef union AON_BLK_CTRL_S_AONMIX_INITNSVTOR_union_tag { /* M33 restart non-secure address */
  vuint32_t R;
  struct {
    vuint32_t M33:32;                  /* INITSVTOR */
  } B;
} AON_BLK_CTRL_S_AONMIX_INITNSVTOR_tag;

typedef union AON_BLK_CTRL_S_AONMIX_INITVTOR_union_tag { /* M7restart address */
  vuint32_t R;
  struct {
    vuint32_t _unused_25:7;
    vuint32_t M7:25;                   /* INITVTOR */
  } B;
} AON_BLK_CTRL_S_AONMIX_INITVTOR_tag;

typedef union AON_BLK_CTRL_S_AONMIX_M33_CFG_union_tag { /* M33 Configure Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t WAIT:1;                  /* M33 CPU WAIT */
    vuint32_t TCM_SIZE:2;              /* M33 TCM SIZE */
    vuint32_t _unused_0:27;
  } B;
} AON_BLK_CTRL_S_AONMIX_M33_CFG_tag;

typedef union AON_BLK_CTRL_S_AONMIX_M7_CFG_union_tag { /* M7 Configure Register */
  vuint32_t R;
  struct {
    vuint32_t TCM_SIZE:3;              /* M7 TCM SIZE */
    vuint32_t _unused_28:1;
    vuint32_t WAIT:1;                  /* M7 CPUWAIT */
    vuint32_t CORECLK_FORCE_ON:1;      /* Force CM7 core clock on */
    vuint32_t HCLK_FORCE_ON:1;         /* CM7 platform AHB clock enable */
    vuint32_t _unused_0:25;
  } B;
} AON_BLK_CTRL_S_AONMIX_M7_CFG_tag;

typedef union AON_BLK_CTRL_S_AONMIX_AXBS_AON_CTRL_union_tag { /* AXBS_AON_CTRL */
  vuint32_t R;
  struct {
    vuint32_t FORCE_ROUND_ROBIN:1;     /* AXBS_AON FORCE_ROUND_ROBIN */
    vuint32_t M0_HIGH_PRIORITY:1;      /* M0 High Priority Control Bit */
    vuint32_t M1_HIGH_PRIORITY:1;      /* M1 High Priority Control Bit */
    vuint32_t M2_HIGH_PRIORITY:1;      /* M2 High Priority Control Bit */
    vuint32_t M3_HIGH_PRIORITY:1;      /* M3 High Priority Control Bit */
    vuint32_t M4_HIGH_PRIORITY:1;      /* M4 High Priority Control Bit */
    vuint32_t _unused_25:1;            /* Reserved */
    vuint32_t _unused_24:1;            /* Reserved */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_BLK_CTRL_S_AONMIX_AXBS_AON_CTRL_tag;

typedef union AON_BLK_CTRL_S_AONMIX_DAP_ACCESS_STKYBIT_union_tag { /* Dap Access Sticky Bit */
  vuint32_t R;
  struct {
    vuint32_t M33:1;                   /* M33 DAP_ACCESS_STKYBIT */
    vuint32_t A55:1;                   /* A55 DAP_ACCESS_STKYBIT */
    vuint32_t _unused_0:30;
  } B;
} AON_BLK_CTRL_S_AONMIX_DAP_ACCESS_STKYBIT_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_ELE_union_tag { /* Low Power Handshake for ELE Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t AONMIX:1;                /* AON domain cold reset handshake enable */
    vuint32_t M33_PLATFORM:1;          /* CM33 platform cold reset handshake enable */
    vuint32_t ELE:1;                   /* ELE cold reset handshake enable */
    vuint32_t _unused_27:1;
    vuint32_t CAMERAMIX:1;             /* Camera domain cold reset handshake enable */
    vuint32_t _unused_25:1;
    vuint32_t A55_CPU0:1;              /* CA55_CPU0 cold reset handshake enable */
    vuint32_t A55_CPU1:1;              /* CA55_CPU1 cold reset handshake enable */
    vuint32_t A55_CPU2:1;              /* CA55_CPU2 cold reset handshake enable */
    vuint32_t A55_CPU3:1;              /* CA55_CPU3 cold reset handshake enable */
    vuint32_t A55_CPU4:1;              /* CA55_CPU4 cold reset handshake enable */
    vuint32_t A55_CPU5:1;              /* CA55_CPU5 cold reset handshake enable */
    vuint32_t A55_PLATFORM:1;          /* CA55_Platform cold reset handshake enable */
    vuint32_t DDRMIX_TOP:1;            /* DDR domain cold reset handshake enable */
    vuint32_t DDR_PHY:1;               /* DDR PHY cold reset handshake enable */
    vuint32_t DISPLAY:1;               /* Display domain cold reset handshake enable */
    vuint32_t GPU:1;                   /* GPU domain cold reset handshake enable */
    vuint32_t HSIO_TOP:1;              /* HSIO domain cold reset handshake enable */
    vuint32_t HSIO_AON:1;              /* HSIO_AON cold reset handshake enable */
    vuint32_t M7MIX:1;                 /* M7 domain cold reset handshake enable */
    vuint32_t NETC:1;                  /* NETC domain cold reset handshake enable */
    vuint32_t NOC:1;                   /* NOC cold reset handshake enable */
    vuint32_t NPU:1;                   /* NPU cold reset handshake enable */
    vuint32_t VPU:1;                   /* VPU cold reset handshake enable */
    vuint32_t WAKEUPMIX_TOP:1;         /* wakeupmix_top cold reset handshake enable */
    vuint32_t WAKEUPMIX_JTAG:1;        /* wakeupmix_jtag cold reset handshake enable */
    vuint32_t WAKEUPMIX_WDOG_3_4:1;    /* wakeupmix_wdog_3_4 cold reset handshake enable */
    vuint32_t WAKEUPMIX_WDOG5:1;       /* wakeupmix_wdog5 cold reset handshake enable */
    vuint32_t _unused_2:1;
    vuint32_t AONMIX_POWER:1;          /* AON domain low power handshake enable */
    vuint32_t _unused_0:1;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_ELE_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_ELE_union_tag { /* Low Power Handshake 2 for ELE Register */
  vuint32_t R;
  struct {
    vuint32_t CAMERAMIX:1;             /* Camera domain low power handshake enable */
    vuint32_t _unused_30:1;
    vuint32_t A55_CPU0:1;              /* CA55_CPU0 low power handshake enable */
    vuint32_t A55_CPU1:1;              /* CA55_CPU1 low power handshake enable */
    vuint32_t A55_CPU2:1;              /* CA55_CPU2 low power handshake enable */
    vuint32_t A55_CPU3:1;              /* CA55_CPU3 low power handshake enable */
    vuint32_t A55_CPU4:1;              /* CA55_CPU4 low power handshake enable */
    vuint32_t A55_CPU5:1;              /* CA55_CPU5 low power handshake enable */
    vuint32_t A55_PLATFORM:1;          /* CA55_Platform low power handshake enable */
    vuint32_t DDR:1;                   /* DDR domain low power handshake enable */
    vuint32_t DISPLAY:1;               /* Display domain low power handshake enable */
    vuint32_t GPU:1;                   /* GPU domain low power handshake enable */
    vuint32_t HSIO_TOP:1;              /* HSIO domain low power handshake enable */
    vuint32_t HSIO_AON:1;              /* HSIO_AON low power handshake enable */
    vuint32_t M7_PLATFORM:1;           /* M7 Platform low power handshake enable */
    vuint32_t NETC:1;                  /* NETC domain low power handshake enable */
    vuint32_t NOC:1;                   /* NOC low power handshake enable */
    vuint32_t NPU:1;                   /* NPU low power handshake enable */
    vuint32_t VPU:1;                   /* VPU low power handshake enable */
    vuint32_t WAKEUP:1;                /* WAKEUP low power handshake enable */
    vuint32_t OSC24MHZ:1;              /* OSC 24MHz low power handshake enable */
    vuint32_t _unused_0:11;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_ELE_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_ELE_union_tag { /* Low Power Handshake 3 for ELE Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:32;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_ELE_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_SM_union_tag { /* Low Power Handshake for System Manager */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t AONMIX:1;                /* AON domain cold reset handshake enable */
    vuint32_t M33_PLATFORM:1;          /* CM33 platform cold reset handshake enable */
    vuint32_t ELE:1;                   /* ELE cold reset handshake enable */
    vuint32_t _unused_27:1;
    vuint32_t CAMERAMIX:1;             /* Camera domain cold reset handshake enable */
    vuint32_t _unused_25:1;
    vuint32_t A55_CPU0:1;              /* CA55_CPU0 cold reset handshake enable */
    vuint32_t A55_CPU1:1;              /* CA55_CPU1 cold reset handshake enable */
    vuint32_t A55_CPU2:1;              /* CA55_CPU2 cold reset handshake enable */
    vuint32_t A55_CPU3:1;              /* CA55_CPU3 cold reset handshake enable */
    vuint32_t A55_CPU4:1;              /* CA55_CPU4 cold reset handshake enable */
    vuint32_t A55_CPU5:1;              /* CA55_CPU5 cold reset handshake enable */
    vuint32_t A55_PLATFORM:1;          /* CA55_Platform cold reset handshake enable */
    vuint32_t DDRMIX_TOP:1;            /* DDR domain cold reset handshake enable */
    vuint32_t DDR_PHY:1;               /* DDR PHY cold reset handshake enable */
    vuint32_t DISPLAY:1;               /* Display domain cold reset handshake enable */
    vuint32_t GPU:1;                   /* GPU domain cold reset handshake enable */
    vuint32_t HSIO_TOP:1;              /* HSIO domain cold reset handshake enable */
    vuint32_t HSIO_AON:1;              /* HSIO_AON cold reset handshake enable */
    vuint32_t M7MIX:1;                 /* M7 domain cold reset handshake enable */
    vuint32_t NETC:1;                  /* NETC domain cold reset handshake enable */
    vuint32_t NOC:1;                   /* NOC cold reset handshake enable */
    vuint32_t NPU:1;                   /* NPU cold reset handshake enable */
    vuint32_t VPUf:1;                  /* VPU cold reset handshake enable */
    vuint32_t WAKEUPMIX_TOP:1;         /* wakeupmix_top cold reset handshake enable */
    vuint32_t WAKEUPMIX_JTAG:1;        /* wakeupmix_jtag cold reset handshake enable */
    vuint32_t WAKEUPMIX_WDOG_3_4:1;    /* wakeupmix_wdog_3_4 cold reset handshake enable */
    vuint32_t WAKEUPMIX_WDOG5:1;       /* wakeupmix_wdog5 cold reset handshake enable */
    vuint32_t _unused_2:1;
    vuint32_t AONMIX_POWER:1;          /* AON domain low power handshake enable */
    vuint32_t _unused_0:1;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_SM_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_SM_union_tag { /* Low Power Handshake 2 for System Manager */
  vuint32_t R;
  struct {
    vuint32_t CAMERAMIX:1;             /* Camera domain low power handshake enable */
    vuint32_t _unused_30:1;
    vuint32_t A55_CPU0:1;              /* CA55_CPU0 low power handshake enable */
    vuint32_t A55_CPU1:1;              /* CA55_CPU1 low power handshake enable */
    vuint32_t A55_CPU2:1;              /* CA55_CPU2 low power handshake enable */
    vuint32_t A55_CPU3:1;              /* CA55_CPU3 low power handshake enable */
    vuint32_t A55_CPU4:1;              /* CA55_CPU4 low power handshake enable */
    vuint32_t A55_CPU5:1;              /* CA55_CPU5 low power handshake enable */
    vuint32_t A55_PLATFORM:1;          /* CA55_Platform low power handshake enable */
    vuint32_t DDR:1;                   /* DDR domain low power handshake enable */
    vuint32_t DISPLAY:1;               /* Display domain low power handshake enable */
    vuint32_t GPU:1;                   /* GPU domain low power handshake enable */
    vuint32_t HSIO_TOP:1;              /* HSIO domain low power handshake enable */
    vuint32_t HSIO_AON:1;              /* HSIO_AON low power handshake enable */
    vuint32_t M7_PLATFORM:1;           /* M7 Platform low power handshake enable */
    vuint32_t NETC:1;                  /* NETC domain low power handshake enable */
    vuint32_t NOC:1;                   /* NOC low power handshake enable */
    vuint32_t NPU:1;                   /* NPU low power handshake enable */
    vuint32_t VPUf:1;                  /* VPU low power handshake enable */
    vuint32_t WAKEUP:1;                /* WAKEUP low power handshake enable */
    vuint32_t OSC24MHZ:1;              /* OSC 24MHz low power handshake enable */
    vuint32_t _unused_0:11;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_SM_tag;

typedef union AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_SM_union_tag { /* Low Power Handshake 3 for System Manager */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:32;
  } B;
} AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_SM_tag;

typedef union AON_BLK_CTRL_S_AONMIX_SM_LP_HANDSHAKE_STATUS_union_tag { /* Register interface for system manager to react for the lp_handshake */
  vuint32_t R;
  struct {
    vuint32_t ACK:1;                   /* Acknowledge for the lp request */
    vuint32_t STAT:1;                  /* Status for clock/reset/power */
    vuint32_t IDX:7;                   /* ID of the active lp request */
    vuint32_t AUTOACK:1;               /* Auto acknowledge enable bit */
    vuint32_t _unused_0:22;
  } B;
} AON_BLK_CTRL_S_AONMIX_SM_LP_HANDSHAKE_STATUS_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_CPUWAIT_union_tag { /* CPUWAIT settings for CA55 CPU */
  vuint32_t R;
  struct {
    vuint32_t CPU0_WAIT:1;             /* Configure CPU0 in CPU WAIT mode */
    vuint32_t CPU1_WAIT:1;             /* Configure CPU1 in CPU WAIT mode */
    vuint32_t CPU2_WAIT:1;             /* Configure CPU2 in CPU WAIT mode */
    vuint32_t CPU3_WAIT:1;             /* Configure CPU3 in CPU WAIT mode */
    vuint32_t CPU4_WAIT:1;             /* Configure CPU4 in CPU WAIT mode */
    vuint32_t CPU5_WAIT:1;             /* Configure CPU5 in CPU WAIT mode */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_CPUWAIT_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_L_union_tag { /* CA55_RVBARADDR0_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR0_L:32;              /* CA55_RVBARADDR0_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_H_union_tag { /* CA55_RVBARADDR0_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR0_H:6;               /* Higher 6 bits of the boot address of CA55 core0 in 64-bit mode */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_L_union_tag { /* CA55_RVBARADDR1_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR1_L:32;              /* CA55_RVBARADDR1_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_H_union_tag { /* CA55_RVBARADDR1_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR1_H:6;               /* CA55_RVBARADDR1_H */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_L_union_tag { /* CA55_RVBARADDR2_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR2_L:32;              /* CA55_RVBARADDR2_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_H_union_tag { /* CA55_RVBARADDR2_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR2_H:6;               /* CA55_RVBARADDR2_H */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_L_union_tag { /* CA55_RVBARADDR3_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR3_L:32;              /* CA55_RVBARADDR3_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_H_union_tag { /* CA55_RVBARADDR3_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR3_H:6;               /* CA55_RVBARADDR3_H */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_L_union_tag { /* CA55_RVBARADDR4_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR4_L:32;              /* CA55_RVBARADDR4_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_H_union_tag { /* CA55_RVBARADDR4_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR4_H:6;               /* CA55_RVBARADDR4_H */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_L_union_tag { /* CA55_RVBARADDR5_L */
  vuint32_t R;
  struct {
    vuint32_t ADDR5_L:32;              /* CA55_RVBARADDR5_L */
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_L_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_H_union_tag { /* CA55_RVBARADDR5_H */
  vuint32_t R;
  struct {
    vuint32_t ADDR5_H:6;               /* CA55_RVBARADDR5_H */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_H_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_IRQ_MASK_union_tag { /* Mask bits of ELE interrupt */
  vuint32_t R;
  struct {
    vuint32_t NOCLK_FDET0:1;           /* Missing ELE clock reset request. */
    vuint32_t NOCLK_FDET1:1;           /* Missing reference clock reset request. */
    vuint32_t NOCLK_FDET2:1;           /* Missing ELE clock reset request. */
    vuint32_t NOCLK_FDET3:1;           /* Missing reference clock reset request. */
    vuint32_t RESET_REQ_32K:1;         /* Reset request for missing reference clock. */
    vuint32_t RESET_REQ:1;             /* Edgelock enclave reset request, active low */
    vuint32_t SYS_FAIL:1;              /* System failure, reset chip */
    vuint32_t LC_BRICKED:1;            /* Lifecycle is in bricked state */
    vuint32_t _unused_23:1;
    vuint32_t WDG_RESET:1;             /* WDOG reset */
    vuint32_t _unused_16:6;
    vuint32_t MU0A_INT_RX_FULL_MASK:1; /* MU0A interrupt Rx full */
    vuint32_t MU0A_INT_TX_EMPTY_MASK:1; /* MU0A interrupt Tx empty */
    vuint32_t MU1A_INT_RX_FULL_MASK:1; /* MU1A interrupt Rx full */
    vuint32_t MU1A_INT_TX_EMPTY_MASK:1; /* MU1A interrupt Tx empty */
    vuint32_t MU2A_INT_RX_FULL_MASK:1; /* MU2A interrupt Rx full */
    vuint32_t MU2A_INT_TX_EMPTY_MASK:1; /* MU2A interrupt Tx empty */
    vuint32_t MU3A_INT_RX_FULL_MASK:1; /* MU3A interrupt Rx full */
    vuint32_t MU3A_INT_TX_EMPTY_MASK:1; /* MU3A interrupt Tx empty */
    vuint32_t MU4A_INT_RX_FULL_MASK:1; /* MU4A interrupt Rx full */
    vuint32_t MU4A_INT_TX_EMPTY_MASK:1; /* MU4A interrupt Tx empty */
    vuint32_t MU5A_INT_RX_FULL_MASK:1; /* MU5A interrupt Rx full */
    vuint32_t MU5A_INT_TX_EMPTY_MASK:1; /* MU5A interrupt Tx empty */
    vuint32_t EVENT_SYS_MASK:1;        /* EVENT_SYS reset */
    vuint32_t _unused_0:3;
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_IRQ_MASK_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_RESET_REQ_MASK_union_tag { /* Mask bits of ELE reset */
  vuint32_t R;
  struct {
    vuint32_t NOCLK_FDET0:1;           /* Missing ELE clock reset request. */
    vuint32_t NOCLK_FDET1:1;           /* Missing reference clock reset request. */
    vuint32_t NOCLK_FDET2:1;           /* Missing ELE clock reset request. */
    vuint32_t NOCLK_FDET3:1;           /* Missing reference clock reset request. */
    vuint32_t SYS_RESET_REQ:1;         /* System reset request */
    vuint32_t RESET_REQ_32K:1;         /* Reset request for missing reference clock. */
    vuint32_t RESET_REQ:1;             /* Edgelock enclave reset request */
    vuint32_t SYS_FAIL:1;              /* System failure, reset chip */
    vuint32_t LC_BRICKED:1;            /* Lifecycle is bricked state */
    vuint32_t _unused_22:1;
    vuint32_t WDG_RESET:1;             /* Watchdog reset request */
    vuint32_t _unused_0:21;
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_RESET_REQ_MASK_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_HALT_STATUS_union_tag { /* ELE Halt Status Register */
  vuint32_t R;
  struct {
    vuint32_t ELE_HALT_ACK:1;          /* EdgeLock halt and clock status */
    vuint32_t _unused_24:7;
    vuint32_t ELE_HALT_EXIT_IRQ_CLR:1; /* EdgeLock halt exit interrupt clear */
    vuint32_t _unused_0:23;
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_HALT_STATUS_tag;

typedef union AON_BLK_CTRL_S_AONMIX_CA55_MODE_union_tag { /* Control the boot mode of two ca55 cores */
  vuint32_t R;
  struct {
    vuint32_t AA64NAA32:6;             /* core0 initial mode control bit */
    vuint32_t _unused_0:26;
  } B;
} AON_BLK_CTRL_S_AONMIX_CA55_MODE_tag;

typedef union AON_BLK_CTRL_S_AONMIX_NMI_MASK_union_tag { /* NMI MASK bits */
  vuint32_t R;
  struct {
    vuint32_t CM33:1;                  /* CM33 NMI mask bit */
    vuint32_t CM7:1;                   /* CM7 NMI mask */
    vuint32_t NMI_PIN_MASK:1;          /* NMI PIN mask bit */
    vuint32_t WDG1_NMI_MASK:1;         /* WDG1 NMI mask bit */
    vuint32_t WDG2_NMI_MASK:1;         /* WDG2 NMI mask bit */
    vuint32_t WDG3_NMI_MASK:1;         /* WDG3 NMI mask bit */
    vuint32_t WDG4_NMI_MASK:1;         /* WDG4 NMI mask bit */
    vuint32_t WDG5_NMI_MASK:1;         /* WDG5 NMI mask bit */
    vuint32_t _unused_0:24;
  } B;
} AON_BLK_CTRL_S_AONMIX_NMI_MASK_tag;

typedef union AON_BLK_CTRL_S_AONMIX_NMI_CLR_union_tag { /* NMI clear bit */
  vuint32_t R;
  struct {
    vuint32_t CM33:1;                  /* CM33 NMI clear */
    vuint32_t CM7:1;                   /* CM7 NMI clear */
    vuint32_t _unused_0:30;
  } B;
} AON_BLK_CTRL_S_AONMIX_NMI_CLR_tag;

typedef union AON_BLK_CTRL_S_AONMIX_WDOG_ANY_MASK_union_tag { /* Wdog any mask */
  vuint32_t R;
  struct {
    vuint32_t WDOG1:1;                 /* wdog1 to wdog_any mask bit */
    vuint32_t WDOG2:1;                 /* wdog2 to wdog_any mask bit */
    vuint32_t WDOG3:1;                 /* wdog3 to wdog_any mask bit */
    vuint32_t WDOG4:1;                 /* wdog4 to wdog_any mask bit */
    vuint32_t WDOG5:1;                 /* wdog5 to wdog_any mask bit */
    vuint32_t _unused_0:27;
  } B;
} AON_BLK_CTRL_S_AONMIX_WDOG_ANY_MASK_tag;

typedef union AON_BLK_CTRL_S_AONMIX_MISC_CFG_union_tag { /* Miscellaneous Configure Register */
  vuint32_t R;
  struct {
    vuint32_t NETC_CFG_IERB_LOCK:1;    /* netc.cfg_ierb_lock bit */
    vuint32_t _unused_0:31;
  } B;
} AON_BLK_CTRL_S_AONMIX_MISC_CFG_tag;

typedef union AON_BLK_CTRL_S_AONMIX_SW_FAULTS_union_tag { /* Software Generated Fault Register */
  vuint32_t R;
  struct {
    vuint32_t FCCU_FLT_SWNCF:12;       /* FCCU_FLT_SWNCF bits */
    vuint32_t _unused_0:20;
  } B;
} AON_BLK_CTRL_S_AONMIX_SW_FAULTS_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_GPO_STATUS_union_tag { /* ELE gpo status register */
  vuint32_t R;
  struct {
    vuint32_t ELE_GPO_8:1;             /* ELE GPO status */
    vuint32_t _unused_0:31;
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_GPO_STATUS_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_RST_REQ_STAT_union_tag { /* ELE Reset Request Status Register */
  vuint32_t R;
  struct {
    vuint32_t GROUP_A:16;              /* Group A CSSI events */
    vuint32_t GROUP_B:16;              /* Group B RST events */
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_RST_REQ_STAT_tag;

typedef union AON_BLK_CTRL_S_AONMIX_ELE_IRQ_REQ_STAT_union_tag { /* ELE IRQ Request Status Register */
  vuint32_t R;
  struct {
    vuint32_t GROUP_C:16;              /* Group C IRQ events */
    vuint32_t _unused_0:16;
  } B;
} AON_BLK_CTRL_S_AONMIX_ELE_IRQ_REQ_STAT_tag;

struct AON_BLK_CTRL_S_AONMIX_tag {
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK0_tag CM33_IRQ_MASK0; /* CM33_IRQ_MASK0 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK1_tag CM33_IRQ_MASK1; /* CM33_IRQ_MASK1 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK2_tag CM33_IRQ_MASK2; /* CM33_IRQ_MASK2 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK3_tag CM33_IRQ_MASK3; /* CM33_IRQ_MASK3 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK4_tag CM33_IRQ_MASK4; /* CM33_IRQ_MASK4 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK5_tag CM33_IRQ_MASK5; /* CM33_IRQ_MASK5 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK6_tag CM33_IRQ_MASK6; /* CM33_IRQ_MASK6 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK7_tag CM33_IRQ_MASK7; /* CM33_IRQ_MASK7 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK8_tag CM33_IRQ_MASK8; /* CM33_IRQ_MASK8 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK9_tag CM33_IRQ_MASK9; /* CM33_IRQ_MASK9 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK10_tag CM33_IRQ_MASK10; /* CM33_IRQ_MASK10 */
  AON_BLK_CTRL_S_AONMIX_CM33_IRQ_MASK11_tag CM33_IRQ_MASK11; /* CM33_IRQ_MASK11 */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved0[16];
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK0_tag CA55_IRQ_MASK0; /* CA55_IRQ_MASK0 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK1_tag CA55_IRQ_MASK1; /* CA55_IRQ_MASK1 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK2_tag CA55_IRQ_MASK2; /* CA55_IRQ_MASK2 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK3_tag CA55_IRQ_MASK3; /* CA55_IRQ_MASK3 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK4_tag CA55_IRQ_MASK4; /* CA55_IRQ_MASK4 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK5_tag CA55_IRQ_MASK5; /* CA55_IRQ_MASK5 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK6_tag CA55_IRQ_MASK6; /* CA55_IRQ_MASK6 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK7_tag CA55_IRQ_MASK7; /* CA55_IRQ_MASK7 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK8_tag CA55_IRQ_MASK8; /* CA55_IRQ_MASK8 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK9_tag CA55_IRQ_MASK9; /* CA55_IRQ_MASK9 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK10_tag CA55_IRQ_MASK10; /* CA55_IRQ_MASK10 */
  AON_BLK_CTRL_S_AONMIX_CA55_IRQ_MASK11_tag CA55_IRQ_MASK11; /* CA55_IRQ_MASK11 */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved1[16];
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK0_tag CM7_IRQ_MASK0; /* CM7_IRQ_MASK0 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK1_tag CM7_IRQ_MASK1; /* CM7_IRQ_MASK1 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK2_tag CM7_IRQ_MASK2; /* CM7_IRQ_MASK2 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK3_tag CM7_IRQ_MASK3; /* CM7_IRQ_MASK3 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK4_tag CM7_IRQ_MASK4; /* CM7_IRQ_MASK4 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK5_tag CM7_IRQ_MASK5; /* CM7_IRQ_MASK5 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK6_tag CM7_IRQ_MASK6; /* CM7_IRQ_MASK6 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK7_tag CM7_IRQ_MASK7; /* CM7_IRQ_MASK7 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK8_tag CM7_IRQ_MASK8; /* CM7_IRQ_MASK8 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK9_tag CM7_IRQ_MASK9; /* CM7_IRQ_MASK9 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK10_tag CM7_IRQ_MASK10; /* CM7_IRQ_MASK10 */
  AON_BLK_CTRL_S_AONMIX_CM7_IRQ_MASK11_tag CM7_IRQ_MASK11; /* CM7_IRQ_MASK11 */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved2[80];
  AON_BLK_CTRL_S_AONMIX_INITSVTOR_tag INITSVTOR; /* M33 restart secure address */
  AON_BLK_CTRL_S_AONMIX_INITNSVTOR_tag INITNSVTOR; /* M33 restart non-secure address */
  AON_BLK_CTRL_S_AONMIX_INITVTOR_tag INITVTOR; /* M7restart address */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved3[20];
  AON_BLK_CTRL_S_AONMIX_M33_CFG_tag M33_CFG; /* M33 Configure Register */
  AON_BLK_CTRL_S_AONMIX_M7_CFG_tag M7_CFG; /* M7 Configure Register */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved4[8];
  AON_BLK_CTRL_S_AONMIX_AXBS_AON_CTRL_tag AXBS_AON_CTRL; /* AXBS_AON_CTRL */
  AON_BLK_CTRL_S_AONMIX_DAP_ACCESS_STKYBIT_tag DAP_ACCESS_STKYBIT; /* Dap Access Sticky Bit */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_ELE_tag LP_HANDSHAKE_ELE; /* Low Power Handshake for ELE Register */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_ELE_tag LP_HANDSHAKE2_ELE; /* Low Power Handshake 2 for ELE Register */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_ELE_tag LP_HANDSHAKE3_ELE; /* Low Power Handshake 3 for ELE Register */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE_SM_tag LP_HANDSHAKE_SM; /* Low Power Handshake for System Manager */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE2_SM_tag LP_HANDSHAKE2_SM; /* Low Power Handshake 2 for System Manager */
  AON_BLK_CTRL_S_AONMIX_LP_HANDSHAKE3_SM_tag LP_HANDSHAKE3_SM; /* Low Power Handshake 3 for System Manager */
  AON_BLK_CTRL_S_AONMIX_SM_LP_HANDSHAKE_STATUS_tag SM_LP_HANDSHAKE_STATUS; /* Register interface for system manager to react for the lp_handshake */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved5[12];
  AON_BLK_CTRL_S_AONMIX_CA55_CPUWAIT_tag CA55_CPUWAIT; /* CPUWAIT settings for CA55 CPU */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_L_tag CA55_RVBARADDR0_L; /* CA55_RVBARADDR0_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR0_H_tag CA55_RVBARADDR0_H; /* CA55_RVBARADDR0_H */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_L_tag CA55_RVBARADDR1_L; /* CA55_RVBARADDR1_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR1_H_tag CA55_RVBARADDR1_H; /* CA55_RVBARADDR1_H */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_L_tag CA55_RVBARADDR2_L; /* CA55_RVBARADDR2_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR2_H_tag CA55_RVBARADDR2_H; /* CA55_RVBARADDR2_H */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_L_tag CA55_RVBARADDR3_L; /* CA55_RVBARADDR3_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR3_H_tag CA55_RVBARADDR3_H; /* CA55_RVBARADDR3_H */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_L_tag CA55_RVBARADDR4_L; /* CA55_RVBARADDR4_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR4_H_tag CA55_RVBARADDR4_H; /* CA55_RVBARADDR4_H */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_L_tag CA55_RVBARADDR5_L; /* CA55_RVBARADDR5_L */
  AON_BLK_CTRL_S_AONMIX_CA55_RVBARADDR5_H_tag CA55_RVBARADDR5_H; /* CA55_RVBARADDR5_H */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved6[12];
  AON_BLK_CTRL_S_AONMIX_ELE_IRQ_MASK_tag ELE_IRQ_MASK; /* Mask bits of ELE interrupt */
  AON_BLK_CTRL_S_AONMIX_ELE_RESET_REQ_MASK_tag ELE_RESET_REQ_MASK; /* Mask bits of ELE reset */
  AON_BLK_CTRL_S_AONMIX_ELE_HALT_STATUS_tag ELE_HALT_STATUS; /* ELE Halt Status Register */
  AON_BLK_CTRL_S_AONMIX_CA55_MODE_tag CA55_MODE; /* Control the boot mode of two ca55 cores */
  AON_BLK_CTRL_S_AONMIX_NMI_MASK_tag NMI_MASK; /* NMI MASK bits */
  AON_BLK_CTRL_S_AONMIX_NMI_CLR_tag NMI_CLR; /* NMI clear bit */
  AON_BLK_CTRL_S_AONMIX_WDOG_ANY_MASK_tag WDOG_ANY_MASK; /* Wdog any mask */
  uint8_t AON_BLK_CTRL_S_AONMIX_reserved7[4];
  AON_BLK_CTRL_S_AONMIX_MISC_CFG_tag MISC_CFG; /* Miscellaneous Configure Register */
  AON_BLK_CTRL_S_AONMIX_SW_FAULTS_tag SW_FAULTS; /* Software Generated Fault Register */
  AON_BLK_CTRL_S_AONMIX_ELE_GPO_STATUS_tag ELE_GPO_STATUS; /* ELE gpo status register */
  AON_BLK_CTRL_S_AONMIX_ELE_RST_REQ_STAT_tag ELE_RST_REQ_STAT; /* ELE Reset Request Status Register */
  AON_BLK_CTRL_S_AONMIX_ELE_IRQ_REQ_STAT_tag ELE_IRQ_REQ_STAT; /* ELE IRQ Request Status Register */
};


/* ============================================================================
   =============================== Module: AON_CAN_FD =========================
   ============================================================================ */

typedef union AON_CAN_FD_MCR_union_tag { /* Module Configuration */
  vuint32_t R;
  struct {
    vuint32_t MAXMB:7;                 /* Number of the Last Message Buffer */
    vuint32_t _unused_24:1;
    vuint32_t IDAM:2;                  /* ID Acceptance Mode */
    vuint32_t _unused_21:1;
    vuint32_t FDEN:1;                  /* CAN FD Operation Enable */
    vuint32_t AEN:1;                   /* Abort Enable */
    vuint32_t LPRIOEN:1;               /* Local Priority Enable */
    vuint32_t _unused_17:1;            /* Reserved */
    vuint32_t DMA:1;                   /* DMA Enable */
    vuint32_t IRMQ:1;                  /* Individual RX Masking and Queue Enable */
    vuint32_t SRXDIS:1;                /* Self-Reception Disable */
    vuint32_t DOZE:1;                  /* Doze Mode Enable */
    vuint32_t WAKSRC:1;                /* Wake-Up Source */
    vuint32_t LPMACK:1;                /* Low-Power Mode Acknowledge */
    vuint32_t WRNEN:1;                 /* Warning Interrupt Enable */
    vuint32_t SLFWAK:1;                /* Self Wake-Up */
    vuint32_t SUPV:1;                  /* Supervisor Mode */
    vuint32_t FRZACK:1;                /* Freeze Mode Acknowledge */
    vuint32_t SOFTRST:1;               /* Soft Reset */
    vuint32_t WAKMSK:1;                /* Wake-Up Interrupt Mask */
    vuint32_t NOTRDY:1;                /* FlexCAN Not Ready */
    vuint32_t HALT:1;                  /* Halt FlexCAN */
    vuint32_t RFEN:1;                  /* Legacy RX FIFO Enable */
    vuint32_t FRZ:1;                   /* Freeze Enable */
    vuint32_t MDIS:1;                  /* Module Disable */
  } B;
} AON_CAN_FD_MCR_tag;

typedef union AON_CAN_FD_CTRL1_union_tag { /* Control 1 */
  vuint32_t R;
  struct {
    vuint32_t PROPSEG:3;               /* Propagation Segment */
    vuint32_t LOM:1;                   /* Listen-Only Mode */
    vuint32_t LBUF:1;                  /* Lowest Buffer Transmitted First */
    vuint32_t TSYN:1;                  /* Timer Sync */
    vuint32_t BOFFREC:1;               /* Bus Off Recovery */
    vuint32_t SMP:1;                   /* CAN Bit Sampling */
    vuint32_t _unused_23:1;
    vuint32_t _unused_22:1;
    vuint32_t RWRNMSK:1;               /* RX Warning Interrupt Mask */
    vuint32_t TWRNMSK:1;               /* TX Warning Interrupt Mask */
    vuint32_t LPB:1;                   /* Loopback Mode */
    vuint32_t CLKSRC:1;                /* CAN Engine Clock Source */
    vuint32_t ERRMSK:1;                /* Error Interrupt Mask */
    vuint32_t BOFFMSK:1;               /* Bus Off Interrupt Mask */
    vuint32_t PSEG2:3;                 /* Phase Segment 2 */
    vuint32_t PSEG1:3;                 /* Phase Segment 1 */
    vuint32_t RJW:2;                   /* Resync Jump Width */
    vuint32_t PRESDIV:8;               /* Prescaler Division Factor */
  } B;
} AON_CAN_FD_CTRL1_tag;

typedef union AON_CAN_FD_TIMER_union_tag { /* Free-Running Timer */
  vuint32_t R;
  struct {
    vuint32_t TIMER:16;                /* Timer Value */
    vuint32_t _unused_0:16;
  } B;
} AON_CAN_FD_TIMER_tag;

typedef union AON_CAN_FD_RXMGMASK_union_tag { /* RX Message Buffers Global Mask */
  vuint32_t R;
  struct {
    vuint32_t MG:32;                   /* Global Mask for RX Message Buffers */
  } B;
} AON_CAN_FD_RXMGMASK_tag;

typedef union AON_CAN_FD_RX14MASK_union_tag { /* Receive 14 Mask */
  vuint32_t R;
  struct {
    vuint32_t RX14M:32;                /* RX Buffer 14 Mask Bits */
  } B;
} AON_CAN_FD_RX14MASK_tag;

typedef union AON_CAN_FD_RX15MASK_union_tag { /* Receive 15 Mask */
  vuint32_t R;
  struct {
    vuint32_t RX15M:32;                /* RX Buffer 15 Mask Bits */
  } B;
} AON_CAN_FD_RX15MASK_tag;

typedef union AON_CAN_FD_ECR_union_tag { /* Error Counter */
  vuint32_t R;
  struct {
    vuint32_t TXERRCNT:8;              /* Transmit Error Counter */
    vuint32_t RXERRCNT:8;              /* Receive Error Counter */
    vuint32_t TXERRCNT_FAST:8;         /* Transmit Error Counter for Fast Bits */
    vuint32_t RXERRCNT_FAST:8;         /* Receive Error Counter for Fast Bits */
  } B;
} AON_CAN_FD_ECR_tag;

typedef union AON_CAN_FD_ESR1_union_tag { /* Error and Status 1 */
  vuint32_t R;
  struct {
    vuint32_t WAKINT:1;                /* Wake-Up Interrupt Flag */
    vuint32_t ERRINT:1;                /* Error Interrupt Flag */
    vuint32_t BOFFINT:1;               /* Bus Off Interrupt Flag */
    vuint32_t RX:1;                    /* FlexCAN in Reception Flag */
    vuint32_t FLTCONF:2;               /* Fault Confinement State */
    vuint32_t TX:1;                    /* FlexCAN In Transmission */
    vuint32_t IDLE:1;                  /* Idle */
    vuint32_t RXWRN:1;                 /* RX Error Warning Flag */
    vuint32_t TXWRN:1;                 /* TX Error Warning Flag */
    vuint32_t STFERR:1;                /* Stuffing Error Flag */
    vuint32_t FRMERR:1;                /* Form Error Flag */
    vuint32_t CRCERR:1;                /* Cyclic Redundancy Check Error Flag */
    vuint32_t ACKERR:1;                /* Acknowledge Error Flag */
    vuint32_t BIT0ERR:1;               /* Bit0 Error Flag */
    vuint32_t BIT1ERR:1;               /* Bit1 Error Flag */
    vuint32_t RWRNINT:1;               /* RX Warning Interrupt Flag */
    vuint32_t TWRNINT:1;               /* TX Warning Interrupt Flag */
    vuint32_t SYNCH:1;                 /* CAN Synchronization Status Flag */
    vuint32_t BOFFDONEINT:1;           /* Bus Off Done Interrupt Flag */
    vuint32_t ERRINT_FAST:1;           /* Fast Error Interrupt Flag */
    vuint32_t ERROVR:1;                /* Error Overrun Flag */
    vuint32_t _unused_9:1;
    vuint32_t _unused_8:1;
    vuint32_t _unused_6:2;
    vuint32_t STFERR_FAST:1;           /* Fast Stuffing Error Flag */
    vuint32_t FRMERR_FAST:1;           /* Fast Form Error Flag */
    vuint32_t CRCERR_FAST:1;           /* Fast Cyclic Redundancy Check Error Flag */
    vuint32_t _unused_2:1;
    vuint32_t BIT0ERR_FAST:1;          /* Fast Bit0 Error Flag */
    vuint32_t BIT1ERR_FAST:1;          /* Fast Bit1 Error Flag */
  } B;
} AON_CAN_FD_ESR1_tag;

typedef union AON_CAN_FD_IMASK2_union_tag { /* Interrupt Masks 2 */
  vuint32_t R;
  struct {
    vuint32_t BUF63TO32M:32;           /* Buffer MBi Mask */
  } B;
} AON_CAN_FD_IMASK2_tag;

typedef union AON_CAN_FD_IMASK1_union_tag { /* Interrupt Masks 1 */
  vuint32_t R;
  struct {
    vuint32_t BUF31TO0M:32;            /* Buffer MBi Mask */
  } B;
} AON_CAN_FD_IMASK1_tag;

typedef union AON_CAN_FD_IFLAG2_union_tag { /* Interrupt Flags 2 */
  vuint32_t R;
  struct {
    vuint32_t BUF63TO32I:32;           /* Buffer MBi Interrupt */
  } B;
} AON_CAN_FD_IFLAG2_tag;

typedef union AON_CAN_FD_IFLAG1_union_tag { /* Interrupt Flags 1 */
  vuint32_t R;
  struct {
    vuint32_t BUF0I:1;                 /* Buffer MB0 Interrupt or Clear Legacy FIFO bit */
    vuint32_t BUF4TO1I:4;              /* Buffer MBi Interrupt or Reserved */
    vuint32_t BUF5I:1;                 /* Buffer MB5 Interrupt or Frames available in Legacy RX FIFO */
    vuint32_t BUF6I:1;                 /* Buffer MB6 Interrupt or Legacy RX FIFO Warning */
    vuint32_t BUF7I:1;                 /* Buffer MB7 Interrupt or Legacy RX FIFO Overflow */
    vuint32_t BUF31TO8I:24;            /* Buffer MBi Interrupt */
  } B;
} AON_CAN_FD_IFLAG1_tag;

typedef union AON_CAN_FD_CTRL2_union_tag { /* Control 2 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t _unused_27:3;
    vuint32_t _unused_26:1;
    vuint32_t TSTAMPCAP:2;             /* Timestamp Capture Point */
    vuint32_t MBTSBASE:2;              /* Message Buffer Timestamp Base */
    vuint32_t _unused_21:1;
    vuint32_t EDFLTDIS:1;              /* Edge Filter Disable */
    vuint32_t ISOCANFDEN:1;            /* ISO CAN FD Enable */
    vuint32_t BTE:1;                   /* Bit Timing Expansion Enable */
    vuint32_t PREXCEN:1;               /* Protocol Exception Enable */
    vuint32_t TIMER_SRC:1;             /* Timer Source */
    vuint32_t EACEN:1;                 /* Entire Frame Arbitration Field Comparison Enable for RX Message Buffers */
    vuint32_t RRS:1;                   /* Remote Request Storing */
    vuint32_t MRP:1;                   /* Message Buffers Reception Priority */
    vuint32_t TASD:5;                  /* Transmission Arbitration Start Delay */
    vuint32_t RFFN:4;                  /* Number of Legacy Receive FIFO Filters */
    vuint32_t WRMFRZ:1;                /* Write Access to Memory in Freeze Mode */
    vuint32_t ECRWRE:1;                /* Error Correction Configuration Register Write Enable */
    vuint32_t BOFFDONEMSK:1;           /* Bus Off Done Interrupt Mask */
    vuint32_t ERRMSK_FAST:1;           /* Error Interrupt Mask for Errors Detected in the Data Phase of Fast CAN FD Frames */
  } B;
} AON_CAN_FD_CTRL2_tag;

typedef union AON_CAN_FD_ESR2_union_tag { /* Error and Status 2 */
  vuint32_t R;
  struct {
    vuint32_t _unused_20:12;
    vuint32_t _unused_19:1;
    vuint32_t IMB:1;                   /* Inactive Message Buffer */
    vuint32_t VPS:1;                   /* Valid Priority Status */
    vuint32_t _unused_16:1;
    vuint32_t LPTM:7;                  /* Lowest Priority TX Message Buffer */
    vuint32_t _unused_0:9;
  } B;
} AON_CAN_FD_ESR2_tag;

typedef union AON_CAN_FD_CRCR_union_tag { /* Cyclic Redundancy Check */
  vuint32_t R;
  struct {
    vuint32_t TXCRC:15;                /* Transmitted CRC value */
    vuint32_t _unused_16:1;
    vuint32_t MBCRC:7;                 /* CRC Message Buffer */
    vuint32_t _unused_0:9;
  } B;
} AON_CAN_FD_CRCR_tag;

typedef union AON_CAN_FD_RXFGMASK_union_tag { /* Legacy RX FIFO Global Mask */
  vuint32_t R;
  struct {
    vuint32_t FGM:32;                  /* Legacy RX FIFO Global Mask Bits */
  } B;
} AON_CAN_FD_RXFGMASK_tag;

typedef union AON_CAN_FD_RXFIR_union_tag { /* Legacy RX FIFO Information */
  vuint32_t R;
  struct {
    vuint32_t IDHIT:9;                 /* Identifier Acceptance Filter Hit Indicator */
    vuint32_t _unused_0:23;
  } B;
} AON_CAN_FD_RXFIR_tag;

typedef union AON_CAN_FD_CBT_union_tag { /* CAN Bit Timing */
  vuint32_t R;
  struct {
    vuint32_t EPSEG2:5;                /* Extended Phase Segment 2 */
    vuint32_t EPSEG1:5;                /* Extended Phase Segment 1 */
    vuint32_t EPROPSEG:6;              /* Extended Propagation Segment */
    vuint32_t ERJW:5;                  /* Extended Resync Jump Width */
    vuint32_t EPRESDIV:10;             /* Extended Prescaler Division Factor */
    vuint32_t BTF:1;                   /* Bit Timing Format Enable */
  } B;
} AON_CAN_FD_CBT_tag;

typedef union AON_CAN_FD_IMASK3_union_tag { /* Interrupt Masks 3 */
  vuint32_t R;
  struct {
    vuint32_t BUF95TO64M:32;           /* Buffer MBi Mask */
  } B;
} AON_CAN_FD_IMASK3_tag;

typedef union AON_CAN_FD_IFLAG3_union_tag { /* Interrupt Flags 3 */
  vuint32_t R;
  struct {
    vuint32_t BUF95TO64:32;            /* Buffer MBi Interrupt */
  } B;
} AON_CAN_FD_IFLAG3_tag;

typedef union AON_CAN_FD_FLTCONF_IE_union_tag { /* Fault Confinement Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t ATP_IE:1;                /* Active to Passive Interrupt Enable */
    vuint32_t PTA_IE:1;                /* Passive to Active Interrupt Enable */
    vuint32_t _unused_0:30;
  } B;
} AON_CAN_FD_FLTCONF_IE_tag;

typedef union AON_CAN_FD_RXIMR_union_tag { /* Receive Individual Mask */
  vuint32_t R;
  struct {
    vuint32_t MI:32;                   /* Individual Mask Bits */
  } B;
} AON_CAN_FD_RXIMR_tag;

typedef union AON_CAN_FD_MECR_union_tag { /* Memory Error Control */
  vuint32_t R;
  struct {
    vuint32_t _unused_25:7;
    vuint32_t NCEFAFRZ:1;              /* Non-Correctable Errors in FlexCAN Access Put Device in Freeze Mode */
    vuint32_t ECCDIS:1;                /* Error Correction Disable */
    vuint32_t RERRDIS:1;               /* Error Report Disable */
    vuint32_t _unused_19:3;
    vuint32_t EXTERRIE:1;              /* Extended Error Injection Enable */
    vuint32_t FAERRIE:1;               /* FlexCAN Access Error Injection Enable */
    vuint32_t HAERRIE:1;               /* Host Access Error Injection Enable */
    vuint32_t CEI_MSK:1;               /* Correctable Errors Interrupt Mask */
    vuint32_t _unused_14:1;
    vuint32_t FANCEI_MSK:1;            /* FlexCAN Access with Non-Correctable Errors Interrupt Mask */
    vuint32_t HANCEI_MSK:1;            /* Host Access with Non-Correctable Errors Interrupt Mask */
    vuint32_t _unused_1:11;
    vuint32_t ECRWRDIS:1;              /* Error Configuration Register Write Disable */
  } B;
} AON_CAN_FD_MECR_tag;

typedef union AON_CAN_FD_ERRIAR_union_tag { /* Error Injection Address */
  vuint32_t R;
  struct {
    vuint32_t INJADDR_L:2;             /* Error Injection Address Low */
    vuint32_t INJADDR_H:12;            /* Error Injection Address High */
    vuint32_t _unused_0:18;
  } B;
} AON_CAN_FD_ERRIAR_tag;

typedef union AON_CAN_FD_ERRIDPR_union_tag { /* Error Injection Data Pattern */
  vuint32_t R;
  struct {
    vuint32_t DFLIP:32;                /* Data Flip Pattern */
  } B;
} AON_CAN_FD_ERRIDPR_tag;

typedef union AON_CAN_FD_ERRIPPR_union_tag { /* Error Injection Parity Pattern */
  vuint32_t R;
  struct {
    vuint32_t PFLIP0:5;                /* Parity Flip Pattern for Byte 0 (Least Significant) */
    vuint32_t _unused_24:3;
    vuint32_t PFLIP1:5;                /* Parity Flip Pattern for Byte 1 */
    vuint32_t _unused_16:3;
    vuint32_t PFLIP2:5;                /* Parity Flip Pattern for Byte 2 */
    vuint32_t _unused_8:3;
    vuint32_t PFLIP3:5;                /* Parity Flip Pattern for Byte 3 (Most Significant) */
    vuint32_t _unused_0:3;
  } B;
} AON_CAN_FD_ERRIPPR_tag;

typedef union AON_CAN_FD_RERRAR_union_tag { /* Error Report Address */
  vuint32_t R;
  struct {
    vuint32_t ERRADDR:14;              /* Address Where Error Detected */
    vuint32_t _unused_16:2;
    vuint32_t SAID:3;                  /* SAID */
    vuint32_t _unused_8:5;
    vuint32_t NCE:1;                   /* Non-Correctable Error */
    vuint32_t _unused_0:7;
  } B;
} AON_CAN_FD_RERRAR_tag;

typedef union AON_CAN_FD_RERRDR_union_tag { /* Error Report Data */
  vuint32_t R;
  struct {
    vuint32_t RDATA:32;                /* Raw Data Word Read from Memory with Error */
  } B;
} AON_CAN_FD_RERRDR_tag;

typedef union AON_CAN_FD_RERRSYNR_union_tag { /* Error Report Syndrome */
  vuint32_t R;
  struct {
    vuint32_t SYND0:5;                 /* Error Syndrome for Byte 0 (Least Significant) */
    vuint32_t _unused_25:2;
    vuint32_t BE0:1;                   /* Byte Enabled for Byte 0 (Least Significant) */
    vuint32_t SYND1:5;                 /* Error Syndrome for Byte 1 */
    vuint32_t _unused_17:2;
    vuint32_t BE1:1;                   /* Byte Enabled for Byte 1 */
    vuint32_t SYND2:5;                 /* Error Syndrome for Byte 2 */
    vuint32_t _unused_9:2;
    vuint32_t BE2:1;                   /* Byte Enabled for Byte 2 */
    vuint32_t SYND3:5;                 /* Error Syndrome for Byte 3 (Most Significant) */
    vuint32_t _unused_1:2;
    vuint32_t BE3:1;                   /* Byte Enabled for Byte 3 (Most Significant) */
  } B;
} AON_CAN_FD_RERRSYNR_tag;

typedef union AON_CAN_FD_ERRSR_union_tag { /* Error Status */
  vuint32_t R;
  struct {
    vuint32_t CEIOF:1;                 /* Correctable Error Interrupt Overrun Flag */
    vuint32_t _unused_30:1;
    vuint32_t FANCEIOF:1;              /* FlexCAN Access with Non-Correctable Error Interrupt Overrun Flag */
    vuint32_t HANCEIOF:1;              /* Host Access With Non-Correctable Error Interrupt Overrun Flag */
    vuint32_t _unused_16:12;
    vuint32_t CEIF:1;                  /* Correctable Error Interrupt Flag */
    vuint32_t _unused_14:1;
    vuint32_t FANCEIF:1;               /* FlexCAN Access with Non-Correctable Error Interrupt Flag */
    vuint32_t HANCEIF:1;               /* Host Access with Noncorrectable Error Interrupt Flag */
    vuint32_t _unused_0:12;
  } B;
} AON_CAN_FD_ERRSR_tag;

typedef union AON_CAN_FD_EPRS_union_tag { /* Enhanced CAN Bit Timing Prescalers */
  vuint32_t R;
  struct {
    vuint32_t ENPRESDIV:10;            /* Extended Nominal Prescaler Division Factor */
    vuint32_t _unused_16:6;
    vuint32_t EDPRESDIV:10;            /* Extended Data Phase Prescaler Division Factor */
    vuint32_t _unused_0:6;
  } B;
} AON_CAN_FD_EPRS_tag;

typedef union AON_CAN_FD_ENCBT_union_tag { /* Enhanced Nominal CAN Bit Timing */
  vuint32_t R;
  struct {
    vuint32_t NTSEG1:8;                /* Nominal Time Segment 1 */
    vuint32_t _unused_20:4;
    vuint32_t NTSEG2:7;                /* Nominal Time Segment 2 */
    vuint32_t _unused_10:3;
    vuint32_t NRJW:7;                  /* Nominal Resynchronization Jump Width */
    vuint32_t _unused_0:3;
  } B;
} AON_CAN_FD_ENCBT_tag;

typedef union AON_CAN_FD_EDCBT_union_tag { /* Enhanced Data Phase CAN Bit Timing */
  vuint32_t R;
  struct {
    vuint32_t DTSEG1:5;                /* Data Phase Segment 1 */
    vuint32_t _unused_20:7;
    vuint32_t DTSEG2:4;                /* Data Phase Time Segment 2 */
    vuint32_t _unused_10:6;
    vuint32_t DRJW:4;                  /* Data Phase Resynchronization Jump Width */
    vuint32_t _unused_0:6;
  } B;
} AON_CAN_FD_EDCBT_tag;

typedef union AON_CAN_FD_ETDC_union_tag { /* Enhanced Transceiver Delay Compensation */
  vuint32_t R;
  struct {
    vuint32_t ETDCVAL:8;               /* Enhanced Transceiver Delay Compensation Value */
    vuint32_t _unused_17:7;
    vuint32_t ETDCFAIL:1;              /* Transceiver Delay Compensation Fail */
    vuint32_t ETDCOFF:7;               /* Enhanced Transceiver Delay Compensation Offset */
    vuint32_t _unused_2:7;
    vuint32_t TDMDIS:1;                /* Transceiver Delay Measurement Disable */
    vuint32_t ETDCEN:1;                /* Transceiver Delay Compensation Enable */
  } B;
} AON_CAN_FD_ETDC_tag;

typedef union AON_CAN_FD_FDCTRL_union_tag { /* CAN FD Control */
  vuint32_t R;
  struct {
    vuint32_t TDCVAL:6;                /* Transceiver Delay Compensation Value */
    vuint32_t _unused_24:2;
    vuint32_t TDCOFF:5;                /* Transceiver Delay Compensation Offset */
    vuint32_t _unused_18:1;
    vuint32_t TDCFAIL:1;               /* Transceiver Delay Compensation Fail */
    vuint32_t TDCEN:1;                 /* Transceiver Delay Compensation Enable */
    vuint32_t MBDSR0:2;                /* Message Buffer Data Size for Region 0 */
    vuint32_t _unused_13:1;
    vuint32_t MBDSR1:2;                /* Message Buffer Data Size for Region 1 */
    vuint32_t _unused_10:1;
    vuint32_t MBDSR2:2;                /* Message Buffer Data Size for Region 2 */
    vuint32_t _unused_7:1;
    vuint32_t _unused_5:2;
    vuint32_t _unused_1:4;
    vuint32_t FDRATE:1;                /* Bit Rate Switch Enable */
  } B;
} AON_CAN_FD_FDCTRL_tag;

typedef union AON_CAN_FD_FDCBT_union_tag { /* CAN FD Bit Timing */
  vuint32_t R;
  struct {
    vuint32_t FPSEG2:3;                /* Fast Phase Segment 2 */
    vuint32_t _unused_27:2;
    vuint32_t FPSEG1:3;                /* Fast Phase Segment 1 */
    vuint32_t _unused_22:2;
    vuint32_t FPROPSEG:5;              /* Fast Propagation Segment */
    vuint32_t _unused_16:1;
    vuint32_t FRJW:3;                  /* Fast Resync Jump Width */
    vuint32_t _unused_12:1;
    vuint32_t FPRESDIV:10;             /* Fast Prescaler Division Factor */
    vuint32_t _unused_0:2;
  } B;
} AON_CAN_FD_FDCBT_tag;

typedef union AON_CAN_FD_FDCRC_union_tag { /* CAN FD CRC */
  vuint32_t R;
  struct {
    vuint32_t FD_TXCRC:21;             /* Extended Transmitted CRC value */
    vuint32_t _unused_8:3;
    vuint32_t FD_MBCRC:7;              /* CRC Message Buffer Number for FD_TXCRC */
    vuint32_t _unused_0:1;
  } B;
} AON_CAN_FD_FDCRC_tag;

typedef union AON_CAN_FD_ERFCR_union_tag { /* Enhanced RX FIFO Control */
  vuint32_t R;
  struct {
    vuint32_t ERFWM:5;                 /* Enhanced RX FIFO Watermark */
    vuint32_t _unused_24:3;
    vuint32_t NFE:6;                   /* Number of Enhanced RX FIFO Filter Elements */
    vuint32_t _unused_16:2;
    vuint32_t NEXIF:7;                 /* Number of Extended ID Filter Elements */
    vuint32_t _unused_6:3;
    vuint32_t DMALW:5;                 /* DMA Last Word */
    vuint32_t ERFEN:1;                 /* Enhanced RX FIFO enable */
  } B;
} AON_CAN_FD_ERFCR_tag;

typedef union AON_CAN_FD_ERFIER_union_tag { /* Enhanced RX FIFO Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t _unused_17:15;
    vuint32_t _unused_16:1;
    vuint32_t _unused_4:12;
    vuint32_t ERFDAIE:1;               /* Enhanced RX FIFO Data Available Interrupt Enable */
    vuint32_t ERFWMIIE:1;              /* Enhanced RX FIFO Watermark Indication Interrupt Enable */
    vuint32_t ERFOVFIE:1;              /* Enhanced RX FIFO Overflow Interrupt Enable */
    vuint32_t ERFUFWIE:1;              /* Enhanced RX FIFO Underflow Interrupt Enable */
  } B;
} AON_CAN_FD_ERFIER_tag;

typedef union AON_CAN_FD_ERFSR_union_tag { /* Enhanced RX FIFO Status */
  vuint32_t R;
  struct {
    vuint32_t ERFEL:6;                 /* Enhanced RX FIFO Elements */
    vuint32_t _unused_17:9;
    vuint32_t _unused_16:1;
    vuint32_t ERFF:1;                  /* Enhanced RX FIFO Full Flag */
    vuint32_t ERFE:1;                  /* Enhanced RX FIFO Empty Flag */
    vuint32_t _unused_5:9;
    vuint32_t ERFCLR:1;                /* Enhanced RX FIFO Clear */
    vuint32_t ERFDA:1;                 /* Enhanced RX FIFO Data Available Flag */
    vuint32_t ERFWMI:1;                /* Enhanced RX FIFO Watermark Indication Flag */
    vuint32_t ERFOVF:1;                /* Enhanced RX FIFO Overflow Flag */
    vuint32_t ERFUFW:1;                /* Enhanced RX FIFO Underflow Flag */
  } B;
} AON_CAN_FD_ERFSR_tag;

typedef union AON_CAN_FD_HR_TIME_STAMP_union_tag { /* High-Resolution Timestamp */
  vuint32_t R;
  struct {
    vuint32_t TS:32;                   /* High-Resolution Timestamp */
  } B;
} AON_CAN_FD_HR_TIME_STAMP_tag;

typedef union AON_CAN_FD_ERFFEL_union_tag { /* Enhanced RX FIFO Filter Element */
  vuint32_t R;
  struct {
    vuint32_t FEL:32;                  /* Filter Element Bits */
  } B;
} AON_CAN_FD_ERFFEL_tag;

struct AON_CAN_FD_tag {
  AON_CAN_FD_MCR_tag MCR;              /* Module Configuration */
  AON_CAN_FD_CTRL1_tag CTRL1;          /* Control 1 */
  AON_CAN_FD_TIMER_tag TIMER;          /* Free-Running Timer */
  uint8_t AON_CAN_FD_reserved0[4];
  AON_CAN_FD_RXMGMASK_tag RXMGMASK;    /* RX Message Buffers Global Mask */
  AON_CAN_FD_RX14MASK_tag RX14MASK;    /* Receive 14 Mask */
  AON_CAN_FD_RX15MASK_tag RX15MASK;    /* Receive 15 Mask */
  AON_CAN_FD_ECR_tag ECR;              /* Error Counter */
  AON_CAN_FD_ESR1_tag ESR1;            /* Error and Status 1 */
  AON_CAN_FD_IMASK2_tag IMASK2;        /* Interrupt Masks 2 */
  AON_CAN_FD_IMASK1_tag IMASK1;        /* Interrupt Masks 1 */
  AON_CAN_FD_IFLAG2_tag IFLAG2;        /* Interrupt Flags 2 */
  AON_CAN_FD_IFLAG1_tag IFLAG1;        /* Interrupt Flags 1 */
  AON_CAN_FD_CTRL2_tag CTRL2;          /* Control 2 */
  AON_CAN_FD_ESR2_tag ESR2;            /* Error and Status 2 */
  uint8_t AON_CAN_FD_reserved1[8];
  AON_CAN_FD_CRCR_tag CRCR;            /* Cyclic Redundancy Check */
  AON_CAN_FD_RXFGMASK_tag RXFGMASK;    /* Legacy RX FIFO Global Mask */
  AON_CAN_FD_RXFIR_tag RXFIR;          /* Legacy RX FIFO Information */
  AON_CAN_FD_CBT_tag CBT;              /* CAN Bit Timing */
  uint8_t AON_CAN_FD_reserved2[24];
  AON_CAN_FD_IMASK3_tag IMASK3;        /* Interrupt Masks 3 */
  uint8_t AON_CAN_FD_reserved3[4];
  AON_CAN_FD_IFLAG3_tag IFLAG3;        /* Interrupt Flags 3 */
  uint8_t AON_CAN_FD_reserved4[2056];
  AON_CAN_FD_RXIMR_tag RXIMR[96];      /* Receive Individual Mask */
  uint8_t AON_CAN_FD_reserved5[224];
  AON_CAN_FD_MECR_tag MECR;            /* Memory Error Control */
  AON_CAN_FD_ERRIAR_tag ERRIAR;        /* Error Injection Address */
  AON_CAN_FD_ERRIDPR_tag ERRIDPR;      /* Error Injection Data Pattern */
  AON_CAN_FD_ERRIPPR_tag ERRIPPR;      /* Error Injection Parity Pattern */
  AON_CAN_FD_RERRAR_tag RERRAR;        /* Error Report Address */
  AON_CAN_FD_RERRDR_tag RERRDR;        /* Error Report Data */
  AON_CAN_FD_RERRSYNR_tag RERRSYNR;    /* Error Report Syndrome */
  AON_CAN_FD_ERRSR_tag ERRSR;          /* Error Status */
  uint8_t AON_CAN_FD_reserved6[240];
  AON_CAN_FD_EPRS_tag EPRS;            /* Enhanced CAN Bit Timing Prescalers */
  AON_CAN_FD_ENCBT_tag ENCBT;          /* Enhanced Nominal CAN Bit Timing */
  AON_CAN_FD_EDCBT_tag EDCBT;          /* Enhanced Data Phase CAN Bit Timing */
  AON_CAN_FD_ETDC_tag ETDC;            /* Enhanced Transceiver Delay Compensation */
  AON_CAN_FD_FDCTRL_tag FDCTRL;        /* CAN FD Control */
  AON_CAN_FD_FDCBT_tag FDCBT;          /* CAN FD Bit Timing */
  AON_CAN_FD_FDCRC_tag FDCRC;          /* CAN FD CRC */
  AON_CAN_FD_ERFCR_tag ERFCR;          /* Enhanced RX FIFO Control */
  AON_CAN_FD_ERFIER_tag ERFIER;        /* Enhanced RX FIFO Interrupt Enable */
  AON_CAN_FD_ERFSR_tag ERFSR;          /* Enhanced RX FIFO Status */
  uint8_t AON_CAN_FD_reserved7[24];
  AON_CAN_FD_HR_TIME_STAMP_tag HR_TIME_STAMP[96]; /* High-Resolution Timestamp */
  uint8_t AON_CAN_FD_reserved8[8784];
  AON_CAN_FD_ERFFEL_tag ERFFEL[128];   /* Enhanced RX FIFO Filter Element */
};


/* ============================================================================
   =============================== Module: AON_CMU ============================
   ============================================================================ */

typedef union AON_CMU_GCR_union_tag {  /* Global Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t FCE:1;                   /* Frequency Check Enable */
    vuint32_t _unused_0:31;
  } B;
} AON_CMU_GCR_tag;

typedef union AON_CMU_RCCR_union_tag { /* Reference Count Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t REF_CNT:16;              /* Reference clock count */
    vuint32_t _unused_0:16;
  } B;
} AON_CMU_RCCR_tag;

typedef union AON_CMU_HTCR_union_tag { /* High Threshold Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t HFREF:24;                /* High frequency reference threshold */
    vuint32_t _unused_0:8;
  } B;
} AON_CMU_HTCR_tag;

typedef union AON_CMU_LTCR_union_tag { /* Low Threshold Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t LFREF:24;                /* Low Frequency Reference Threshold */
    vuint32_t _unused_0:8;
  } B;
} AON_CMU_LTCR_tag;

typedef union AON_CMU_SR_union_tag {   /* Status Register */
  vuint32_t R;
  struct {
    vuint32_t FLL:1;                   /* Frequency lower than low frequency reference threshold event status */
    vuint32_t FHH:1;                   /* Frequency higher than high frequency reference threshold event status */
    vuint32_t _unused_28:2;
    vuint32_t RS:1;                    /* Run Status */
    vuint32_t _unused_0:27;
  } B;
} AON_CMU_SR_tag;

typedef union AON_CMU_IER_union_tag {  /* Interrupt Enable Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t _unused_30:1;
    vuint32_t FLLAIE:1;                /* Frequency Lower than Low Frequency Reference Threshold Asynchronous Interrupt Enable */
    vuint32_t FHHAIE:1;                /* Frequency Higher than High Frequency Reference Threshold Asynchronous Interrupt Enable */
    vuint32_t _unused_16:12;
    vuint32_t _unused_14:2;
    vuint32_t _unused_12:2;
    vuint32_t _unused_10:2;
    vuint32_t _unused_9:1;
    vuint32_t _unused_8:1;
    vuint32_t _unused_0:8;
  } B;
} AON_CMU_IER_tag;

struct AON_CMU_tag {
  AON_CMU_GCR_tag GCR;                 /* Global Configuration Register */
  AON_CMU_RCCR_tag RCCR;               /* Reference Count Configuration Register */
  AON_CMU_HTCR_tag HTCR;               /* High Threshold Configuration Register */
  AON_CMU_LTCR_tag LTCR;               /* Low Threshold Configuration Register */
  AON_CMU_SR_tag SR;                   /* Status Register */
  AON_CMU_IER_tag IER;                 /* Interrupt Enable Register */
};


/* ============================================================================
   =============================== Module: AON_CRC ============================
   ============================================================================ */

typedef union AON_CRC_CHANNEL_CFG_union_tag { /* Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t INV:1;                   /* Inversion selection */
    vuint32_t SWAP:1;                  /* Swap selection */
    vuint32_t POLYG:2;                 /* Polynomial selection */
    vuint32_t SWAP_BITWISE:1;          /* Swap CRC_INP bit-wise */
    vuint32_t SWAP_BYTEWISE:1;         /* Swap CRC_INP byte-wise */
    vuint32_t _unused_8:18;
    vuint32_t _unused_0:8;
  } B;
} AON_CRC_CHANNEL_CFG_tag;

typedef union AON_CRC_CHANNEL_INP_union_tag { /* Input Register */
  vuint32_t R;
  struct {
    vuint32_t INP:32;                  /* Input data for the CRC computation */
  } B;
} AON_CRC_CHANNEL_INP_tag;

typedef union AON_CRC_CHANNEL_CSTAT_union_tag { /* Current Status Register */
  vuint32_t R;
  struct {
    vuint32_t CSTAT:32;                /* CRC signature status */
  } B;
} AON_CRC_CHANNEL_CSTAT_tag;

typedef union AON_CRC_CHANNEL_OUTP_union_tag { /* Output Register */
  vuint32_t R;
  struct {
    vuint32_t OUTP:32;                 /* Final CRC signature */
  } B;
} AON_CRC_CHANNEL_OUTP_tag;

typedef struct AON_CRC_CHANNEL_struct_tag {
  AON_CRC_CHANNEL_CFG_tag CFG;         /* Configuration Register */
  AON_CRC_CHANNEL_INP_tag INP;         /* Input Register */
  AON_CRC_CHANNEL_CSTAT_tag CSTAT;     /* Current Status Register */
  AON_CRC_CHANNEL_OUTP_tag OUTP;       /* Output Register */
} AON_CRC_CHANNEL_tag;

struct AON_CRC_tag {
  AON_CRC_CHANNEL_tag CHANNEL[3];
};


/* ============================================================================
   =============================== Module: AON_CSTCU ==========================
   ============================================================================ */

typedef union AON_CSTCU_RUNSWREG_union_tag { /* Run Software */
  vuint32_t R;
  struct {
    vuint32_t RUNSW:1;                 /* Run Software */
    vuint32_t _unused_28:3;
    vuint32_t SW_ABORT:1;              /* Software Abort */
    vuint32_t _unused_0:27;
  } B;
} AON_CSTCU_RUNSWREG_tag;

typedef union AON_CSTCU_LSCHLVLD_union_tag { /* LSTCU Scheduler List Valid */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t _unused_24:7;
    vuint32_t MBPLVLD:1;               /* LSTCU MBIST Pointer List Valid */
    vuint32_t _unused_16:7;
    vuint32_t _unused_15:1;
    vuint32_t _unused_8:7;
    vuint32_t _unused_0:8;
  } B;
} AON_CSTCU_LSCHLVLD_tag;

typedef union AON_CSTCU_WDG_union_tag { /* Watchdog Timer */
  vuint32_t R;
  struct {
    vuint32_t WDGEOC:32;               /* Watchdog End of Counter */
  } B;
} AON_CSTCU_WDG_tag;

typedef union AON_CSTCU_IE_union_tag { /* Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t STEND_IE:1;              /* Self-Test End Interrupt Enable */
    vuint32_t _unused_0:31;
  } B;
} AON_CSTCU_IE_tag;

typedef union AON_CSTCU_IF_union_tag { /* Interrupt Flag */
  vuint32_t R;
  struct {
    vuint32_t STEND_IF:1;              /* Self-test End Interrupt Flag */
    vuint32_t _unused_0:31;
  } B;
} AON_CSTCU_IF_tag;

typedef union AON_CSTCU_ERR_STAT_union_tag { /* Error Status */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVP_MB:1;               /* Invalid LSTCU Pointer During MBIST Scheduling */
    vuint32_t _unused_29:1;
    vuint32_t _unused_24:5;
    vuint32_t ABORTHW:1;               /* Hardware Abort Flag */
    vuint32_t ABORTSW:1;               /* Software Abort Flag */
    vuint32_t _unused_16:6;
    vuint32_t UFSF:1;                  /* Unrecoverable Fault Status Flag */
    vuint32_t RFSF:1;                  /* Recoverable Fault Status Flag */
    vuint32_t _unused_0:14;
  } B;
} AON_CSTCU_ERR_STAT_tag;

typedef union AON_CSTCU_ERR_FM_union_tag { /* Error Fault Mapping */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVPFMMB:1;              /* MBIST Fault Mapping */
    vuint32_t _unused_29:1;
    vuint32_t _unused_0:29;
  } B;
} AON_CSTCU_ERR_FM_tag;

typedef union AON_CSTCU_LRFSTAT_union_tag { /* LSTCU Recoverable Fault Status */
  vuint32_t R;
  struct {
    vuint32_t RFSLSTCU0:1;             /* Recoverable Fault Occurrence Status from LSTCU0. */
    vuint32_t RFSLSTCU1:1;             /* Recoverable Fault Occurrence Status from LSTCU1. */
    vuint32_t RFSLSTCU2:1;             /* Recoverable Fault Occurrence Status from LSTCU2. */
    vuint32_t RFSLSTCU3:1;             /* Recoverable Fault Occurrence Status from LSTCU3. */
    vuint32_t RFSLSTCU4:1;             /* Recoverable Fault Occurrence Status from LSTCU4. */
    vuint32_t _unused_0:27;
  } B;
} AON_CSTCU_LRFSTAT_tag;

typedef union AON_CSTCU_LUFSTAT_union_tag { /* LSTCU Unrecoverable Fault Status */
  vuint32_t R;
  struct {
    vuint32_t UFSLSTCU0:1;             /* Unrecoverable Fault Occurrence Status from LSTCU0. */
    vuint32_t UFSLSTCU1:1;             /* Unrecoverable Fault Occurrence Status from LSTCU1. */
    vuint32_t UFSLSTCU2:1;             /* Unrecoverable Fault Occurrence Status from LSTCU2. */
    vuint32_t UFSLSTCU3:1;             /* Unrecoverable Fault Occurrence Status from LSTCU3. */
    vuint32_t UFSLSTCU4:1;             /* Unrecoverable Fault Occurrence Status from LSTCU4. */
    vuint32_t _unused_0:27;
  } B;
} AON_CSTCU_LUFSTAT_tag;

typedef struct AON_CSTCU_LSTCU_STAT_struct_tag {
  AON_CSTCU_LRFSTAT_tag LRFSTAT; /* LSTCU Recoverable Fault Status */
  uint8_t LSTCU_STAT_reserved0[12];
  AON_CSTCU_LUFSTAT_tag LUFSTAT; /* LSTCU Unrecoverable Fault Status */
} AON_CSTCU_LSTCU_STAT_tag;

typedef union AON_CSTCU_RDEN_union_tag { /* Reset Domain Self-Test Enable */
  vuint32_t R;
  struct {
    vuint32_t SERD0:1;                 /* Enable Self-Test in Reset Domain 0. */
    vuint32_t SERD1:1;                 /* Enable Self-Test in Reset Domain 1. */
    vuint32_t SERD2:1;                 /* Enable Self-Test in Reset Domain 2. */
    vuint32_t _unused_0:29;
  } B;
} AON_CSTCU_RDEN_tag;

typedef union AON_CSTCU_RDENSTAT_union_tag { /* Reset Domain Enable Status */
  vuint32_t R;
  struct {
    vuint32_t SESRD0:1;                /* Self-Test Enable Status in Reset Domain 0. */
    vuint32_t SESRD1:1;                /* Self-Test Enable Status in Reset Domain 1. */
    vuint32_t SESRD2:1;                /* Self-Test Enable Status in Reset Domain 2. */
    vuint32_t _unused_0:29;
  } B;
} AON_CSTCU_RDENSTAT_tag;

typedef union AON_CSTCU_LASTRDEN_union_tag { /* Last Run Reset Domain Enable */
  vuint32_t R;
  struct {
    vuint32_t LRSERD0:1;               /* Last Run Self-Test Enable Status in Reset Domain 0. */
    vuint32_t LRSERD1:1;               /* Last Run Self-Test Enable Status in Reset Domain 1. */
    vuint32_t LRSERD2:1;               /* Last Run Self-Test Enable Status in Reset Domain 2. */
    vuint32_t _unused_0:29;
  } B;
} AON_CSTCU_LASTRDEN_tag;

typedef union AON_CSTCU_BYPLSTCU_union_tag { /* Bypass LSTCU */
  vuint32_t R;
  struct {
    vuint32_t BYP_L0:1;                /* Bypass LSTCU 0 */
    vuint32_t BYP_L1:1;                /* Bypass LSTCU 1 */
    vuint32_t BYP_L2:1;                /* Bypass LSTCU 2 */
    vuint32_t BYP_L3:1;                /* Bypass LSTCU 3 */
    vuint32_t BYP_L4:1;                /* Bypass LSTCU 4 */
    vuint32_t _unused_0:27;
  } B;
} AON_CSTCU_BYPLSTCU_tag;

typedef union AON_CSTCU_STAG_union_tag { /* Stagger */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t MB_DELAY:8;              /* MBIST delay */
    vuint32_t _unused_8:8;
    vuint32_t _unused_0:8;
  } B;
} AON_CSTCU_STAG_tag;

typedef union AON_CSTCU_LMBPTR_union_tag { /* LSTCU MBIST Run Phase Scheduler Pointer */
  vuint32_t R;
  struct {
    vuint32_t MBPTR:8;                 /* LSTCU Pointer Scheduled During MBIST Run Phase */
    vuint32_t MBCSM:1;                 /* MBIST Concurrent or Sequential Mode */
    vuint32_t _unused_1:22;
    vuint32_t MBEOL:1;                 /* MBIST End of List */
  } B;
} AON_CSTCU_LMBPTR_tag;

struct AON_CSTCU_tag {
  AON_CSTCU_RUNSWREG_tag RUNSWREG;     /* Run Software */
  AON_CSTCU_LSCHLVLD_tag LSCHLVLD;     /* LSTCU Scheduler List Valid */
  uint8_t AON_CSTCU_reserved0[4];
  AON_CSTCU_WDG_tag WDG;               /* Watchdog Timer */
  AON_CSTCU_IE_tag IE;                 /* Interrupt Enable */
  AON_CSTCU_IF_tag IF;                 /* Interrupt Flag */
  uint8_t AON_CSTCU_reserved1[8];
  AON_CSTCU_ERR_STAT_tag ERR_STAT;     /* Error Status */
  uint8_t AON_CSTCU_reserved2[4];
  AON_CSTCU_ERR_FM_tag ERR_FM;         /* Error Fault Mapping */
  uint8_t AON_CSTCU_reserved3[4];
  AON_CSTCU_LSTCU_STAT_tag LSTCU_STAT[1];
  uint8_t AON_CSTCU_reserved4[12];
  AON_CSTCU_LUFSTAT_tag LUFSTAT[1];    /* LSTCU Unrecoverable Fault Status */
  uint8_t AON_CSTCU_reserved5[12];
  AON_CSTCU_RDEN_tag RDEN;             /* Reset Domain Self-Test Enable */
  AON_CSTCU_RDENSTAT_tag RDENSTAT;     /* Reset Domain Enable Status */
  AON_CSTCU_LASTRDEN_tag LASTRDEN;     /* Last Run Reset Domain Enable */
  uint8_t AON_CSTCU_reserved6[4];
  AON_CSTCU_BYPLSTCU_tag BYPLSTCU[1];  /* Bypass LSTCU */
  uint8_t AON_CSTCU_reserved7[12];
  AON_CSTCU_STAG_tag STAG;             /* Stagger */
  uint8_t AON_CSTCU_reserved8[396];
  AON_CSTCU_LMBPTR_tag LMBPTR[5];      /* LSTCU MBIST Run Phase Scheduler Pointer */
};


/* ============================================================================
   =============================== Module: AON_EDMA3_MP =======================
   ============================================================================ */

typedef union AON_EDMA3_MP_MP_CSR_union_tag { /* Management Page Control */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;            /* Reserved */
    vuint32_t EDBG:1;                  /* Enable Debug */
    vuint32_t ERCA:1;                  /* Enable Round Robin Channel Arbitration */
    vuint32_t _unused_28:1;            /* Reserved */
    vuint32_t HAE:1;                   /* Halt After Error */
    vuint32_t HALT:1;                  /* Halt DMA Operations */
    vuint32_t GCLC:1;                  /* Global Channel Linking Control */
    vuint32_t GMRC:1;                  /* Global Master ID Replication Control */
    vuint32_t ECX:1;                   /* Cancel Transfer With Error */
    vuint32_t CX:1;                    /* Cancel Transfer */
    vuint32_t _unused_16:6;            /* Reserved */
    vuint32_t _unused_8:8;             /* Reserved */
    vuint32_t ACTIVE_ID:5;             /* Active Channel ID */
    vuint32_t _unused_1:2;             /* Reserved */
    vuint32_t ACTIVE:1;                /* DMA Active Status */
  } B;
} AON_EDMA3_MP_MP_CSR_tag;

typedef union AON_EDMA3_MP_MP_ES_union_tag { /* Management Page Error Status */
  vuint32_t R;
  struct {
    vuint32_t DBE:1;                   /* Destination Bus Error */
    vuint32_t SBE:1;                   /* Source Bus Error */
    vuint32_t SGE:1;                   /* Scatter/Gather Configuration Error */
    vuint32_t NCE:1;                   /* NBYTES/CITER Configuration Error */
    vuint32_t DOE:1;                   /* Destination Offset Error */
    vuint32_t DAE:1;                   /* Destination Address Error */
    vuint32_t SOE:1;                   /* Source Offset Error */
    vuint32_t SAE:1;                   /* Source Address Error */
    vuint32_t ECX:1;                   /* Transfer Canceled */
    vuint32_t _unused_8:15;            /* Reserved */
    vuint32_t ERRCHN:5;                /* Error Channel Number or Canceled Channel Number */
    vuint32_t _unused_1:2;             /* Reserved */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_EDMA3_MP_MP_ES_tag;

typedef union AON_EDMA3_MP_MP_INT_union_tag { /* Management Page Interrupt Request Status */
  vuint32_t R;
  struct {
    vuint32_t INT:32;                  /* Interrupt Request Status */
  } B;
} AON_EDMA3_MP_MP_INT_tag;

typedef union AON_EDMA3_MP_MP_HRS_union_tag { /* Management Page Hardware Request Status */
  vuint32_t R;
  struct {
    vuint32_t HRS:32;                  /* Hardware Request Status */
  } B;
} AON_EDMA3_MP_MP_HRS_tag;

typedef union AON_EDMA3_MP_CH_GRPRI_union_tag { /* Channel Arbitration Group */
  vuint32_t R;
  struct {
    vuint32_t GRPRI:5;                 /* Arbitration Group For Channel n */
    vuint32_t _unused_0:27;
  } B;
} AON_EDMA3_MP_CH_GRPRI_tag;

struct AON_EDMA3_MP_tag {
  AON_EDMA3_MP_MP_CSR_tag MP_CSR;      /* Management Page Control */
  AON_EDMA3_MP_MP_ES_tag MP_ES;        /* Management Page Error Status */
  AON_EDMA3_MP_MP_INT_tag MP_INT;      /* Management Page Interrupt Request Status */
  AON_EDMA3_MP_MP_HRS_tag MP_HRS;      /* Management Page Hardware Request Status */
  uint8_t AON_EDMA3_MP_reserved0[240];
  AON_EDMA3_MP_CH_GRPRI_tag CH_GRPRI[32]; /* Channel Arbitration Group */
};


/* ============================================================================
   =============================== Module: AON_EDMA3_TCD ======================
   ============================================================================ */

typedef union AON_EDMA3_TCD_TCD_CH_CSR_union_tag { /* Channel Control and Status */
  vuint32_t R;
  struct {
    vuint32_t ERQ:1;                   /* Enable DMA Request */
    vuint32_t EARQ:1;                  /* Enable Asynchronous DMA Request */
    vuint32_t EEI:1;                   /* Enable Error Interrupt */
    vuint32_t EBW:1;                   /* Enable Buffered Writes */
    vuint32_t _unused_2:26;            /* Reserved */
    vuint32_t DONE:1;                  /* Channel Done */
    vuint32_t ACTIVE:1;                /* Channel Active */
  } B;
} AON_EDMA3_TCD_TCD_CH_CSR_tag;

typedef union AON_EDMA3_TCD_TCD_CH_ES_union_tag { /* Channel Error Status */
  vuint32_t R;
  struct {
    vuint32_t DBE:1;                   /* Destination Bus Error */
    vuint32_t SBE:1;                   /* Source Bus Error */
    vuint32_t SGE:1;                   /* Scatter/Gather Configuration Error */
    vuint32_t NCE:1;                   /* NBYTES/CITER Configuration Error */
    vuint32_t DOE:1;                   /* Destination Offset Error */
    vuint32_t DAE:1;                   /* Destination Address Error */
    vuint32_t SOE:1;                   /* Source Offset Error */
    vuint32_t SAE:1;                   /* Source Address Error */
    vuint32_t _unused_1:23;            /* Reserved */
    vuint32_t ERR:1;                   /* Error In Channel */
  } B;
} AON_EDMA3_TCD_TCD_CH_ES_tag;

typedef union AON_EDMA3_TCD_TCD_CH_INT_union_tag { /* Channel Interrupt Status */
  vuint32_t R;
  struct {
    vuint32_t INT:1;                   /* Interrupt Request */
    vuint32_t _unused_0:31;            /* Reserved */
  } B;
} AON_EDMA3_TCD_TCD_CH_INT_tag;

typedef union AON_EDMA3_TCD_TCD_CH_SBR_union_tag { /* Channel System Bus */
  vuint32_t R;
  struct {
    vuint32_t MID:4;                   /* Master ID */
    vuint32_t _unused_18:10;           /* Reserved */
    vuint32_t SEC:1;                   /* Security Level */
    vuint32_t PAL:1;                   /* Privileged Access Level */
    vuint32_t EMI:1;                   /* Enable Master ID Replication */
    vuint32_t ATTR:6;                  /* Attribute Output */
    vuint32_t _unused_0:9;             /* Reserved */
  } B;
} AON_EDMA3_TCD_TCD_CH_SBR_tag;

typedef union AON_EDMA3_TCD_TCD_CH_PRI_union_tag { /* Channel Priority */
  vuint32_t R;
  struct {
    vuint32_t APL:3;                   /* Arbitration Priority Level */
    vuint32_t _unused_2:27;            /* Reserved */
    vuint32_t DPA:1;                   /* Disable Preempt Ability */
    vuint32_t ECP:1;                   /* Enable Channel Preemption */
  } B;
} AON_EDMA3_TCD_TCD_CH_PRI_tag;

typedef union AON_EDMA3_TCD_TCD_SADDR_union_tag { /* TCD Source Address */
  vuint32_t R;
  struct {
    vuint32_t SADDR:32;                /* Source Address */
  } B;
} AON_EDMA3_TCD_TCD_SADDR_tag;

typedef union AON_EDMA3_TCD_TCD_SOFF_union_tag { /* TCD Signed Source Address Offset */
  vuint16_t R;
  struct {
    vuint16_t SOFF:16;                 /* Source Address Signed Offset */
  } B;
} AON_EDMA3_TCD_TCD_SOFF_tag;

typedef union AON_EDMA3_TCD_TCD_ATTR_union_tag { /* TCD Transfer Attributes */
  vuint16_t R;
  struct {
    vuint16_t DSIZE:3;                 /* Destination Data Transfer Size */
    vuint16_t DMOD:5;                  /* Destination Address Modulo */
    vuint16_t SSIZE:3;                 /* Source Data Transfer Size */
    vuint16_t SMOD:5;                  /* Source Address Modulo */
  } B;
} AON_EDMA3_TCD_TCD_ATTR_tag;

typedef union AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFNO_union_tag { /* TCD Transfer Size Without Minor Loop Offsets */
  vuint32_t R;
  struct {
    vuint32_t NBYTES:30;               /* Number of Bytes To Transfer Per Service Request */
    vuint32_t DMLOE:1;                 /* Destination Minor Loop Offset Enable */
    vuint32_t SMLOE:1;                 /* Source Minor Loop Offset Enable */
  } B;
} AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFNO_tag;

typedef union AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFYES_union_tag { /* TCD Transfer Size with Minor Loop Offsets */
  vuint32_t R;
  struct {
    vuint32_t NBYTES:10;               /* Number of Bytes To Transfer Per Service Request */
    vuint32_t MLOFF:20;                /* Minor Loop Offset */
    vuint32_t DMLOE:1;                 /* Destination Minor Loop Offset Enable */
    vuint32_t SMLOE:1;                 /* Source Minor Loop Offset Enable */
  } B;
} AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFYES_tag;

typedef union AON_EDMA3_TCD_TCD_NBYTES_union_tag {
  AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFNO_tag NBYTES_MLOFFNO; /* TCD Transfer Size Without Minor Loop Offsets */
  AON_EDMA3_TCD_TCD_NBYTES_NBYTES_MLOFFYES_tag NBYTES_MLOFFYES; /* TCD Transfer Size with Minor Loop Offsets */
} AON_EDMA3_TCD_TCD_NBYTES_tag;

typedef union AON_EDMA3_TCD_TCD_SLAST_SDA_union_tag { /* TCD Last Source Address Adjustment / Store DADDR Address */
  vuint32_t R;
  struct {
    vuint32_t SLAST_SDA:32;            /* Last Source Address Adjustment / Store DADDR Address */
  } B;
} AON_EDMA3_TCD_TCD_SLAST_SDA_tag;

typedef union AON_EDMA3_TCD_TCD_DADDR_union_tag { /* TCD Destination Address */
  vuint32_t R;
  struct {
    vuint32_t DADDR:32;                /* Destination Address */
  } B;
} AON_EDMA3_TCD_TCD_DADDR_tag;

typedef union AON_EDMA3_TCD_TCD_DOFF_union_tag { /* TCD Signed Destination Address Offset */
  vuint16_t R;
  struct {
    vuint16_t DOFF:16;                 /* Destination Address Signed Offset */
  } B;
} AON_EDMA3_TCD_TCD_DOFF_tag;

typedef union AON_EDMA3_TCD_TCD_CITER_CITER_ELINKNO_union_tag { /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
  vuint16_t R;
  struct {
    vuint16_t CITER:15;                /* Current Major Iteration Count */
    vuint16_t ELINK:1;                 /* Enable Link */
  } B;
} AON_EDMA3_TCD_TCD_CITER_CITER_ELINKNO_tag;

typedef union AON_EDMA3_TCD_TCD_CITER_CITER_ELINKYES_union_tag { /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
  vuint16_t R;
  struct {
    vuint16_t CITER:9;                 /* Current Major Iteration Count */
    vuint16_t LINKCH:5;                /* Minor Loop Link Channel Number */
    vuint16_t _unused_1:1;             /* Reserved */
    vuint16_t ELINK:1;                 /* Enable Link */
  } B;
} AON_EDMA3_TCD_TCD_CITER_CITER_ELINKYES_tag;

typedef union AON_EDMA3_TCD_TCD_CITER_union_tag {
  AON_EDMA3_TCD_TCD_CITER_CITER_ELINKNO_tag CITER_ELINKNO; /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
  AON_EDMA3_TCD_TCD_CITER_CITER_ELINKYES_tag CITER_ELINKYES; /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
} AON_EDMA3_TCD_TCD_CITER_tag;

typedef union AON_EDMA3_TCD_TCD_DLAST_SGA_union_tag { /* TCD Last Destination Address Adjustment / Scatter Gather Address */
  vuint32_t R;
  struct {
    vuint32_t DLAST_SGA:32;            /* Last Destination Address Adjustment / Scatter Gather Address */
  } B;
} AON_EDMA3_TCD_TCD_DLAST_SGA_tag;

typedef union AON_EDMA3_TCD_TCD_CSR_union_tag { /* TCD Control and Status */
  vuint16_t R;
  struct {
    vuint16_t START:1;                 /* Channel Start */
    vuint16_t INTMAJOR:1;              /* Enable Interrupt If Major count complete */
    vuint16_t INTHALF:1;               /* Enable Interrupt If Major Counter Half-complete */
    vuint16_t DREQ:1;                  /* Disable Request */
    vuint16_t ESG:1;                   /* Enable Scatter/Gather Processing */
    vuint16_t MAJORELINK:1;            /* Enable Link When Major Loop Complete */
    vuint16_t EEOP:1;                  /* Enable End-Of-Packet Processing */
    vuint16_t ESDA:1;                  /* Enable Store Destination Address */
    vuint16_t MAJORLINKCH:5;           /* Major Loop Link Channel Number */
    vuint16_t _unused_2:1;             /* Reserved */
    vuint16_t BWC:2;                   /* Bandwidth Control */
  } B;
} AON_EDMA3_TCD_TCD_CSR_tag;

typedef union AON_EDMA3_TCD_TCD_BITER_BITER_ELINKNO_union_tag { /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
  vuint16_t R;
  struct {
    vuint16_t BITER:15;                /* Starting Major Iteration Count */
    vuint16_t ELINK:1;                 /* Enables Link */
  } B;
} AON_EDMA3_TCD_TCD_BITER_BITER_ELINKNO_tag;

typedef union AON_EDMA3_TCD_TCD_BITER_BITER_ELINKYES_union_tag { /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
  vuint16_t R;
  struct {
    vuint16_t BITER:9;                 /* Starting Major Iteration Count */
    vuint16_t LINKCH:5;                /* Link Channel Number */
    vuint16_t _unused_1:1;             /* Reserved */
    vuint16_t ELINK:1;                 /* Enable Link */
  } B;
} AON_EDMA3_TCD_TCD_BITER_BITER_ELINKYES_tag;

typedef union AON_EDMA3_TCD_TCD_BITER_union_tag {
  AON_EDMA3_TCD_TCD_BITER_BITER_ELINKNO_tag BITER_ELINKNO; /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
  AON_EDMA3_TCD_TCD_BITER_BITER_ELINKYES_tag BITER_ELINKYES; /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
} AON_EDMA3_TCD_TCD_BITER_tag;

typedef struct AON_EDMA3_TCD_TCD_struct_tag {
  AON_EDMA3_TCD_TCD_CH_CSR_tag CH_CSR; /* Channel Control and Status */
  AON_EDMA3_TCD_TCD_CH_ES_tag CH_ES;   /* Channel Error Status */
  AON_EDMA3_TCD_TCD_CH_INT_tag CH_INT; /* Channel Interrupt Status */
  AON_EDMA3_TCD_TCD_CH_SBR_tag CH_SBR; /* Channel System Bus */
  AON_EDMA3_TCD_TCD_CH_PRI_tag CH_PRI; /* Channel Priority */
  uint8_t TCD_reserved0[12];
  AON_EDMA3_TCD_TCD_SADDR_tag SADDR;   /* TCD Source Address */
  AON_EDMA3_TCD_TCD_SOFF_tag SOFF;     /* TCD Signed Source Address Offset */
  AON_EDMA3_TCD_TCD_ATTR_tag ATTR;     /* TCD Transfer Attributes */
  AON_EDMA3_TCD_TCD_NBYTES_tag NBYTES;
  AON_EDMA3_TCD_TCD_SLAST_SDA_tag SLAST_SDA; /* TCD Last Source Address Adjustment / Store DADDR Address */
  AON_EDMA3_TCD_TCD_DADDR_tag DADDR;   /* TCD Destination Address */
  AON_EDMA3_TCD_TCD_DOFF_tag DOFF;     /* TCD Signed Destination Address Offset */
  AON_EDMA3_TCD_TCD_CITER_tag CITER;
  AON_EDMA3_TCD_TCD_DLAST_SGA_tag DLAST_SGA; /* TCD Last Destination Address Adjustment / Scatter Gather Address */
  AON_EDMA3_TCD_TCD_CSR_tag CSR;       /* TCD Control and Status */
  AON_EDMA3_TCD_TCD_BITER_tag BITER;
  uint8_t TCD_reserved1[65472];
} AON_EDMA3_TCD_TCD_tag;

struct AON_EDMA3_TCD_tag {
  AON_EDMA3_TCD_TCD_tag TCD[32];
};


/* ============================================================================
   =============================== Module: AON_EIM ============================
   ============================================================================ */

typedef union AON_EIM_EIMCR_union_tag { /* Error Injection Module Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t GEIEN:1;                 /* Global Error Injection Enable */
    vuint32_t _unused_0:31;            /* Reserved */
  } B;
} AON_EIM_EIMCR_tag;

typedef union AON_EIM_EICHEN_union_tag { /* Error Injection Channel Enable register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;            /* Reserved */
    vuint32_t _unused_30:1;            /* Reserved */
    vuint32_t _unused_29:1;            /* Reserved */
    vuint32_t _unused_28:1;            /* Reserved */
    vuint32_t _unused_27:1;            /* Reserved */
    vuint32_t _unused_26:1;            /* Reserved */
    vuint32_t _unused_25:1;            /* Reserved */
    vuint32_t _unused_24:1;            /* Reserved */
    vuint32_t _unused_23:1;            /* Reserved */
    vuint32_t _unused_22:1;            /* Reserved */
    vuint32_t _unused_21:1;            /* Reserved */
    vuint32_t _unused_20:1;            /* Reserved */
    vuint32_t _unused_19:1;            /* Reserved */
    vuint32_t _unused_18:1;            /* Reserved */
    vuint32_t _unused_17:1;            /* Reserved */
    vuint32_t _unused_16:1;            /* Reserved */
    vuint32_t _unused_15:1;            /* Reserved */
    vuint32_t _unused_14:1;            /* Reserved */
    vuint32_t _unused_13:1;            /* Reserved */
    vuint32_t EICH12EN:1;              /* Error Injection Channel 12 Enable */
    vuint32_t EICH11EN:1;              /* Error Injection Channel 11 Enable */
    vuint32_t EICH10EN:1;              /* Error Injection Channel 10 Enable */
    vuint32_t EICH9EN:1;               /* Error Injection Channel 9 Enable */
    vuint32_t EICH8EN:1;               /* Error Injection Channel 8 Enable */
    vuint32_t EICH7EN:1;               /* Error Injection Channel 7 Enable */
    vuint32_t EICH6EN:1;               /* Error Injection Channel 6 Enable */
    vuint32_t EICH5EN:1;               /* Error Injection Channel 5 Enable */
    vuint32_t EICH4EN:1;               /* Error Injection Channel 4 Enable */
    vuint32_t EICH3EN:1;               /* Error Injection Channel 3 Enable */
    vuint32_t EICH2EN:1;               /* Error Injection Channel 2 Enable */
    vuint32_t EICH1EN:1;               /* Error Injection Channel 1 Enable */
    vuint32_t EICH0EN:1;               /* Error Injection Channel 0 Enable */
  } B;
} AON_EIM_EICHEN_tag;

typedef union AON_EIM_EICHD0_WORD0_union_tag { /* Error Injection Channel Descriptor 0, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t CHKBIT_MASK:8;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD0_WORD0_tag;

typedef union AON_EIM_EICHD0_WORD1_union_tag { /* Error Injection Channel Descriptor 0, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:4;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:28;
  } B;
} AON_EIM_EICHD0_WORD1_tag;

typedef union AON_EIM_EICHD0_WORD2_union_tag { /* Error Injection Channel Descriptor 0, Word2 */
  vuint32_t R;
  struct {
    vuint32_t B4_7DATA_MASK:32;        /* Data Mask Bytes 4-7 */
  } B;
} AON_EIM_EICHD0_WORD2_tag;

typedef union AON_EIM_EICHD1_WORD0_union_tag { /* Error Injection Channel Descriptor 1, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t CHKBIT_MASK:8;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD1_WORD0_tag;

typedef union AON_EIM_EICHD1_WORD1_union_tag { /* Error Injection Channel Descriptor 1, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:4;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:28;
  } B;
} AON_EIM_EICHD1_WORD1_tag;

typedef union AON_EIM_EICHD1_WORD2_union_tag { /* Error Injection Channel Descriptor 1, Word2 */
  vuint32_t R;
  struct {
    vuint32_t B4_7DATA_MASK:32;        /* Data Mask Bytes 4-7 */
  } B;
} AON_EIM_EICHD1_WORD2_tag;

typedef union AON_EIM_EICHD2_WORD0_union_tag { /* Error Injection Channel Descriptor 2, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t CHKBIT_MASK:8;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD2_WORD0_tag;

typedef union AON_EIM_EICHD2_WORD1_union_tag { /* Error Injection Channel Descriptor 2, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:4;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:28;
  } B;
} AON_EIM_EICHD2_WORD1_tag;

typedef union AON_EIM_EICHD2_WORD2_union_tag { /* Error Injection Channel Descriptor 2, Word2 */
  vuint32_t R;
  struct {
    vuint32_t B4_7DATA_MASK:32;        /* Data Mask Bytes 4-7 */
  } B;
} AON_EIM_EICHD2_WORD2_tag;

typedef union AON_EIM_EICHD3_WORD0_union_tag { /* Error Injection Channel Descriptor 3, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t CHKBIT_MASK:8;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD3_WORD0_tag;

typedef union AON_EIM_EICHD3_WORD1_union_tag { /* Error Injection Channel Descriptor 3, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:4;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:28;
  } B;
} AON_EIM_EICHD3_WORD1_tag;

typedef union AON_EIM_EICHD3_WORD2_union_tag { /* Error Injection Channel Descriptor 3, Word2 */
  vuint32_t R;
  struct {
    vuint32_t B4_7DATA_MASK:32;        /* Data Mask Bytes 4-7 */
  } B;
} AON_EIM_EICHD3_WORD2_tag;

typedef union AON_EIM_EICHD4_WORD0_union_tag { /* Error Injection Channel Descriptor 4, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD4_WORD0_tag;

typedef union AON_EIM_EICHD4_WORD1_union_tag { /* Error Injection Channel Descriptor 4, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD4_WORD1_tag;

typedef union AON_EIM_EICHD5_WORD0_union_tag { /* Error Injection Channel Descriptor 5, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD5_WORD0_tag;

typedef union AON_EIM_EICHD5_WORD1_union_tag { /* Error Injection Channel Descriptor 5, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD5_WORD1_tag;

typedef union AON_EIM_EICHD6_WORD0_union_tag { /* Error Injection Channel Descriptor 6, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD6_WORD0_tag;

typedef union AON_EIM_EICHD6_WORD1_union_tag { /* Error Injection Channel Descriptor 6, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD6_WORD1_tag;

typedef union AON_EIM_EICHD7_WORD0_union_tag { /* Error Injection Channel Descriptor 7, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD7_WORD0_tag;

typedef union AON_EIM_EICHD7_WORD1_union_tag { /* Error Injection Channel Descriptor 7, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD7_WORD1_tag;

typedef union AON_EIM_EICHD8_WORD0_union_tag { /* Error Injection Channel Descriptor 8, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD8_WORD0_tag;

typedef union AON_EIM_EICHD8_WORD1_union_tag { /* Error Injection Channel Descriptor 8, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD8_WORD1_tag;

typedef union AON_EIM_EICHD9_WORD0_union_tag { /* Error Injection Channel Descriptor 9, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD9_WORD0_tag;

typedef union AON_EIM_EICHD9_WORD1_union_tag { /* Error Injection Channel Descriptor 9, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:32;        /* Data Mask Bytes 0-3 */
  } B;
} AON_EIM_EICHD9_WORD1_tag;

typedef union AON_EIM_EICHD10_WORD0_union_tag { /* Error Injection Channel Descriptor 10, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_2:30;
    vuint32_t CHKBIT_MASK:2;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD10_WORD0_tag;

typedef union AON_EIM_EICHD10_WORD1_union_tag { /* Error Injection Channel Descriptor 10, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:1;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:31;
  } B;
} AON_EIM_EICHD10_WORD1_tag;

typedef union AON_EIM_EICHD11_WORD0_union_tag { /* Error Injection Channel Descriptor 11, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_5:27;
    vuint32_t CHKBIT_MASK:5;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD11_WORD0_tag;

typedef union AON_EIM_EICHD11_WORD1_union_tag { /* Error Injection Channel Descriptor 11, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:1;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:31;
  } B;
} AON_EIM_EICHD11_WORD1_tag;

typedef union AON_EIM_EICHD12_WORD0_union_tag { /* Error Injection Channel Descriptor 12, Word0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_7:25;
    vuint32_t CHKBIT_MASK:7;           /* Checkbit Mask */
  } B;
} AON_EIM_EICHD12_WORD0_tag;

typedef union AON_EIM_EICHD12_WORD1_union_tag { /* Error Injection Channel Descriptor 12, Word1 */
  vuint32_t R;
  struct {
    vuint32_t B0_3DATA_MASK:1;         /* Data Mask Bytes 0-3 */
    vuint32_t _unused_0:31;
  } B;
} AON_EIM_EICHD12_WORD1_tag;

struct AON_EIM_tag {
  AON_EIM_EIMCR_tag EIMCR;             /* Error Injection Module Configuration Register */
  AON_EIM_EICHEN_tag EICHEN;           /* Error Injection Channel Enable register */
  uint8_t AON_EIM_reserved0[248];
  AON_EIM_EICHD0_WORD0_tag EICHD0_WORD0; /* Error Injection Channel Descriptor 0, Word0 */
  AON_EIM_EICHD0_WORD1_tag EICHD0_WORD1; /* Error Injection Channel Descriptor 0, Word1 */
  AON_EIM_EICHD0_WORD2_tag EICHD0_WORD2; /* Error Injection Channel Descriptor 0, Word2 */
  uint8_t AON_EIM_reserved1[52];
  AON_EIM_EICHD1_WORD0_tag EICHD1_WORD0; /* Error Injection Channel Descriptor 1, Word0 */
  AON_EIM_EICHD1_WORD1_tag EICHD1_WORD1; /* Error Injection Channel Descriptor 1, Word1 */
  AON_EIM_EICHD1_WORD2_tag EICHD1_WORD2; /* Error Injection Channel Descriptor 1, Word2 */
  uint8_t AON_EIM_reserved2[52];
  AON_EIM_EICHD2_WORD0_tag EICHD2_WORD0; /* Error Injection Channel Descriptor 2, Word0 */
  AON_EIM_EICHD2_WORD1_tag EICHD2_WORD1; /* Error Injection Channel Descriptor 2, Word1 */
  AON_EIM_EICHD2_WORD2_tag EICHD2_WORD2; /* Error Injection Channel Descriptor 2, Word2 */
  uint8_t AON_EIM_reserved3[52];
  AON_EIM_EICHD3_WORD0_tag EICHD3_WORD0; /* Error Injection Channel Descriptor 3, Word0 */
  AON_EIM_EICHD3_WORD1_tag EICHD3_WORD1; /* Error Injection Channel Descriptor 3, Word1 */
  AON_EIM_EICHD3_WORD2_tag EICHD3_WORD2; /* Error Injection Channel Descriptor 3, Word2 */
  uint8_t AON_EIM_reserved4[52];
  AON_EIM_EICHD4_WORD0_tag EICHD4_WORD0; /* Error Injection Channel Descriptor 4, Word0 */
  AON_EIM_EICHD4_WORD1_tag EICHD4_WORD1; /* Error Injection Channel Descriptor 4, Word1 */
  uint8_t AON_EIM_reserved5[56];
  AON_EIM_EICHD5_WORD0_tag EICHD5_WORD0; /* Error Injection Channel Descriptor 5, Word0 */
  AON_EIM_EICHD5_WORD1_tag EICHD5_WORD1; /* Error Injection Channel Descriptor 5, Word1 */
  uint8_t AON_EIM_reserved6[56];
  AON_EIM_EICHD6_WORD0_tag EICHD6_WORD0; /* Error Injection Channel Descriptor 6, Word0 */
  AON_EIM_EICHD6_WORD1_tag EICHD6_WORD1; /* Error Injection Channel Descriptor 6, Word1 */
  uint8_t AON_EIM_reserved7[56];
  AON_EIM_EICHD7_WORD0_tag EICHD7_WORD0; /* Error Injection Channel Descriptor 7, Word0 */
  AON_EIM_EICHD7_WORD1_tag EICHD7_WORD1; /* Error Injection Channel Descriptor 7, Word1 */
  uint8_t AON_EIM_reserved8[56];
  AON_EIM_EICHD8_WORD0_tag EICHD8_WORD0; /* Error Injection Channel Descriptor 8, Word0 */
  AON_EIM_EICHD8_WORD1_tag EICHD8_WORD1; /* Error Injection Channel Descriptor 8, Word1 */
  uint8_t AON_EIM_reserved9[56];
  AON_EIM_EICHD9_WORD0_tag EICHD9_WORD0; /* Error Injection Channel Descriptor 9, Word0 */
  AON_EIM_EICHD9_WORD1_tag EICHD9_WORD1; /* Error Injection Channel Descriptor 9, Word1 */
  uint8_t AON_EIM_reserved10[56];
  AON_EIM_EICHD10_WORD0_tag EICHD10_WORD0; /* Error Injection Channel Descriptor 10, Word0 */
  AON_EIM_EICHD10_WORD1_tag EICHD10_WORD1; /* Error Injection Channel Descriptor 10, Word1 */
  uint8_t AON_EIM_reserved11[56];
  AON_EIM_EICHD11_WORD0_tag EICHD11_WORD0; /* Error Injection Channel Descriptor 11, Word0 */
  AON_EIM_EICHD11_WORD1_tag EICHD11_WORD1; /* Error Injection Channel Descriptor 11, Word1 */
  uint8_t AON_EIM_reserved12[56];
  AON_EIM_EICHD12_WORD0_tag EICHD12_WORD0; /* Error Injection Channel Descriptor 12, Word0 */
  AON_EIM_EICHD12_WORD1_tag EICHD12_WORD1; /* Error Injection Channel Descriptor 12, Word1 */
};


/* ============================================================================
   =============================== Module: AON_ERM ============================
   ============================================================================ */

typedef union AON_ERM_CR0_union_tag {  /* ERM Configuration Register 0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;            /* Reserved */
    vuint32_t ENCIE7:1;                /* ENCIE7 */
    vuint32_t ESCIE7:1;                /* ESCIE7 */
    vuint32_t _unused_26:2;            /* Reserved */
    vuint32_t ENCIE6:1;                /* ENCIE6 */
    vuint32_t ESCIE6:1;                /* ESCIE6 */
    vuint32_t _unused_22:2;            /* Reserved */
    vuint32_t ENCIE5:1;                /* ENCIE5 */
    vuint32_t ESCIE5:1;                /* ESCIE5 */
    vuint32_t _unused_18:2;            /* Reserved */
    vuint32_t ENCIE4:1;                /* ENCIE4 */
    vuint32_t ESCIE4:1;                /* ESCIE4 */
    vuint32_t _unused_14:2;            /* Reserved */
    vuint32_t ENCIE3:1;                /* ENCIE3 */
    vuint32_t ESCIE3:1;                /* ESCIE3 */
    vuint32_t _unused_10:2;            /* Reserved */
    vuint32_t ENCIE2:1;                /* ENCIE2 */
    vuint32_t ESCIE2:1;                /* ESCIE2 */
    vuint32_t _unused_6:2;             /* Reserved */
    vuint32_t ENCIE1:1;                /* ENCIE1 */
    vuint32_t ESCIE1:1;                /* ESCIE1 */
    vuint32_t _unused_2:2;             /* Reserved */
    vuint32_t ENCIE0:1;                /* ENCIE0 */
    vuint32_t ESCIE0:1;                /* ESCIE0 */
  } B;
} AON_ERM_CR0_tag;

typedef union AON_ERM_CR1_union_tag {  /* ERM Configuration Register 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;            /* Reserved */
    vuint32_t _unused_28:2;            /* Reserved */
    vuint32_t _unused_26:2;            /* Reserved */
    vuint32_t _unused_24:2;            /* Reserved */
    vuint32_t _unused_22:2;            /* Reserved */
    vuint32_t _unused_20:2;            /* Reserved */
    vuint32_t _unused_18:2;            /* Reserved */
    vuint32_t _unused_16:2;            /* Reserved */
    vuint32_t _unused_14:2;            /* Reserved */
    vuint32_t _unused_12:2;            /* Reserved */
    vuint32_t _unused_10:2;            /* Reserved */
    vuint32_t _unused_8:2;             /* Reserved */
    vuint32_t _unused_6:2;             /* Reserved */
    vuint32_t ENCIE9:1;                /* ENCIE9 */
    vuint32_t ESCIE9:1;                /* ESCIE9 */
    vuint32_t _unused_2:2;             /* Reserved */
    vuint32_t ENCIE8:1;                /* ENCIE8 */
    vuint32_t ESCIE8:1;                /* ESCIE8 */
  } B;
} AON_ERM_CR1_tag;

typedef union AON_ERM_SR0_union_tag {  /* ERM Status Register 0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;            /* Reserved */
    vuint32_t NCE7:1;                  /* NCE7 */
    vuint32_t SBC7:1;                  /* SBC7 */
    vuint32_t _unused_26:2;            /* Reserved */
    vuint32_t NCE6:1;                  /* NCE6 */
    vuint32_t SBC6:1;                  /* SBC6 */
    vuint32_t _unused_22:2;            /* Reserved */
    vuint32_t NCE5:1;                  /* NCE5 */
    vuint32_t SBC5:1;                  /* SBC5 */
    vuint32_t _unused_18:2;            /* Reserved */
    vuint32_t NCE4:1;                  /* NCE4 */
    vuint32_t SBC4:1;                  /* SBC4 */
    vuint32_t _unused_14:2;            /* Reserved */
    vuint32_t NCE3:1;                  /* NCE3 */
    vuint32_t SBC3:1;                  /* SBC3 */
    vuint32_t _unused_10:2;            /* Reserved */
    vuint32_t NCE2:1;                  /* NCE2 */
    vuint32_t SBC2:1;                  /* SBC2 */
    vuint32_t _unused_6:2;             /* Reserved */
    vuint32_t NCE1:1;                  /* NCE1 */
    vuint32_t SBC1:1;                  /* SBC1 */
    vuint32_t _unused_2:2;             /* Reserved */
    vuint32_t NCE0:1;                  /* NCE0 */
    vuint32_t SBC0:1;                  /* SBC0 */
  } B;
} AON_ERM_SR0_tag;

typedef union AON_ERM_SR1_union_tag {  /* ERM Status Register 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_28:4;            /* Reserved */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t _unused_20:4;            /* Reserved */
    vuint32_t _unused_16:4;            /* Reserved */
    vuint32_t _unused_12:4;            /* Reserved */
    vuint32_t _unused_8:4;             /* Reserved */
    vuint32_t _unused_6:2;             /* Reserved */
    vuint32_t NCE9:1;                  /* NCE9 */
    vuint32_t SBC9:1;                  /* SBC9 */
    vuint32_t _unused_2:2;             /* Reserved */
    vuint32_t NCE8:1;                  /* NCE8 */
    vuint32_t SBC8:1;                  /* SBC8 */
  } B;
} AON_ERM_SR1_tag;

typedef union AON_ERM_EAR0_union_tag { /* ERM Memory 0 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR0_tag;

typedef union AON_ERM_SYN0_union_tag { /* ERM Memory 0 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN0_tag;

typedef union AON_ERM_CORR_ERR_CNT0_union_tag { /* ERM Memory 0 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT0_tag;

typedef union AON_ERM_EAR1_union_tag { /* ERM Memory 1 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR1_tag;

typedef union AON_ERM_SYN1_union_tag { /* ERM Memory 1 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN1_tag;

typedef union AON_ERM_CORR_ERR_CNT1_union_tag { /* ERM Memory 1 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT1_tag;

typedef union AON_ERM_EAR2_union_tag { /* ERM Memory 2 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR2_tag;

typedef union AON_ERM_SYN2_union_tag { /* ERM Memory 2 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN2_tag;

typedef union AON_ERM_CORR_ERR_CNT2_union_tag { /* ERM Memory 2 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT2_tag;

typedef union AON_ERM_EAR3_union_tag { /* ERM Memory 3 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR3_tag;

typedef union AON_ERM_SYN3_union_tag { /* ERM Memory 3 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN3_tag;

typedef union AON_ERM_CORR_ERR_CNT3_union_tag { /* ERM Memory 3 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT3_tag;

typedef union AON_ERM_EAR4_union_tag { /* ERM Memory 4 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR4_tag;

typedef union AON_ERM_SYN4_union_tag { /* ERM Memory 4 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN4_tag;

typedef union AON_ERM_CORR_ERR_CNT4_union_tag { /* ERM Memory 4 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT4_tag;

typedef union AON_ERM_EAR5_union_tag { /* ERM Memory 5 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR5_tag;

typedef union AON_ERM_SYN5_union_tag { /* ERM Memory 5 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN5_tag;

typedef union AON_ERM_CORR_ERR_CNT5_union_tag { /* ERM Memory 5 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT5_tag;

typedef union AON_ERM_EAR6_union_tag { /* ERM Memory 6 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR6_tag;

typedef union AON_ERM_SYN6_union_tag { /* ERM Memory 6 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN6_tag;

typedef union AON_ERM_CORR_ERR_CNT6_union_tag { /* ERM Memory 6 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT6_tag;

typedef union AON_ERM_EAR7_union_tag { /* ERM Memory 7 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR7_tag;

typedef union AON_ERM_SYN7_union_tag { /* ERM Memory 7 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN7_tag;

typedef union AON_ERM_CORR_ERR_CNT7_union_tag { /* ERM Memory 7 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT7_tag;

typedef union AON_ERM_EAR8_union_tag { /* ERM Memory 8 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR8_tag;

typedef union AON_ERM_SYN8_union_tag { /* ERM Memory 8 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN8_tag;

typedef union AON_ERM_CORR_ERR_CNT8_union_tag { /* ERM Memory 8 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT8_tag;

typedef union AON_ERM_EAR9_union_tag { /* ERM Memory 9 Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} AON_ERM_EAR9_tag;

typedef union AON_ERM_SYN9_union_tag { /* ERM Memory 9 Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} AON_ERM_SYN9_tag;

typedef union AON_ERM_CORR_ERR_CNT9_union_tag { /* ERM Memory 9 Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory n Correctable Error Count */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_ERM_CORR_ERR_CNT9_tag;

struct AON_ERM_tag {
  AON_ERM_CR0_tag CR0;                 /* ERM Configuration Register 0 */
  AON_ERM_CR1_tag CR1;                 /* ERM Configuration Register 1 */
  uint8_t AON_ERM_reserved0[8];
  AON_ERM_SR0_tag SR0;                 /* ERM Status Register 0 */
  AON_ERM_SR1_tag SR1;                 /* ERM Status Register 1 */
  uint8_t AON_ERM_reserved1[232];
  AON_ERM_EAR0_tag EAR0;               /* ERM Memory 0 Error Address Register */
  AON_ERM_SYN0_tag SYN0;               /* ERM Memory 0 Syndrome Register */
  AON_ERM_CORR_ERR_CNT0_tag CORR_ERR_CNT0; /* ERM Memory 0 Correctable Error Count Register */
  uint8_t AON_ERM_reserved2[4];
  AON_ERM_EAR1_tag EAR1;               /* ERM Memory 1 Error Address Register */
  AON_ERM_SYN1_tag SYN1;               /* ERM Memory 1 Syndrome Register */
  AON_ERM_CORR_ERR_CNT1_tag CORR_ERR_CNT1; /* ERM Memory 1 Correctable Error Count Register */
  uint8_t AON_ERM_reserved3[4];
  AON_ERM_EAR2_tag EAR2;               /* ERM Memory 2 Error Address Register */
  AON_ERM_SYN2_tag SYN2;               /* ERM Memory 2 Syndrome Register */
  AON_ERM_CORR_ERR_CNT2_tag CORR_ERR_CNT2; /* ERM Memory 2 Correctable Error Count Register */
  uint8_t AON_ERM_reserved4[4];
  AON_ERM_EAR3_tag EAR3;               /* ERM Memory 3 Error Address Register */
  AON_ERM_SYN3_tag SYN3;               /* ERM Memory 3 Syndrome Register */
  AON_ERM_CORR_ERR_CNT3_tag CORR_ERR_CNT3; /* ERM Memory 3 Correctable Error Count Register */
  uint8_t AON_ERM_reserved5[4];
  AON_ERM_EAR4_tag EAR4;               /* ERM Memory 4 Error Address Register */
  AON_ERM_SYN4_tag SYN4;               /* ERM Memory 4 Syndrome Register */
  AON_ERM_CORR_ERR_CNT4_tag CORR_ERR_CNT4; /* ERM Memory 4 Correctable Error Count Register */
  uint8_t AON_ERM_reserved6[4];
  AON_ERM_EAR5_tag EAR5;               /* ERM Memory 5 Error Address Register */
  AON_ERM_SYN5_tag SYN5;               /* ERM Memory 5 Syndrome Register */
  AON_ERM_CORR_ERR_CNT5_tag CORR_ERR_CNT5; /* ERM Memory 5 Correctable Error Count Register */
  uint8_t AON_ERM_reserved7[4];
  AON_ERM_EAR6_tag EAR6;               /* ERM Memory 6 Error Address Register */
  AON_ERM_SYN6_tag SYN6;               /* ERM Memory 6 Syndrome Register */
  AON_ERM_CORR_ERR_CNT6_tag CORR_ERR_CNT6; /* ERM Memory 6 Correctable Error Count Register */
  uint8_t AON_ERM_reserved8[4];
  AON_ERM_EAR7_tag EAR7;               /* ERM Memory 7 Error Address Register */
  AON_ERM_SYN7_tag SYN7;               /* ERM Memory 7 Syndrome Register */
  AON_ERM_CORR_ERR_CNT7_tag CORR_ERR_CNT7; /* ERM Memory 7 Correctable Error Count Register */
  uint8_t AON_ERM_reserved9[4];
  AON_ERM_EAR8_tag EAR8;               /* ERM Memory 8 Error Address Register */
  AON_ERM_SYN8_tag SYN8;               /* ERM Memory 8 Syndrome Register */
  AON_ERM_CORR_ERR_CNT8_tag CORR_ERR_CNT8; /* ERM Memory 8 Correctable Error Count Register */
  uint8_t AON_ERM_reserved10[4];
  AON_ERM_EAR9_tag EAR9;               /* ERM Memory 9 Error Address Register */
  AON_ERM_SYN9_tag SYN9;               /* ERM Memory 9 Syndrome Register */
  AON_ERM_CORR_ERR_CNT9_tag CORR_ERR_CNT9; /* ERM Memory 9 Correctable Error Count Register */
};


/* ============================================================================
   =============================== Module: AON_FCCU ===========================
   ============================================================================ */

typedef union AON_FCCU_GRKNTIMC_union_tag { /* Global Reaction Timer Period */
  vuint32_t R;
  struct {
    vuint32_t RKTIMCFG:32;             /* Reaction Timer Period */
  } B;
} AON_FCCU_GRKNTIMC_tag;

typedef union AON_FCCU_GFLTRC_C0_union_tag { /* Global Fault Recovery */
  vuint32_t R;
  struct {
    vuint32_t RHWSW0:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW1:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW2:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW3:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW4:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW5:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW6:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW7:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW8:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW9:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW10:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW11:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW12:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW13:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW14:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW15:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW16:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW17:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW18:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW19:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW20:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW21:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW22:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW23:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW24:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW25:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW26:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW27:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW28:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW29:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW30:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW31:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
  } B;
} AON_FCCU_GFLTRC_C0_tag;

typedef union AON_FCCU_GFLTRC_C1_union_tag { /* Global Fault Recovery */
  vuint32_t R;
  struct {
    vuint32_t RHWSW32:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW33:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW34:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW35:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW36:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW37:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW38:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW39:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW40:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW41:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW42:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW43:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW44:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW45:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW46:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW47:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW48:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW49:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW50:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW51:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW52:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW53:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW54:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW55:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW56:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW57:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW58:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW59:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW60:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW61:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW62:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW63:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
  } B;
} AON_FCCU_GFLTRC_C1_tag;

typedef union AON_FCCU_GFLTRC_C2_union_tag { /* Global Fault Recovery */
  vuint32_t R;
  struct {
    vuint32_t RHWSW64:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW65:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW66:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW67:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW68:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW69:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW70:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW71:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW72:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW73:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW74:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW75:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW76:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW77:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW78:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW79:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t _unused_0:16;
  } B;
} AON_FCCU_GFLTRC_C2_tag;

typedef union AON_FCCU_GFLTOVDC0_union_tag { /* Global Fault Overflow Detection */
  vuint32_t R;
  struct {
    vuint32_t OVF_DIS0:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS1:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS2:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS3:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS4:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS5:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS6:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS7:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS8:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS9:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS10:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS11:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS12:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS13:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS14:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS15:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS16:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS17:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS18:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS19:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS20:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS21:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS22:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS23:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS24:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS25:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS26:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS27:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS28:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS29:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS30:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS31:1;             /* Fault Overflow Detection Disable */
  } B;
} AON_FCCU_GFLTOVDC0_tag;

typedef union AON_FCCU_GFLTOVDC1_union_tag { /* Global Fault Overflow Detection */
  vuint32_t R;
  struct {
    vuint32_t OVF_DIS32:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS33:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS34:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS35:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS36:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS37:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS38:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS39:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS40:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS41:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS42:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS43:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS44:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS45:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS46:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS47:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS48:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS49:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS50:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS51:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS52:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS53:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS54:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS55:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS56:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS57:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS58:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS59:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS60:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS61:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS62:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS63:1;             /* Fault Overflow Detection Disable */
  } B;
} AON_FCCU_GFLTOVDC1_tag;

typedef union AON_FCCU_GFLTOVDC2_union_tag { /* Global Fault Overflow Detection */
  vuint32_t R;
  struct {
    vuint32_t OVF_DIS64:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS65:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS66:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS67:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS68:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS69:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS70:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS71:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS72:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS73:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS74:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS75:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS76:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS77:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS78:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS79:1;             /* Fault Overflow Detection Disable */
    vuint32_t _unused_0:16;
  } B;
} AON_FCCU_GFLTOVDC2_tag;

typedef union AON_FCCU_GRKNTIMS_union_tag { /* Global Reaction Timer Status */
  vuint32_t R;
  struct {
    vuint32_t RKTIMVAL:32;             /* Current Reaction Timer */
  } B;
} AON_FCCU_GRKNTIMS_tag;

typedef union AON_FCCU_GCTRL_union_tag { /* Global Space Control */
  vuint32_t R;
  struct {
    vuint32_t OVF_EN:1;                /* Overflow Enable */
    vuint32_t _unused_0:31;
  } B;
} AON_FCCU_GCTRL_tag;

typedef union AON_FCCU_GINTOVFS_union_tag { /* Global DID FSM Status */
  vuint32_t R;
  struct {
    vuint32_t FSMSTATE:2;              /* FSM State */
    vuint32_t _unused_25:5;
    vuint32_t FLTSERV:1;               /* Fault Serve */
    vuint32_t OVF_DET:1;               /* Overflow Detect */
    vuint32_t _unused_21:2;
    vuint32_t _unused_16:5;
    vuint32_t SERV_DID:4;              /* Domain Being Serviced */
    vuint32_t _unused_8:4;
    vuint32_t OVF_DID:4;               /* Overflow DID */
    vuint32_t _unused_0:4;
  } B;
} AON_FCCU_GINTOVFS_tag;

typedef union AON_FCCU_GOVFRKC_union_tag { /* Global Overflow Reaction */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_GOVFRKC_tag;

typedef union AON_FCCU_GMEOUTDC_union_tag { /* Global Minimum EOUT Duration */
  vuint32_t R;
  struct {
    vuint32_t EOUTMIND:32;             /* EOUT Minimum Duration */
  } B;
} AON_FCCU_GMEOUTDC_tag;

typedef union AON_FCCU_GEOUTTCT_union_tag { /* Global EOUT Timer Disable */
  vuint32_t R;
  struct {
    vuint32_t TMRDIS0:1;               /* Timer Disable */
    vuint32_t TMRDIS1:1;               /* Timer Disable */
    vuint32_t _unused_0:30;
  } B;
} AON_FCCU_GEOUTTCT_tag;

typedef union AON_FCCU_GLB_EOUT_GEOUTPNC_union_tag { /* Global EOUT Pin */
  vuint32_t R;
  struct {
    vuint32_t OBE_VALID:1;             /* Output Buffer Enable Valid */
    vuint32_t OBE_STAT:1;              /* Output Buffer Enable Status */
    vuint32_t _unused_29:1;
    vuint32_t DO_STAT:1;               /* Data Output Status */
    vuint32_t VAL_CTRL:2;              /* Invert Output */
    vuint32_t _unused_24:2;
    vuint32_t IBE:1;                   /* Input Buffer Enable */
    vuint32_t IND_STAT:1;              /* Input Data From Pad */
    vuint32_t INV_IP:1;                /* Invert Input */
    vuint32_t _unused_16:5;
    vuint32_t SOC_PAD_CTRL1:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL2:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL3:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL4:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL5:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL6:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL7:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL8:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL9:1;         /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL10:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL11:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL12:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL13:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL14:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL15:1;        /* SoC Pad Control */
    vuint32_t SOC_PAD_CTRL16:1;        /* SoC Pad Control */
  } B;
} AON_FCCU_GLB_EOUT_GEOUTPNC_tag;

typedef union AON_FCCU_GLB_EOUT_GEOUTPMC_union_tag { /* Global EOUT Pin Map */
  vuint32_t R;
  struct {
    vuint32_t SPLENB0:1;               /* Special Enable Pins */
    vuint32_t SPLENB1:1;               /* Special Enable Pins */
    vuint32_t SPLENB2:1;               /* Special Enable Pins */
    vuint32_t SPLENB3:1;               /* Special Enable Pins */
    vuint32_t _unused_0:28;
  } B;
} AON_FCCU_GLB_EOUT_GEOUTPMC_tag;

typedef union AON_FCCU_GLB_EOUT_GEOUTMC_union_tag { /* Global EOUT Mode */
  vuint32_t R;
  struct {
    vuint32_t EOUTM:3;                 /* EOUT Pin Mode */
    vuint32_t INV:1;                   /* Invert EOUT */
    vuint32_t _unused_0:28;
  } B;
} AON_FCCU_GLB_EOUT_GEOUTMC_tag;

typedef union AON_FCCU_GLB_EOUT_GEOUTTMS_union_tag { /* Global EOUT Timer Status */
  vuint32_t R;
  struct {
    vuint32_t EOUTDVAL:32;             /* EOUT Timer Current Value */
  } B;
} AON_FCCU_GLB_EOUT_GEOUTTMS_tag;

typedef union AON_FCCU_GLB_EOUT_GEOUTDIC_union_tag { /* Global EOUT DID */
  vuint32_t R;
  struct {
    vuint32_t DID_EOUT:4;              /* DID for Fault on EOUT */
    vuint32_t _unused_0:28;
  } B;
} AON_FCCU_GLB_EOUT_GEOUTDIC_tag;

typedef struct AON_FCCU_GLB_EOUT_struct_tag {
  AON_FCCU_GLB_EOUT_GEOUTPNC_tag GEOUTPNC; /* Global EOUT Pin */
  AON_FCCU_GLB_EOUT_GEOUTPMC_tag GEOUTPMC; /* Global EOUT Pin Map */
  AON_FCCU_GLB_EOUT_GEOUTMC_tag GEOUTMC; /* Global EOUT Mode */
  AON_FCCU_GLB_EOUT_GEOUTTMS_tag GEOUTTMS; /* Global EOUT Timer Status */
  AON_FCCU_GLB_EOUT_GEOUTDIC_tag GEOUTDIC; /* Global EOUT DID */
} AON_FCCU_GLB_EOUT_tag;

typedef union AON_FCCU_GDBGCFG_union_tag { /* Global Debug */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t FRZ:1;                   /* Freeze On First Fault */
    vuint32_t _unused_0:15;
  } B;
} AON_FCCU_GDBGCFG_tag;

typedef union AON_FCCU_GDBGSTAT_union_tag { /* Global Debug Status */
  vuint32_t R;
  struct {
    vuint32_t FLTIND:8;                /* Fault Index */
    vuint32_t _unused_2:22;
    vuint32_t _unused_0:2;
  } B;
} AON_FCCU_GDBGSTAT_tag;

typedef union AON_FCCU_GDPFSTAT_union_tag { /* Global Debug Pending Fault Status */
  vuint32_t R;
  struct {
    vuint32_t PENDFLT0:1;              /* Pending Fault Status for corresponding EOUT pin */
    vuint32_t PENDFLT1:1;              /* Pending Fault Status for corresponding EOUT pin */
    vuint32_t _unused_0:30;
  } B;
} AON_FCCU_GDPFSTAT_tag;

typedef union AON_FCCU_GDALTRLD_union_tag { /* Global Debug Alternate Reload Status */
  vuint32_t R;
  struct {
    vuint32_t ALTRLD0:1;               /* Alternate timer reload status for corresponding EOUT pin */
    vuint32_t ALTRLD1:1;               /* Alternate timer reload status for corresponding EOUT pin */
    vuint32_t _unused_0:30;
  } B;
} AON_FCCU_GDALTRLD_tag;

typedef union AON_FCCU_FHCFG0_union_tag { /* Fault Handler */
  vuint32_t R;
  struct {
    vuint32_t FHIDEN:1;                /* Fault Handler Enable */
    vuint32_t _unused_0:31;
  } B;
} AON_FCCU_FHCFG0_tag;

typedef union AON_FCCU_FHSRVDS0_union_tag { /* Fault Handler Status */
  vuint32_t R;
  struct {
    vuint32_t SERV_DID:4;              /* DID Being Serviced */
    vuint32_t _unused_24:4;
    vuint32_t AGGFLTS:1;               /* Aggregated Fault Status */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHSRVDS0_tag;

typedef union AON_FCCU_FHFLTENC0_0_union_tag { /* Fault Enable */
  vuint32_t R;
  struct {
    vuint32_t EN0:1;                   /* Fault Enable */
    vuint32_t EN1:1;                   /* Fault Enable */
    vuint32_t EN2:1;                   /* Fault Enable */
    vuint32_t EN3:1;                   /* Fault Enable */
    vuint32_t EN4:1;                   /* Fault Enable */
    vuint32_t EN5:1;                   /* Fault Enable */
    vuint32_t EN6:1;                   /* Fault Enable */
    vuint32_t EN7:1;                   /* Fault Enable */
    vuint32_t EN8:1;                   /* Fault Enable */
    vuint32_t EN9:1;                   /* Fault Enable */
    vuint32_t EN10:1;                  /* Fault Enable */
    vuint32_t EN11:1;                  /* Fault Enable */
    vuint32_t EN12:1;                  /* Fault Enable */
    vuint32_t EN13:1;                  /* Fault Enable */
    vuint32_t EN14:1;                  /* Fault Enable */
    vuint32_t EN15:1;                  /* Fault Enable */
    vuint32_t EN16:1;                  /* Fault Enable */
    vuint32_t EN17:1;                  /* Fault Enable */
    vuint32_t EN18:1;                  /* Fault Enable */
    vuint32_t EN19:1;                  /* Fault Enable */
    vuint32_t EN20:1;                  /* Fault Enable */
    vuint32_t EN21:1;                  /* Fault Enable */
    vuint32_t EN22:1;                  /* Fault Enable */
    vuint32_t EN23:1;                  /* Fault Enable */
    vuint32_t EN24:1;                  /* Fault Enable */
    vuint32_t EN25:1;                  /* Fault Enable */
    vuint32_t EN26:1;                  /* Fault Enable */
    vuint32_t EN27:1;                  /* Fault Enable */
    vuint32_t EN28:1;                  /* Fault Enable */
    vuint32_t EN29:1;                  /* Fault Enable */
    vuint32_t EN30:1;                  /* Fault Enable */
    vuint32_t EN31:1;                  /* Fault Enable */
  } B;
} AON_FCCU_FHFLTENC0_0_tag;

typedef union AON_FCCU_FHFLTENC0_1_union_tag { /* Fault Enable */
  vuint32_t R;
  struct {
    vuint32_t EN32:1;                  /* Fault Enable */
    vuint32_t EN33:1;                  /* Fault Enable */
    vuint32_t EN34:1;                  /* Fault Enable */
    vuint32_t EN35:1;                  /* Fault Enable */
    vuint32_t EN36:1;                  /* Fault Enable */
    vuint32_t EN37:1;                  /* Fault Enable */
    vuint32_t EN38:1;                  /* Fault Enable */
    vuint32_t EN39:1;                  /* Fault Enable */
    vuint32_t EN40:1;                  /* Fault Enable */
    vuint32_t EN41:1;                  /* Fault Enable */
    vuint32_t EN42:1;                  /* Fault Enable */
    vuint32_t EN43:1;                  /* Fault Enable */
    vuint32_t EN44:1;                  /* Fault Enable */
    vuint32_t EN45:1;                  /* Fault Enable */
    vuint32_t EN46:1;                  /* Fault Enable */
    vuint32_t EN47:1;                  /* Fault Enable */
    vuint32_t EN48:1;                  /* Fault Enable */
    vuint32_t EN49:1;                  /* Fault Enable */
    vuint32_t EN50:1;                  /* Fault Enable */
    vuint32_t EN51:1;                  /* Fault Enable */
    vuint32_t EN52:1;                  /* Fault Enable */
    vuint32_t EN53:1;                  /* Fault Enable */
    vuint32_t EN54:1;                  /* Fault Enable */
    vuint32_t EN55:1;                  /* Fault Enable */
    vuint32_t EN56:1;                  /* Fault Enable */
    vuint32_t EN57:1;                  /* Fault Enable */
    vuint32_t EN58:1;                  /* Fault Enable */
    vuint32_t EN59:1;                  /* Fault Enable */
    vuint32_t EN60:1;                  /* Fault Enable */
    vuint32_t EN61:1;                  /* Fault Enable */
    vuint32_t EN62:1;                  /* Fault Enable */
    vuint32_t EN63:1;                  /* Fault Enable */
  } B;
} AON_FCCU_FHFLTENC0_1_tag;

typedef union AON_FCCU_FHFLTENC0_2_union_tag { /* Fault Enable */
  vuint32_t R;
  struct {
    vuint32_t EN64:1;                  /* Fault Enable */
    vuint32_t EN65:1;                  /* Fault Enable */
    vuint32_t EN66:1;                  /* Fault Enable */
    vuint32_t EN67:1;                  /* Fault Enable */
    vuint32_t EN68:1;                  /* Fault Enable */
    vuint32_t EN69:1;                  /* Fault Enable */
    vuint32_t EN70:1;                  /* Fault Enable */
    vuint32_t EN71:1;                  /* Fault Enable */
    vuint32_t EN72:1;                  /* Fault Enable */
    vuint32_t EN73:1;                  /* Fault Enable */
    vuint32_t EN74:1;                  /* Fault Enable */
    vuint32_t EN75:1;                  /* Fault Enable */
    vuint32_t EN76:1;                  /* Fault Enable */
    vuint32_t EN77:1;                  /* Fault Enable */
    vuint32_t EN78:1;                  /* Fault Enable */
    vuint32_t EN79:1;                  /* Fault Enable */
    vuint32_t _unused_0:16;
  } B;
} AON_FCCU_FHFLTENC0_2_tag;

typedef union AON_FCCU_FHFLTS0_0_union_tag { /* Fault Status */
  vuint32_t R;
  struct {
    vuint32_t STAT0:1;                 /* Fault Status */
    vuint32_t STAT1:1;                 /* Fault Status */
    vuint32_t STAT2:1;                 /* Fault Status */
    vuint32_t STAT3:1;                 /* Fault Status */
    vuint32_t STAT4:1;                 /* Fault Status */
    vuint32_t STAT5:1;                 /* Fault Status */
    vuint32_t STAT6:1;                 /* Fault Status */
    vuint32_t STAT7:1;                 /* Fault Status */
    vuint32_t STAT8:1;                 /* Fault Status */
    vuint32_t STAT9:1;                 /* Fault Status */
    vuint32_t STAT10:1;                /* Fault Status */
    vuint32_t STAT11:1;                /* Fault Status */
    vuint32_t STAT12:1;                /* Fault Status */
    vuint32_t STAT13:1;                /* Fault Status */
    vuint32_t STAT14:1;                /* Fault Status */
    vuint32_t STAT15:1;                /* Fault Status */
    vuint32_t STAT16:1;                /* Fault Status */
    vuint32_t STAT17:1;                /* Fault Status */
    vuint32_t STAT18:1;                /* Fault Status */
    vuint32_t STAT19:1;                /* Fault Status */
    vuint32_t STAT20:1;                /* Fault Status */
    vuint32_t STAT21:1;                /* Fault Status */
    vuint32_t STAT22:1;                /* Fault Status */
    vuint32_t STAT23:1;                /* Fault Status */
    vuint32_t STAT24:1;                /* Fault Status */
    vuint32_t STAT25:1;                /* Fault Status */
    vuint32_t STAT26:1;                /* Fault Status */
    vuint32_t STAT27:1;                /* Fault Status */
    vuint32_t STAT28:1;                /* Fault Status */
    vuint32_t STAT29:1;                /* Fault Status */
    vuint32_t STAT30:1;                /* Fault Status */
    vuint32_t STAT31:1;                /* Fault Status */
  } B;
} AON_FCCU_FHFLTS0_0_tag;

typedef union AON_FCCU_FHFLTS0_1_union_tag { /* Fault Status */
  vuint32_t R;
  struct {
    vuint32_t STAT32:1;                /* Fault Status */
    vuint32_t STAT33:1;                /* Fault Status */
    vuint32_t STAT34:1;                /* Fault Status */
    vuint32_t STAT35:1;                /* Fault Status */
    vuint32_t STAT36:1;                /* Fault Status */
    vuint32_t STAT37:1;                /* Fault Status */
    vuint32_t STAT38:1;                /* Fault Status */
    vuint32_t STAT39:1;                /* Fault Status */
    vuint32_t STAT40:1;                /* Fault Status */
    vuint32_t STAT41:1;                /* Fault Status */
    vuint32_t STAT42:1;                /* Fault Status */
    vuint32_t STAT43:1;                /* Fault Status */
    vuint32_t STAT44:1;                /* Fault Status */
    vuint32_t STAT45:1;                /* Fault Status */
    vuint32_t STAT46:1;                /* Fault Status */
    vuint32_t STAT47:1;                /* Fault Status */
    vuint32_t STAT48:1;                /* Fault Status */
    vuint32_t STAT49:1;                /* Fault Status */
    vuint32_t STAT50:1;                /* Fault Status */
    vuint32_t STAT51:1;                /* Fault Status */
    vuint32_t STAT52:1;                /* Fault Status */
    vuint32_t STAT53:1;                /* Fault Status */
    vuint32_t STAT54:1;                /* Fault Status */
    vuint32_t STAT55:1;                /* Fault Status */
    vuint32_t STAT56:1;                /* Fault Status */
    vuint32_t STAT57:1;                /* Fault Status */
    vuint32_t STAT58:1;                /* Fault Status */
    vuint32_t STAT59:1;                /* Fault Status */
    vuint32_t STAT60:1;                /* Fault Status */
    vuint32_t STAT61:1;                /* Fault Status */
    vuint32_t STAT62:1;                /* Fault Status */
    vuint32_t STAT63:1;                /* Fault Status */
  } B;
} AON_FCCU_FHFLTS0_1_tag;

typedef union AON_FCCU_FHFLTS0_2_union_tag { /* Fault Status */
  vuint32_t R;
  struct {
    vuint32_t STAT64:1;                /* Fault Status */
    vuint32_t STAT65:1;                /* Fault Status */
    vuint32_t STAT66:1;                /* Fault Status */
    vuint32_t STAT67:1;                /* Fault Status */
    vuint32_t STAT68:1;                /* Fault Status */
    vuint32_t STAT69:1;                /* Fault Status */
    vuint32_t STAT70:1;                /* Fault Status */
    vuint32_t STAT71:1;                /* Fault Status */
    vuint32_t STAT72:1;                /* Fault Status */
    vuint32_t STAT73:1;                /* Fault Status */
    vuint32_t STAT74:1;                /* Fault Status */
    vuint32_t STAT75:1;                /* Fault Status */
    vuint32_t STAT76:1;                /* Fault Status */
    vuint32_t STAT77:1;                /* Fault Status */
    vuint32_t STAT78:1;                /* Fault Status */
    vuint32_t STAT79:1;                /* Fault Status */
    vuint32_t _unused_0:16;
  } B;
} AON_FCCU_FHFLTS0_2_tag;

typedef union AON_FCCU_FHFLTRKC0_0_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL0:3;               /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL1:3;               /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL2:3;               /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL3:3;               /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_0_tag;

typedef union AON_FCCU_FHFLTRKC0_1_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL4:3;               /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL5:3;               /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL6:3;               /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL7:3;               /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_1_tag;

typedef union AON_FCCU_FHFLTRKC0_2_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL8:3;               /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL9:3;               /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL10:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL11:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_2_tag;

typedef union AON_FCCU_FHFLTRKC0_3_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL12:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL13:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL14:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL15:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_3_tag;

typedef union AON_FCCU_FHFLTRKC0_4_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL16:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL17:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL18:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL19:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_4_tag;

typedef union AON_FCCU_FHFLTRKC0_5_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL20:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL21:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL22:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL23:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_5_tag;

typedef union AON_FCCU_FHFLTRKC0_6_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL24:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL25:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL26:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL27:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_6_tag;

typedef union AON_FCCU_FHFLTRKC0_7_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL28:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL29:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL30:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL31:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_7_tag;

typedef union AON_FCCU_FHFLTRKC0_8_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL32:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL33:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL34:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL35:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_8_tag;

typedef union AON_FCCU_FHFLTRKC0_9_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL36:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL37:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL38:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL39:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_9_tag;

typedef union AON_FCCU_FHFLTRKC0_10_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL40:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL41:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL42:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL43:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_10_tag;

typedef union AON_FCCU_FHFLTRKC0_11_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL44:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL45:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL46:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL47:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_11_tag;

typedef union AON_FCCU_FHFLTRKC0_12_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL48:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL49:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL50:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL51:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_12_tag;

typedef union AON_FCCU_FHFLTRKC0_13_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL52:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL53:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL54:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL55:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_13_tag;

typedef union AON_FCCU_FHFLTRKC0_14_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL56:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL57:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL58:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL59:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_14_tag;

typedef union AON_FCCU_FHFLTRKC0_15_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL60:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL61:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL62:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL63:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_15_tag;

typedef union AON_FCCU_FHFLTRKC0_16_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL64:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL65:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL66:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL67:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_16_tag;

typedef union AON_FCCU_FHFLTRKC0_17_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL68:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL69:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL70:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL71:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_17_tag;

typedef union AON_FCCU_FHFLTRKC0_18_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL72:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL73:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL74:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL75:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_18_tag;

typedef union AON_FCCU_FHFLTRKC0_19_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL76:3;              /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL77:3;              /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL78:3;              /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL79:3;              /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} AON_FCCU_FHFLTRKC0_19_tag;

typedef union AON_FCCU_FHIMRKC0_00_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_00_tag;

typedef union AON_FCCU_FHDLRKC0_00_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_00_tag;

typedef union AON_FCCU_FHIMRKC0_10_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_10_tag;

typedef union AON_FCCU_FHDLRKC0_10_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_10_tag;

typedef union AON_FCCU_FHIMRKC0_20_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_20_tag;

typedef union AON_FCCU_FHDLRKC0_20_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_20_tag;

typedef union AON_FCCU_FHIMRKC0_30_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_30_tag;

typedef union AON_FCCU_FHDLRKC0_30_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_30_tag;

typedef union AON_FCCU_FHIMRKC0_40_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_40_tag;

typedef union AON_FCCU_FHDLRKC0_40_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_40_tag;

typedef union AON_FCCU_FHIMRKC0_50_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_50_tag;

typedef union AON_FCCU_FHDLRKC0_50_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_50_tag;

typedef union AON_FCCU_FHIMRKC0_60_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_60_tag;

typedef union AON_FCCU_FHDLRKC0_60_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_60_tag;

typedef union AON_FCCU_FHIMRKC0_70_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHIMRKC0_70_tag;

typedef union AON_FCCU_FHDLRKC0_70_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} AON_FCCU_FHDLRKC0_70_tag;

struct AON_FCCU_tag {
  uint8_t AON_FCCU_reserved0[768];
  AON_FCCU_GRKNTIMC_tag GRKNTIMC[1];   /* Global Reaction Timer Period */
  uint8_t AON_FCCU_reserved1[316];
  AON_FCCU_GFLTRC_C0_tag GFLTRC_C0;    /* Global Fault Recovery */
  AON_FCCU_GFLTRC_C1_tag GFLTRC_C1;    /* Global Fault Recovery */
  AON_FCCU_GFLTRC_C2_tag GFLTRC_C2;    /* Global Fault Recovery */
  uint8_t AON_FCCU_reserved2[2100];
  AON_FCCU_GFLTOVDC0_tag GFLTOVDC0;    /* Global Fault Overflow Detection */
  AON_FCCU_GFLTOVDC1_tag GFLTOVDC1;    /* Global Fault Overflow Detection */
  AON_FCCU_GFLTOVDC2_tag GFLTOVDC2;    /* Global Fault Overflow Detection */
  uint8_t AON_FCCU_reserved3[116];
  AON_FCCU_GRKNTIMS_tag GRKNTIMS;      /* Global Reaction Timer Status */
  AON_FCCU_GCTRL_tag GCTRL;            /* Global Space Control */
  AON_FCCU_GINTOVFS_tag GINTOVFS;      /* Global DID FSM Status */
  uint8_t AON_FCCU_reserved4[4];
  AON_FCCU_GOVFRKC_tag GOVFRKC[1];     /* Global Overflow Reaction */
  uint8_t AON_FCCU_reserved5[12];
  AON_FCCU_GMEOUTDC_tag GMEOUTDC;      /* Global Minimum EOUT Duration */
  AON_FCCU_GEOUTTCT_tag GEOUTTCT;      /* Global EOUT Timer Disable */
  uint8_t AON_FCCU_reserved6[8];
  AON_FCCU_GLB_EOUT_tag GLB_EOUT[2];
  uint8_t AON_FCCU_reserved7[600];
  AON_FCCU_GDBGCFG_tag GDBGCFG;        /* Global Debug */
  AON_FCCU_GDBGSTAT_tag GDBGSTAT;      /* Global Debug Status */
  AON_FCCU_GDPFSTAT_tag GDPFSTAT;      /* Global Debug Pending Fault Status */
  AON_FCCU_GDALTRLD_tag GDALTRLD;      /* Global Debug Alternate Reload Status */
  uint8_t AON_FCCU_reserved8[1306688]; /* Offset to FHID location */
  AON_FCCU_FHCFG0_tag FHCFG0;          /* Fault Handler */
  AON_FCCU_FHSRVDS0_tag FHSRVDS0;      /* Fault Handler Status */
  uint8_t AON_FCCU_reserved9[8];
  AON_FCCU_FHFLTENC0_0_tag FHFLTENC0_0; /* Fault Enable */
  AON_FCCU_FHFLTENC0_1_tag FHFLTENC0_1; /* Fault Enable */
  AON_FCCU_FHFLTENC0_2_tag FHFLTENC0_2; /* Fault Enable */
  uint8_t AON_FCCU_reserved10[52];
  AON_FCCU_FHFLTS0_0_tag FHFLTS0_0;    /* Fault Status */
  AON_FCCU_FHFLTS0_1_tag FHFLTS0_1;    /* Fault Status */
  AON_FCCU_FHFLTS0_2_tag FHFLTS0_2;    /* Fault Status */
  uint8_t AON_FCCU_reserved11[52];
  AON_FCCU_FHFLTRKC0_0_tag FHFLTRKC0_0; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_1_tag FHFLTRKC0_1; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_2_tag FHFLTRKC0_2; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_3_tag FHFLTRKC0_3; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_4_tag FHFLTRKC0_4; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_5_tag FHFLTRKC0_5; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_6_tag FHFLTRKC0_6; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_7_tag FHFLTRKC0_7; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_8_tag FHFLTRKC0_8; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_9_tag FHFLTRKC0_9; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_10_tag FHFLTRKC0_10; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_11_tag FHFLTRKC0_11; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_12_tag FHFLTRKC0_12; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_13_tag FHFLTRKC0_13; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_14_tag FHFLTRKC0_14; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_15_tag FHFLTRKC0_15; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_16_tag FHFLTRKC0_16; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_17_tag FHFLTRKC0_17; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_18_tag FHFLTRKC0_18; /* Fault Reaction Set Configuration */
  AON_FCCU_FHFLTRKC0_19_tag FHFLTRKC0_19; /* Fault Reaction Set Configuration */
  uint8_t AON_FCCU_reserved12[432];
  AON_FCCU_FHIMRKC0_00_tag FHIMRKC0_00; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved13[12];
  AON_FCCU_FHDLRKC0_00_tag FHDLRKC0_00; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved14[12];
  AON_FCCU_FHIMRKC0_10_tag FHIMRKC0_10; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved15[12];
  AON_FCCU_FHDLRKC0_10_tag FHDLRKC0_10; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved16[12];
  AON_FCCU_FHIMRKC0_20_tag FHIMRKC0_20; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved17[12];
  AON_FCCU_FHDLRKC0_20_tag FHDLRKC0_20; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved18[12];
  AON_FCCU_FHIMRKC0_30_tag FHIMRKC0_30; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved19[12];
  AON_FCCU_FHDLRKC0_30_tag FHDLRKC0_30; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved20[12];
  AON_FCCU_FHIMRKC0_40_tag FHIMRKC0_40; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved21[12];
  AON_FCCU_FHDLRKC0_40_tag FHDLRKC0_40; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved22[12];
  AON_FCCU_FHIMRKC0_50_tag FHIMRKC0_50; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved23[12];
  AON_FCCU_FHDLRKC0_50_tag FHDLRKC0_50; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved24[12];
  AON_FCCU_FHIMRKC0_60_tag FHIMRKC0_60; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved25[12];
  AON_FCCU_FHDLRKC0_60_tag FHDLRKC0_60; /* Delayed Reaction Configuration */
  uint8_t AON_FCCU_reserved26[12];
  AON_FCCU_FHIMRKC0_70_tag FHIMRKC0_70; /* Immediate Reaction Configuration */
  uint8_t AON_FCCU_reserved27[12];
  AON_FCCU_FHDLRKC0_70_tag FHDLRKC0_70; /* Delayed Reaction Configuration */
} ;


/* ============================================================================
   =============================== Module: AON_I3C ============================
   ============================================================================ */

typedef union AON_I3C_MCONFIG_union_tag { /* Controller Configuration */
  vuint32_t R;
  struct {
    vuint32_t MSTENA:2;                /* Controller Enable */
    vuint32_t _unused_29:1;
    vuint32_t DISTO:1;                 /* Disable Timeout */
    vuint32_t HKEEP:2;                 /* High-Keeper */
    vuint32_t ODSTOP:1;                /* Open Drain Stop */
    vuint32_t _unused_24:1;
    vuint32_t PPBAUD:4;                /* Push-Pull Baud Rate */
    vuint32_t PPLOW:4;                 /* Push-Pull Low */
    vuint32_t ODBAUD:8;                /* Open Drain Baud Rate */
    vuint32_t ODHPP:1;                 /* Open Drain High Push-Pull */
    vuint32_t SKEW:3;                  /* Skew */
    vuint32_t I2CBAUD:4;               /* I2C Baud Rate */
  } B;
} AON_I3C_MCONFIG_tag;

typedef union AON_I3C_SCONFIG_union_tag { /* Target Configuration */
  vuint32_t R;
  struct {
    vuint32_t SLVENA:1;                /* Target Enable */
    vuint32_t NACK:1;                  /* Not Acknowledge */
    vuint32_t MATCHSS:1;               /* Match START or STOP */
    vuint32_t S0IGNORE:1;              /* Ignore TE0/TE1 Errors */
    vuint32_t HDROK:1;                 /* HDR OK */
    vuint32_t _unused_25:2;
    vuint32_t _unused_24:1;            /* Reserved */
    vuint32_t _unused_23:1;
    vuint32_t OFFLINE:1;               /* Offline */
    vuint32_t _unused_20:2;
    vuint32_t _unused_16:4;            /* Reserved */
    vuint32_t BAMATCH:6;               /* Bus Available Match */
    vuint32_t _unused_8:2;
    vuint32_t _unused_7:1;             /* Reserved */
    vuint32_t SADDR:7;                 /* Static Address */
  } B;
} AON_I3C_SCONFIG_tag;

typedef union AON_I3C_SSTATUS_union_tag { /* Target Status */
  vuint32_t R;
  struct {
    vuint32_t STNOTSTOP:1;             /* Status Not Stop */
    vuint32_t STMSG:1;                 /* Status message */
    vuint32_t STCCCH:1;                /* Status Common Command Code Handler */
    vuint32_t STREQRD:1;               /* Status Request Read */
    vuint32_t STREQWR:1;               /* Status Request Write */
    vuint32_t STDAA:1;                 /* Status Dynamic Address Assignment */
    vuint32_t STHDR:1;                 /* Status High Data Rate */
    vuint32_t _unused_24:1;
    vuint32_t START:1;                 /* Start */
    vuint32_t MATCHED:1;               /* Matched */
    vuint32_t STOP:1;                  /* Stop */
    vuint32_t RX_PEND:1;               /* Received Message Pending */
    vuint32_t TXNOTFULL:1;             /* Transmit Buffer Is Not Full */
    vuint32_t DACHG:1;                 /* Dynamic Address Change */
    vuint32_t CCC:1;                   /* Common Command Code */
    vuint32_t ERRWARN:1;               /* Error Warning */
    vuint32_t HDRMATCH:1;              /* High Data Rate Command Match */
    vuint32_t CHANDLED:1;              /* Common Command Code Handled */
    vuint32_t EVENT:1;                 /* Event */
    vuint32_t SLVRST:1;                /* Target Reset */
    vuint32_t EVDET:2;                 /* Event Details */
    vuint32_t _unused_8:2;
    vuint32_t IBIDIS:1;                /* In-Band Interrupts Are Disabled */
    vuint32_t MRDIS:1;                 /* Controller Requests Are Disabled */
    vuint32_t _unused_5:1;
    vuint32_t HJDIS:1;                 /* Hot-Join Disabled */
    vuint32_t ACTSTATE:2;              /* Activity State from Common Command Codes (CCC) */
    vuint32_t TIMECTRL:2;              /* Time Control */
  } B;
} AON_I3C_SSTATUS_tag;

typedef union AON_I3C_SCTRL_union_tag { /* Target Control */
  vuint32_t R;
  struct {
    vuint32_t EVENT:2;                 /* Event */
    vuint32_t _unused_29:1;
    vuint32_t EXTDATA:1;               /* Extended Data */
    vuint32_t MAPIDX:1;                /* Map Index */
    vuint32_t _unused_24:3;
    vuint32_t IBIDATA:8;               /* In-Band Interrupt Data */
    vuint32_t PENDINT:4;               /* Pending Interrupt */
    vuint32_t ACTSTATE:2;              /* Activity State of Target */
    vuint32_t _unused_8:2;             /* Reserved */
    vuint32_t VENDINFO:8;              /* Vendor Information */
  } B;
} AON_I3C_SCTRL_tag;

typedef union AON_I3C_SINTSET_union_tag { /* Target Interrupt Set */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t START:1;                 /* Start Interrupt Enable */
    vuint32_t MATCHED:1;               /* Match interrupt enable */
    vuint32_t STOP:1;                  /* Stop Interrupt Enable */
    vuint32_t RXPEND:1;                /* Receive Interrupt Enable */
    vuint32_t TXSEND:1;                /* Transmit Interrupt Enable */
    vuint32_t DACHG:1;                 /* Dynamic Address Change Interrupt Enable */
    vuint32_t CCC:1;                   /* CCC (that was not handled by I3C module) Interrupt Enable */
    vuint32_t ERRWARN:1;               /* Error or Warning Interrupt Enable */
    vuint32_t DDRMATCHED:1;            /* Double Data Rate Interrupt Enable */
    vuint32_t CHANDLED:1;              /* Common Command Code (CCC) Interrupt Enable */
    vuint32_t EVENT:1;                 /* Event Interrupt Enable */
    vuint32_t SLVRST:1;                /* Target Reset */
    vuint32_t _unused_0:12;            /* Reserved */
  } B;
} AON_I3C_SINTSET_tag;

typedef union AON_I3C_SINTCLR_union_tag { /* Target Interrupt Clear */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;            /* Reserved */
    vuint32_t START:1;                 /* START Interrupt Enable Clear */
    vuint32_t MATCHED:1;               /* MATCHED Interrupt Enable Clear */
    vuint32_t STOP:1;                  /* STOP Interrupt Enable Clear */
    vuint32_t RXPEND:1;                /* RXPEND Interrupt Enable Clear */
    vuint32_t TXSEND:1;                /* TXSEND Interrupt Enable Clear */
    vuint32_t DACHG:1;                 /* DACHG Interrupt Enable Clear */
    vuint32_t CCC:1;                   /* CCC Interrupt Enable Clear */
    vuint32_t ERRWARN:1;               /* ERRWARN Interrupt Enable Clear */
    vuint32_t DDRMATCHED:1;            /* DDRMATCHED Interrupt Enable Clear */
    vuint32_t CHANDLED:1;              /* CHANDLED Interrupt Enable Clear */
    vuint32_t EVENT:1;                 /* EVENT Interrupt Enable Clear */
    vuint32_t SLVRST:1;                /* Target Reset */
    vuint32_t _unused_0:12;            /* Reserved */
  } B;
} AON_I3C_SINTCLR_tag;

typedef union AON_I3C_SINTMASKED_union_tag { /* Target Interrupt Mask */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;            /* Reserved */
    vuint32_t START:1;                 /* START interrupt mask */
    vuint32_t MATCHED:1;               /* MATCHED Interrupt Mask */
    vuint32_t STOP:1;                  /* STOP Interrupt Mask */
    vuint32_t RXPEND:1;                /* RXPEND Interrupt Mask */
    vuint32_t TXSEND:1;                /* TXSEND Interrupt Mask */
    vuint32_t DACHG:1;                 /* DACHG Interrupt Mask */
    vuint32_t CCC:1;                   /* CCC Interrupt Mask */
    vuint32_t ERRWARN:1;               /* ERRWARN Interrupt Mask */
    vuint32_t DDRMATCHED:1;            /* DDRMATCHED Interrupt Mask */
    vuint32_t CHANDLED:1;              /* CHANDLED Interrupt Mask */
    vuint32_t EVENT:1;                 /* EVENT Interrupt Mask */
    vuint32_t SLVRST:1;                /* Target Reset Interrupt Mask */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_SINTMASKED_tag;

typedef union AON_I3C_SERRWARN_union_tag { /* Target Errors and Warnings */
  vuint32_t R;
  struct {
    vuint32_t ORUN:1;                  /* Overrun Error */
    vuint32_t URUN:1;                  /* Underrun Error */
    vuint32_t URUNNACK:1;              /* Underrun and Not Acknowledged (NACKED) Error */
    vuint32_t TERM:1;                  /* Terminated Error */
    vuint32_t INVSTART:1;              /* Invalid Start Error */
    vuint32_t _unused_24:3;
    vuint32_t SPAR:1;                  /* SDR Parity Error */
    vuint32_t HPAR:1;                  /* HDR Parity Error */
    vuint32_t HCRC:1;                  /* HDR-DDR CRC Error */
    vuint32_t S0S1:1;                  /* TE0 or TE1 Error */
    vuint32_t _unused_19:1;
    vuint32_t _unused_18:1;
    vuint32_t _unused_16:2;
    vuint32_t OREAD:1;                 /* Over-read Error */
    vuint32_t OWRITE:1;                /* Over-write Error */
    vuint32_t _unused_11:3;
    vuint32_t _unused_10:1;
    vuint32_t _unused_0:10;
  } B;
} AON_I3C_SERRWARN_tag;

typedef union AON_I3C_SDMACTRL_union_tag { /* Target DMA Control */
  vuint32_t R;
  struct {
    vuint32_t DMAFB:2;                 /* DMA Read (From-bus) Trigger */
    vuint32_t DMATB:2;                 /* DMA Write (To-bus) Trigger */
    vuint32_t DMAWIDTH:2;              /* Width of DMA Operations */
    vuint32_t _unused_24:2;
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_SDMACTRL_tag;

typedef union AON_I3C_SDATACTRL_union_tag { /* Target Data Control */
  vuint32_t R;
  struct {
    vuint32_t FLUSHTB:1;               /* Flush the To-bus Buffer or FIFO */
    vuint32_t FLUSHFB:1;               /* Flush the From-bus Buffer or FIFO */
    vuint32_t _unused_29:1;            /* Reserved */
    vuint32_t UNLOCK:1;                /* Unlock */
    vuint32_t TXTRIG:2;                /* Transmit Trigger Level */
    vuint32_t RXTRIG:2;                /* Receive Trigger Level */
    vuint32_t _unused_16:8;            /* Reserved */
    vuint32_t TXCOUNT:5;               /* Count of Bytes in Transmit */
    vuint32_t _unused_10:1;
    vuint32_t _unused_8:2;
    vuint32_t RXCOUNT:5;               /* Count of Bytes in Receive */
    vuint32_t _unused_2:1;
    vuint32_t TXFULL:1;                /* Transmit Is Full */
    vuint32_t RXEMPTY:1;               /* Receive Is Empty */
  } B;
} AON_I3C_SDATACTRL_tag;

typedef union AON_I3C_SWDATAB_union_tag { /* Target Write Data Byte */
  vuint32_t R;
  struct {
    vuint32_t DATA:8;                  /* Data */
    vuint32_t END:1;                   /* End */
    vuint32_t _unused_16:7;
    vuint32_t END_ALSO:1;              /* End Also */
    vuint32_t _unused_0:15;
  } B;
} AON_I3C_SWDATAB_tag;

typedef union AON_I3C_SWDATABE_union_tag { /* Target Write Data Byte End */
  vuint32_t R;
  struct {
    vuint32_t DATA:8;                  /* Data */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_SWDATABE_tag;

typedef union AON_I3C_SWDATAH_union_tag { /* Target Write Data Half-word */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data 0 */
    vuint32_t DATA1:8;                 /* Data 1 */
    vuint32_t END:1;                   /* End of message */
    vuint32_t _unused_0:15;
  } B;
} AON_I3C_SWDATAH_tag;

typedef union AON_I3C_SWDATAHE_union_tag { /* Target Write Data Half-word End */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data 0 */
    vuint32_t DATA1:8;                 /* Data 1 */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_SWDATAHE_tag;

typedef union AON_I3C_SRDATAB_union_tag { /* Target Read Data Byte */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data 0 */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_SRDATAB_tag;

typedef union AON_I3C_SRDATAH_union_tag { /* Target Read Data Halfword */
  vuint32_t R;
  struct {
    vuint32_t LSB:8;                   /* The first byte read from the target */
    vuint32_t MSB:8;                   /* The second byte read from the target */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_SRDATAH_tag;

typedef union AON_I3C_SWDATA_B_H_SWDATAB1_union_tag { /* Target Write Data Byte */
  vuint32_t R;
  struct {
    vuint32_t DATA:8;                  /* Data */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_SWDATA_B_H_SWDATAB1_tag;

typedef union AON_I3C_SWDATA_B_H_SWDATAH1_union_tag { /* Target Write Data Halfword */
  vuint32_t R;
  struct {
    vuint32_t DATA:16;                 /* Data */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_SWDATA_B_H_SWDATAH1_tag;

typedef union AON_I3C_SWDATA_B_H_union_tag {
  AON_I3C_SWDATA_B_H_SWDATAB1_tag SWDATAB1; /* Target Write Data Byte */
  AON_I3C_SWDATA_B_H_SWDATAH1_tag SWDATAH1; /* Target Write Data Halfword */
} AON_I3C_SWDATA_B_H_tag;

typedef union AON_I3C_SCAPABILITIES2_union_tag { /* Target Capabilities 2 */
  vuint32_t R;
  struct {
    vuint32_t MAPCNT:4;                /* Map Count */
    vuint32_t I2C10B:1;                /* I2C 10-bit Address */
    vuint32_t I2CRST:1;                /* I2C Software Reset */
    vuint32_t I2CDEVID:1;              /* I2C Device ID */
    vuint32_t _unused_24:1;
    vuint32_t IBIEXT:1;                /* In-Band Interrupt EXTDATA */
    vuint32_t IBIXREG:1;               /* In-Band Interrupt Extended Register */
    vuint32_t _unused_16:6;
    vuint32_t V1_1:1;                  /* Version 1.1 */
    vuint32_t SLVRST:1;                /* Target Reset */
    vuint32_t GROUP:2;                 /* Group */
    vuint32_t _unused_11:1;
    vuint32_t AASA:1;                  /* Supports SETAASA */
    vuint32_t SSTSUB:1;                /* Target-Target(s)-Tunnel Subscriber Capable */
    vuint32_t SSTWR:1;                 /* Target-Target(s)-Tunnel Write Capable */
    vuint32_t _unused_0:8;
  } B;
} AON_I3C_SCAPABILITIES2_tag;

typedef union AON_I3C_SCAPABILITIES_union_tag { /* Target Capabilities */
  vuint32_t R;
  struct {
    vuint32_t IDENA:2;                 /* ID 48b Handler */
    vuint32_t IDREG:4;                 /* ID Register */
    vuint32_t HDRSUPP:2;               /* High Data Rate Support */
    vuint32_t _unused_23:1;
    vuint32_t MASTER:1;                /* Controller */
    vuint32_t SADDR:2;                 /* Static Address */
    vuint32_t CCCHANDLE:4;             /* Common Command Codes Handling */
    vuint32_t IBI_MR_HJ:5;             /* In-Band Interrupts, Controller Requests, Hot-Join Events */
    vuint32_t TIMECTRL:1;              /* Time Control */
    vuint32_t _unused_9:1;             /* Reserved */
    vuint32_t EXTFIFO:3;               /* External FIFO */
    vuint32_t FIFOTX:2;                /* FIFO Transmit */
    vuint32_t FIFORX:2;                /* FIFO Receive */
    vuint32_t INT:1;                   /* Interrupts */
    vuint32_t DMA:1;                   /* Direct Memory Access */
  } B;
} AON_I3C_SCAPABILITIES_tag;

typedef union AON_I3C_SMAXLIMITS_union_tag { /* Target Maximum Limits */
  vuint32_t R;
  struct {
    vuint32_t MAXRD:12;                /* Maximum Read Length */
    vuint32_t _unused_16:4;            /* Reserved */
    vuint32_t MAXWR:12;                /* Maximum Write Length */
    vuint32_t _unused_0:4;
  } B;
} AON_I3C_SMAXLIMITS_tag;

typedef union AON_I3C_SIDPARTNO_union_tag { /* Target ID Part Number */
  vuint32_t R;
  struct {
    vuint32_t PARTNO:32;               /* Part number */
  } B;
} AON_I3C_SIDPARTNO_tag;

typedef union AON_I3C_SIDEXT_union_tag { /* Target ID Extension */
  vuint32_t R;
  struct {
    vuint32_t _unused_28:4;
    vuint32_t _unused_25:3;
    vuint32_t _unused_24:1;            /* Reserved */
    vuint32_t DCR:8;                   /* Device Characteristic Register */
    vuint32_t BCR:8;                   /* Bus Characteristics Register */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} AON_I3C_SIDEXT_tag;

typedef union AON_I3C_SVENDORID_union_tag { /* Target Vendor ID */
  vuint32_t R;
  struct {
    vuint32_t VID:15;                  /* Vendor ID */
    vuint32_t _unused_0:17;            /* Reserved */
  } B;
} AON_I3C_SVENDORID_tag;

typedef union AON_I3C_STCCLOCK_union_tag { /* Target Time Control Clock */
  vuint32_t R;
  struct {
    vuint32_t ACCURACY:8;              /* Clock Accuracy */
    vuint32_t FREQ:8;                  /* Clock Frequency */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_I3C_STCCLOCK_tag;

typedef union AON_I3C_SMSGMAPADDR_union_tag { /* Target Message Map Address */
  vuint32_t R;
  struct {
    vuint32_t MAPLAST:4;               /* Matched Address Index */
    vuint32_t LASTSTATIC:1;            /* Last Static Address Matched */
    vuint32_t _unused_24:3;
    vuint32_t MAPLASTM1:4;             /* Matched Previous Address Index 1 */
    vuint32_t _unused_16:4;
    vuint32_t MAPLASTM2:4;             /* Matched Previous Index 2 */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_SMSGMAPADDR_tag;

typedef union AON_I3C_MCONFIG_EXT_union_tag { /* Controller Extended Configuration */
  vuint32_t R;
  struct {
    vuint32_t I2CBLOW:4;               /* I2C BAUD Low */
    vuint32_t I2CHS:1;                 /* I2C HS */
    vuint32_t _unused_26:1;
    vuint32_t _unused_24:2;
    vuint32_t I2C_A10B:1;              /* I2C_A10B */
    vuint32_t I2C_A10BEXT:3;           /* I2C_A10BEXT */
    vuint32_t _unused_16:4;
    vuint32_t I3C_CAS_DEL:2;           /* I3C CAS Delay after START */
    vuint32_t I3C_CASR_DEL:2;          /* I3C CAS Delay After Repeated START */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_MCONFIG_EXT_tag;

typedef union AON_I3C_MCTRL_union_tag { /* Controller Control */
  vuint32_t R;
  struct {
    vuint32_t REQUEST:3;               /* Request */
    vuint32_t _unused_28:1;            /* Reserved */
    vuint32_t TYPE:2;                  /* Bus Type with EmitStartAddr */
    vuint32_t IBIRESP:2;               /* In-Band Interrupt Response */
    vuint32_t DIR:1;                   /* Direction */
    vuint32_t ADDR:7;                  /* Address */
    vuint32_t RDTERM:8;                /* Read Terminate Counter */
    vuint32_t _unused_0:8;
  } B;
} AON_I3C_MCTRL_tag;

typedef union AON_I3C_MSTATUS_union_tag { /* Controller Status */
  vuint32_t R;
  struct {
    vuint32_t STATE:3;                 /* State Of The Controller */
    vuint32_t _unused_28:1;
    vuint32_t BETWEEN:1;               /* Between */
    vuint32_t NACKED:1;                /* Not Acknowledged */
    vuint32_t IBITYPE:2;               /* In-Band Interrupt (IBI) Type */
    vuint32_t SLVSTART:1;              /* Target Start */
    vuint32_t MCTRLDONE:1;             /* Controller Control Done */
    vuint32_t COMPLETE:1;              /* Complete */
    vuint32_t RXPEND:1;                /* RXPEND */
    vuint32_t TXNOTFULL:1;             /* TX Buffer or FIFO Not Full */
    vuint32_t IBIWON:1;                /* In-Band Interrupt (IBI) Won */
    vuint32_t _unused_17:1;
    vuint32_t ERRWARN:1;               /* Error Or Warning */
    vuint32_t _unused_13:3;
    vuint32_t NOWMASTER:1;             /* Module Is Now Controller */
    vuint32_t _unused_8:4;
    vuint32_t IBIADDR:7;               /* IBI Address */
    vuint32_t _unused_0:1;
  } B;
} AON_I3C_MSTATUS_tag;

typedef union AON_I3C_MIBIRULES_union_tag { /* Controller In-band Interrupt Registry and Rules */
  vuint32_t R;
  struct {
    vuint32_t ADDR0:6;                 /* ADDR0 */
    vuint32_t ADDR1:6;                 /* ADDR1 */
    vuint32_t ADDR2:6;                 /* ADDR2 */
    vuint32_t ADDR3:6;                 /* ADDR3 */
    vuint32_t ADDR4:6;                 /* ADDR4 */
    vuint32_t MSB0:1;                  /* Most Significant Address Bit Is 0 */
    vuint32_t NOBYTE:1;                /* No IBI byte */
  } B;
} AON_I3C_MIBIRULES_tag;

typedef union AON_I3C_MINTSET_union_tag { /* Controller Interrupt Set */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t SLVSTART:1;              /* Target Start Interrupt Enable */
    vuint32_t MCTRLDONE:1;             /* Controller Control Done Interrupt Enable */
    vuint32_t COMPLETE:1;              /* Completed Message Interrupt Enable */
    vuint32_t RXPEND:1;                /* Rx Pending Interrupt Enable */
    vuint32_t TXNOTFULL:1;             /* TX buffer/FIFO is not full interrupt enable */
    vuint32_t IBIWON:1;                /* In-Band Interrupt (IBI) Won Interrupt Enable */
    vuint32_t _unused_17:1;
    vuint32_t ERRWARN:1;               /* Error or Warning (ERRWARN) Interrupt Enable */
    vuint32_t _unused_13:3;
    vuint32_t NOWMASTER:1;             /* Now Controller (now this I3C module is a controller) Interrupt Enable */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_MINTSET_tag;

typedef union AON_I3C_MINTCLR_union_tag { /* Controller Interrupt Clear */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t SLVSTART:1;              /* SLVSTART Interrupt Enable Clear */
    vuint32_t MCTRLDONE:1;             /* MCTRLDONE Interrupt Enable Clear */
    vuint32_t COMPLETE:1;              /* COMPLETE Interrupt Enable Clear */
    vuint32_t RXPEND:1;                /* RXPEND Interrupt Enable Clear */
    vuint32_t TXNOTFULL:1;             /* TXNOTFULL Interrupt Enable Clear */
    vuint32_t IBIWON:1;                /* IBIWON Interrupt Enable Clear */
    vuint32_t _unused_17:1;
    vuint32_t ERRWARN:1;               /* ERRWARN Interrupt Enable Clear */
    vuint32_t _unused_13:3;
    vuint32_t NOWMASTER:1;             /* NOWCONTROLLER Interrupt Enable Clear */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_MINTCLR_tag;

typedef union AON_I3C_MINTMASKED_union_tag { /* Controller Interrupt Mask */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t SLVSTART:1;              /* SLVSTART Interrupt Mask */
    vuint32_t MCTRLDONE:1;             /* MCTRLDONE Interrupt Mask */
    vuint32_t COMPLETE:1;              /* COMPLETE Interrupt Mask */
    vuint32_t RXPEND:1;                /* RXPEND Interrupt Mask */
    vuint32_t TXNOTFULL:1;             /* TXNOTFULL Interrupt Mask */
    vuint32_t IBIWON:1;                /* IBIWON Interrupt Mask */
    vuint32_t _unused_17:1;
    vuint32_t ERRWARN:1;               /* ERRWARN Interrupt Mask */
    vuint32_t _unused_13:3;
    vuint32_t NOWMASTER:1;             /* NOWCONTROLLER Interrupt Mask */
    vuint32_t _unused_0:12;
  } B;
} AON_I3C_MINTMASKED_tag;

typedef union AON_I3C_MERRWARN_union_tag { /* Controller Errors and Warnings */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t URUN:1;                  /* Underrun error */
    vuint32_t NACK:1;                  /* Not Acknowledge Error */
    vuint32_t WRABT:1;                 /* Write Abort Error */
    vuint32_t TERM:1;                  /* Terminate Error */
    vuint32_t _unused_23:4;
    vuint32_t HPAR:1;                  /* High Data Rate Parity */
    vuint32_t HCRC:1;                  /* High Data Rate CRC Error */
    vuint32_t _unused_20:1;
    vuint32_t _unused_19:1;
    vuint32_t _unused_16:3;
    vuint32_t OREAD:1;                 /* Over-read Error */
    vuint32_t OWRITE:1;                /* Over-write Error */
    vuint32_t MSGERR:1;                /* Message Error */
    vuint32_t INVREQ:1;                /* Invalid Request Error */
    vuint32_t TIMEOUT:1;               /* Timeout Error */
    vuint32_t _unused_10:1;
    vuint32_t _unused_0:10;
  } B;
} AON_I3C_MERRWARN_tag;

typedef union AON_I3C_MDMACTRL_union_tag { /* Controller DMA Control */
  vuint32_t R;
  struct {
    vuint32_t DMAFB:2;                 /* DMA From Bus */
    vuint32_t DMATB:2;                 /* DMA To Bus */
    vuint32_t DMAWIDTH:2;              /* DMA Width */
    vuint32_t _unused_24:2;
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_MDMACTRL_tag;

typedef union AON_I3C_MDATACTRL_union_tag { /* Controller Data Control */
  vuint32_t R;
  struct {
    vuint32_t FLUSHTB:1;               /* Flush To-bus Buffer or FIFO */
    vuint32_t FLUSHFB:1;               /* Flush From-bus Buffer or FIFO */
    vuint32_t _unused_29:1;
    vuint32_t UNLOCK:1;                /* Unlock */
    vuint32_t TXTRIG:2;                /* Transmit Trigger Level */
    vuint32_t RXTRIG:2;                /* Receive Trigger Level */
    vuint32_t _unused_16:8;
    vuint32_t TXCOUNT:5;               /* Transmit Byte Count */
    vuint32_t _unused_10:1;
    vuint32_t _unused_8:2;
    vuint32_t RXCOUNT:5;               /* Receive Byte Count */
    vuint32_t _unused_2:1;
    vuint32_t TXFULL:1;                /* Transmit Is Full */
    vuint32_t RXEMPTY:1;               /* Receive Is Empty */
  } B;
} AON_I3C_MDATACTRL_tag;

typedef union AON_I3C_MWDATAB_union_tag { /* Controller Write Data Byte */
  vuint32_t R;
  struct {
    vuint32_t VALUE:8;                 /* Data Byte */
    vuint32_t END:1;                   /* End of Message */
    vuint32_t _unused_16:7;
    vuint32_t END_ALSO:1;              /* End of Message Also */
    vuint32_t _unused_0:15;
  } B;
} AON_I3C_MWDATAB_tag;

typedef union AON_I3C_MWDATABE_union_tag { /* Controller Write Data Byte End */
  vuint32_t R;
  struct {
    vuint32_t VALUE:8;                 /* Data */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_MWDATABE_tag;

typedef union AON_I3C_MWDATAH_union_tag { /* Controller Write Data Halfword */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data Byte 0 */
    vuint32_t DATA1:8;                 /* Data Byte 1 */
    vuint32_t END:1;                   /* End of message */
    vuint32_t _unused_0:15;
  } B;
} AON_I3C_MWDATAH_tag;

typedef union AON_I3C_MWDATAHE_union_tag { /* Controller Write Data Halfword End */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data Byte 0 */
    vuint32_t DATA1:8;                 /* Data Byte 1 */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWDATAHE_tag;

typedef union AON_I3C_MRDATAB_union_tag { /* Controller Read Data Byte */
  vuint32_t R;
  struct {
    vuint32_t VALUE:8;                 /* Value */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_MRDATAB_tag;

typedef union AON_I3C_MRDATAH_union_tag { /* Controller Read Data Halfword */
  vuint32_t R;
  struct {
    vuint32_t LSB:8;                   /* LSB */
    vuint32_t MSB:8;                   /* MSB */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MRDATAH_tag;

typedef union AON_I3C_MWDATA_B1_H1_MWDATAB1_union_tag { /* Controller Write Byte Data 1(to bus) */
  vuint32_t R;
  struct {
    vuint32_t VALUE:8;                 /* Value */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_MWDATA_B1_H1_MWDATAB1_tag;

typedef union AON_I3C_MWDATA_B1_H1_MWDATAH1_union_tag { /* Controller Write Halfword Data (to bus) */
  vuint32_t R;
  struct {
    vuint32_t VALUE:16;                /* Value */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWDATA_B1_H1_MWDATAH1_tag;

typedef union AON_I3C_MWDATA_B1_H1_union_tag {
  AON_I3C_MWDATA_B1_H1_MWDATAB1_tag MWDATAB1; /* Controller Write Byte Data 1(to bus) */
  AON_I3C_MWDATA_B1_H1_MWDATAH1_tag MWDATAH1; /* Controller Write Halfword Data (to bus) */
} AON_I3C_MWDATA_B1_H1_tag;

typedef union AON_I3C_MWMSG_SDR_MWMSG_SDR_CONTROL_union_tag { /* Controller Write Message Control in SDR mode */
  vuint32_t R;
  struct {
    vuint32_t DIR:1;                   /* Direction */
    vuint32_t ADDR:7;                  /* Address */
    vuint32_t END:1;                   /* End of SDR Message */
    vuint32_t _unused_22:1;
    vuint32_t I2C:1;                   /* I2C */
    vuint32_t LEN:5;                   /* Length */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWMSG_SDR_MWMSG_SDR_CONTROL_tag;

typedef union AON_I3C_MWMSG_SDR_MWMSG_SDR_DATA_union_tag { /* Controller Write Message Data in SDR mode */
  vuint32_t R;
  struct {
    vuint32_t DATA16B:16;              /* Data */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWMSG_SDR_MWMSG_SDR_DATA_tag;

typedef union AON_I3C_MWMSG_SDR_union_tag {
  AON_I3C_MWMSG_SDR_MWMSG_SDR_CONTROL_tag MWMSG_SDR_CONTROL; /* Controller Write Message Control in SDR mode */
  AON_I3C_MWMSG_SDR_MWMSG_SDR_DATA_tag MWMSG_SDR_DATA; /* Controller Write Message Data in SDR mode */
} AON_I3C_MWMSG_SDR_tag;

typedef union AON_I3C_MRMSG_SDR_union_tag { /* Controller Read Message in SDR mode */
  vuint32_t R;
  struct {
    vuint32_t DATA:16;                 /* Data */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MRMSG_SDR_tag;

typedef union AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL_union_tag { /* Controller Write Message in DDR mode: First Control Word */
  vuint32_t R;
  struct {
    vuint32_t ADDRCMD:16;              /* Address Command */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL_tag;

typedef union AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL2_union_tag { /* Controller Write Message in DDR mode Control 2 */
  vuint32_t R;
  struct {
    vuint32_t LEN:10;                  /* Length of Message */
    vuint32_t _unused_18:4;
    vuint32_t END:1;                   /* End of Message */
    vuint32_t _unused_0:17;
  } B;
} AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL2_tag;

typedef union AON_I3C_MWMSG_DDR_MWMSG_DDR_DATA_union_tag { /* Controller Write Message Data in DDR mode */
  vuint32_t R;
  struct {
    vuint32_t DATA16B:16;              /* Data */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MWMSG_DDR_MWMSG_DDR_DATA_tag;

typedef union AON_I3C_MWMSG_DDR_union_tag {
  AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL_tag MWMSG_DDR_CONTROL; /* Controller Write Message in DDR mode: First Control Word */
  AON_I3C_MWMSG_DDR_MWMSG_DDR_CONTROL2_tag MWMSG_DDR_CONTROL2; /* Controller Write Message in DDR mode Control 2 */
  AON_I3C_MWMSG_DDR_MWMSG_DDR_DATA_tag MWMSG_DDR_DATA; /* Controller Write Message Data in DDR mode */
} AON_I3C_MWMSG_DDR_tag;

typedef union AON_I3C_MRMSG_DDR_union_tag { /* Controller Read Message in DDR mode */
  vuint32_t R;
  struct {
    vuint32_t DATA:16;                 /* Data */
    vuint32_t _unused_0:16;
  } B;
} AON_I3C_MRMSG_DDR_tag;

typedef union AON_I3C_MDYNADDR_union_tag { /* Controller Dynamic Address */
  vuint32_t R;
  struct {
    vuint32_t DAVALID:1;               /* Dynamic address valid */
    vuint32_t DADDR:7;                 /* Dynamic address */
    vuint32_t _unused_0:24;
  } B;
} AON_I3C_MDYNADDR_tag;

typedef union AON_I3C_SRSTACTTIME_union_tag { /* Timing Rules for TargetReset Recovery */
  vuint32_t R;
  struct {
    vuint32_t PERRSTTIM:8;             /* Time to Recover from the I3C peripheral */
    vuint32_t SYSRSTTIM:8;             /* Time to Recover from Chip Reset */
    vuint32_t _unused_8:8;
    vuint32_t _unused_0:8;
  } B;
} AON_I3C_SRSTACTTIME_tag;

typedef union AON_I3C_SCCCMASK_union_tag { /* CCC Mask for Unhandled CCCs */
  vuint32_t R;
  struct {
    vuint32_t BASE:1;                  /* Base */
    vuint32_t BASEBX:1;                /* BASEBX */
    vuint32_t BASEDX:1;                /* BASEDX */
    vuint32_t MEXTB:1;                 /* MEXTB */
    vuint32_t MEXTD:1;                 /* MEXTD */
    vuint32_t VENDB:1;                 /* VENDB */
    vuint32_t VENDD:1;                 /* VENDD */
    vuint32_t _unused_0:25;
  } B;
} AON_I3C_SCCCMASK_tag;

typedef union AON_I3C_SERRWARNMASK_union_tag { /* Target Errors and Warnings Mask */
  vuint32_t R;
  struct {
    vuint32_t ORUN:1;                  /* ORUN mask */
    vuint32_t URUN:1;                  /* URUN mask */
    vuint32_t URUNNACK:1;              /* URUNNACK mask */
    vuint32_t TERM:1;                  /* TERM mask */
    vuint32_t INVSTART:1;              /* INVSTART mask */
    vuint32_t _unused_24:3;
    vuint32_t SPAR:1;                  /* SPAR mask */
    vuint32_t HPAR:1;                  /* HPAR mask */
    vuint32_t HCRC:1;                  /* HCRC mask */
    vuint32_t S0S1:1;                  /* S0S1 mask */
    vuint32_t _unused_19:1;
    vuint32_t _unused_18:1;
    vuint32_t _unused_0:18;
  } B;
} AON_I3C_SERRWARNMASK_tag;

typedef union AON_I3C_SMAPCTRL0_union_tag { /* Map Feature Control 0 */
  vuint32_t R;
  struct {
    vuint32_t ENA:1;                   /* Enable Primary Dynamic Address */
    vuint32_t DA:7;                    /* Dynamic Address */
    vuint32_t CAUSE:3;                 /* Cause */
    vuint32_t _unused_16:5;
    vuint32_t _unused_15:1;
    vuint32_t _unused_0:15;
  } B;
} AON_I3C_SMAPCTRL0_tag;

typedef union AON_I3C_SMAPCTRL1_union_tag { /* Map Feature Control 1 */
  vuint32_t R;
  struct {
    vuint32_t ENA:1;                   /* Enable */
    vuint32_t ADDR:7;                  /* Address */
    vuint32_t MAPSA:1;                 /* MAP Static Address */
    vuint32_t SA10B:3;                 /* Static Address 10-bit Extension */
    vuint32_t NACK:1;                  /* Not Acknowledged */
    vuint32_t AUTO:1;                  /* Auto DAA */
    vuint32_t _unused_8:10;
    vuint32_t DCR:8;                   /* DCR */
  } B;
} AON_I3C_SMAPCTRL1_tag;

typedef union AON_I3C_IBIEXT1_union_tag { /* Extended IBI Data 1 */
  vuint32_t R;
  struct {
    vuint32_t CNT:3;                   /* Count */
    vuint32_t _unused_28:1;
    vuint32_t MAX:3;                   /* Maximum */
    vuint32_t _unused_24:1;
    vuint32_t EXT1:8;                  /* Extra byte 1 */
    vuint32_t EXT2:8;                  /* Extra byte 2 */
    vuint32_t EXT3:8;                  /* Extra byte 3 */
  } B;
} AON_I3C_IBIEXT1_tag;

typedef union AON_I3C_IBIEXT2_union_tag { /* Extended IBI Data 2 */
  vuint32_t R;
  struct {
    vuint32_t EXT4:8;                  /* Extra byte 4 */
    vuint32_t EXT5:8;                  /* Extra byte 5 */
    vuint32_t EXT6:8;                  /* Extra byte 6 */
    vuint32_t EXT7:8;                  /* Extra byte 7 */
  } B;
} AON_I3C_IBIEXT2_tag;

typedef union AON_I3C_SELFRESET_union_tag { /* Self Reset */
  vuint32_t R;
  struct {
    vuint32_t RST:1;                   /* Reset */
    vuint32_t _unused_24:7;
    vuint32_t KEY:24;                  /* Key */
  } B;
} AON_I3C_SELFRESET_tag;

struct AON_I3C_tag {
  AON_I3C_MCONFIG_tag MCONFIG;         /* Controller Configuration */
  AON_I3C_SCONFIG_tag SCONFIG;         /* Target Configuration */
  AON_I3C_SSTATUS_tag SSTATUS;         /* Target Status */
  AON_I3C_SCTRL_tag SCTRL;             /* Target Control */
  AON_I3C_SINTSET_tag SINTSET;         /* Target Interrupt Set */
  AON_I3C_SINTCLR_tag SINTCLR;         /* Target Interrupt Clear */
  AON_I3C_SINTMASKED_tag SINTMASKED;   /* Target Interrupt Mask */
  AON_I3C_SERRWARN_tag SERRWARN;       /* Target Errors and Warnings */
  AON_I3C_SDMACTRL_tag SDMACTRL;       /* Target DMA Control */
  uint8_t AON_I3C_reserved0[8];
  AON_I3C_SDATACTRL_tag SDATACTRL;     /* Target Data Control */
  AON_I3C_SWDATAB_tag SWDATAB;         /* Target Write Data Byte */
  AON_I3C_SWDATABE_tag SWDATABE;       /* Target Write Data Byte End */
  AON_I3C_SWDATAH_tag SWDATAH;         /* Target Write Data Half-word */
  AON_I3C_SWDATAHE_tag SWDATAHE;       /* Target Write Data Half-word End */
  AON_I3C_SRDATAB_tag SRDATAB;         /* Target Read Data Byte */
  uint8_t AON_I3C_reserved1[4];
  AON_I3C_SRDATAH_tag SRDATAH;         /* Target Read Data Halfword */
  uint8_t AON_I3C_reserved2[8];
  AON_I3C_SWDATA_B_H_tag SWDATA_B_H;
  uint8_t AON_I3C_reserved3[4];
  AON_I3C_SCAPABILITIES2_tag SCAPABILITIES2; /* Target Capabilities 2 */
  AON_I3C_SCAPABILITIES_tag SCAPABILITIES; /* Target Capabilities */
  uint8_t AON_I3C_reserved4[4];
  AON_I3C_SMAXLIMITS_tag SMAXLIMITS;   /* Target Maximum Limits */
  AON_I3C_SIDPARTNO_tag SIDPARTNO;     /* Target ID Part Number */
  AON_I3C_SIDEXT_tag SIDEXT;           /* Target ID Extension */
  AON_I3C_SVENDORID_tag SVENDORID;     /* Target Vendor ID */
  AON_I3C_STCCLOCK_tag STCCLOCK;       /* Target Time Control Clock */
  AON_I3C_SMSGMAPADDR_tag SMSGMAPADDR; /* Target Message Map Address */
  AON_I3C_MCONFIG_EXT_tag MCONFIG_EXT; /* Controller Extended Configuration */
  AON_I3C_MCTRL_tag MCTRL;             /* Controller Control */
  AON_I3C_MSTATUS_tag MSTATUS;         /* Controller Status */
  AON_I3C_MIBIRULES_tag MIBIRULES;     /* Controller In-band Interrupt Registry and Rules */
  AON_I3C_MINTSET_tag MINTSET;         /* Controller Interrupt Set */
  AON_I3C_MINTCLR_tag MINTCLR;         /* Controller Interrupt Clear */
  AON_I3C_MINTMASKED_tag MINTMASKED;   /* Controller Interrupt Mask */
  AON_I3C_MERRWARN_tag MERRWARN;       /* Controller Errors and Warnings */
  AON_I3C_MDMACTRL_tag MDMACTRL;       /* Controller DMA Control */
  uint8_t AON_I3C_reserved5[8];
  AON_I3C_MDATACTRL_tag MDATACTRL;     /* Controller Data Control */
  AON_I3C_MWDATAB_tag MWDATAB;         /* Controller Write Data Byte */
  AON_I3C_MWDATABE_tag MWDATABE;       /* Controller Write Data Byte End */
  AON_I3C_MWDATAH_tag MWDATAH;         /* Controller Write Data Halfword */
  AON_I3C_MWDATAHE_tag MWDATAHE;       /* Controller Write Data Halfword End */
  AON_I3C_MRDATAB_tag MRDATAB;         /* Controller Read Data Byte */
  uint8_t AON_I3C_reserved6[4];
  AON_I3C_MRDATAH_tag MRDATAH;         /* Controller Read Data Halfword */
  AON_I3C_MWDATA_B1_H1_tag MWDATA_B1_H1;
  AON_I3C_MWMSG_SDR_tag MWMSG_SDR;
  AON_I3C_MRMSG_SDR_tag MRMSG_SDR;     /* Controller Read Message in SDR mode */
  AON_I3C_MWMSG_DDR_tag MWMSG_DDR;
  AON_I3C_MRMSG_DDR_tag MRMSG_DDR;     /* Controller Read Message in DDR mode */
  uint8_t AON_I3C_reserved7[4];
  AON_I3C_MDYNADDR_tag MDYNADDR;       /* Controller Dynamic Address */
  uint8_t AON_I3C_reserved8[24];
  AON_I3C_SRSTACTTIME_tag SRSTACTTIME; /* Timing Rules for TargetReset Recovery */
  uint8_t AON_I3C_reserved9[8];
  AON_I3C_SCCCMASK_tag SCCCMASK;       /* CCC Mask for Unhandled CCCs */
  AON_I3C_SERRWARNMASK_tag SERRWARNMASK; /* Target Errors and Warnings Mask */
  uint8_t AON_I3C_reserved10[8];
  AON_I3C_SMAPCTRL0_tag SMAPCTRL0;     /* Map Feature Control 0 */
  AON_I3C_SMAPCTRL1_tag SMAPCTRL1;     /* Map Feature Control 1 */
  uint8_t AON_I3C_reserved11[28];
  AON_I3C_IBIEXT1_tag IBIEXT1;         /* Extended IBI Data 1 */
  AON_I3C_IBIEXT2_tag IBIEXT2;         /* Extended IBI Data 2 */
  uint8_t AON_I3C_reserved12[3752];
  AON_I3C_SELFRESET_tag SELFRESET;     /* Self Reset */
};


/* ============================================================================
   =============================== Module: AON_INTM ===========================
   ============================================================================ */

typedef union AON_INTM_INTM_MM_union_tag { /* Monitor Mode */
  vuint32_t R;
  struct {
    vuint32_t MM:1;                    /* Monitor Mode */
    vuint32_t _unused_0:31;
  } B;
} AON_INTM_INTM_MM_tag;

typedef union AON_INTM_INTM_IACK_union_tag { /* Interrupt Acknowledge */
  vuint32_t R;
  struct {
    vuint32_t IRQ:10;                  /* Interrupt Request */
    vuint32_t _unused_0:22;
  } B;
} AON_INTM_INTM_IACK_tag;

typedef union AON_INTM_MON_INTM_IRQSEL_union_tag { /* Interrupt Request Select for Monitor 0 */
  vuint32_t R;
  struct {
    vuint32_t IRQ:10;                  /* Interrupt Request */
    vuint32_t _unused_0:22;
  } B;
} AON_INTM_MON_INTM_IRQSEL_tag;

typedef union AON_INTM_MON_INTM_LATENCY_union_tag { /* Interrupt Latency for Monitor 0 */
  vuint32_t R;
  struct {
    vuint32_t LAT:24;                  /* Latency */
    vuint32_t _unused_0:8;
  } B;
} AON_INTM_MON_INTM_LATENCY_tag;

typedef union AON_INTM_MON_INTM_TIMER_union_tag { /* Timer for Monitor 0 */
  vuint32_t R;
  struct {
    vuint32_t TIMER:24;                /* Timer */
    vuint32_t _unused_0:8;
  } B;
} AON_INTM_MON_INTM_TIMER_tag;

typedef union AON_INTM_MON_INTM_STATUS_union_tag { /* Status for Monitor 0 */
  vuint32_t R;
  struct {
    vuint32_t STATUS:1;                /* Monitor status */
    vuint32_t _unused_0:31;
  } B;
} AON_INTM_MON_INTM_STATUS_tag;

typedef struct AON_INTM_MON_struct_tag {
  AON_INTM_MON_INTM_IRQSEL_tag INTM_IRQSEL; /* Interrupt Request Select for Monitor 0 */
  AON_INTM_MON_INTM_LATENCY_tag INTM_LATENCY; /* Interrupt Latency for Monitor 0 */
  AON_INTM_MON_INTM_TIMER_tag INTM_TIMER; /* Timer for Monitor 0 */
  AON_INTM_MON_INTM_STATUS_tag INTM_STATUS; /* Status for Monitor 0 */
} AON_INTM_MON_tag;

struct AON_INTM_tag {
  AON_INTM_INTM_MM_tag INTM_MM;        /* Monitor Mode */
  AON_INTM_INTM_IACK_tag INTM_IACK;    /* Interrupt Acknowledge */
  AON_INTM_MON_tag MON[4];
};


/* ============================================================================
   =============================== Module: AON_IRQSTEER =======================
   ============================================================================ */

typedef union AON_IRQSTEER_CHN_MASK_union_tag { /* Channel n Interrupt Mask Register */
  vuint32_t R;
  struct {
    vuint32_t MASKFLD:32;              /* Mask bits */
  } B;
} AON_IRQSTEER_CHN_MASK_tag;

typedef union AON_IRQSTEER_CHN_SET_union_tag { /* Channel n Interrupt Set Register */
  vuint32_t R;
  struct {
    vuint32_t FORCEFLD:32;             /* Force interrupt. */
  } B;
} AON_IRQSTEER_CHN_SET_tag;

typedef union AON_IRQSTEER_CHN_STATUS_union_tag { /* Channel n Interrupt Status Register */
  vuint32_t R;
  struct {
    vuint32_t STATUS:32;               /* Status of an interrupt */
  } B;
} AON_IRQSTEER_CHN_STATUS_tag;

typedef union AON_IRQSTEER_CHN_MINTDIS_union_tag { /* Channel n Master Interrupt Disable Register */
  vuint32_t R;
  struct {
    vuint32_t DISABLE:10;              /* Each bit of this field disables the corresponding interrupts in table above. */
    vuint32_t _unused_0:22;            /* Reserved */
  } B;
} AON_IRQSTEER_CHN_MINTDIS_tag;

typedef union AON_IRQSTEER_CHN_MSTRSTAT_union_tag { /* Channel n Master Status Register */
  vuint32_t R;
  struct {
    vuint32_t STATUS:1;                /* Status of all interrupts */
    vuint32_t _unused_0:31;            /* Reserved */
  } B;
} AON_IRQSTEER_CHN_MSTRSTAT_tag;

struct AON_IRQSTEER_tag {
  uint8_t AON_IRQSTEER_reserved0[4];
  AON_IRQSTEER_CHN_MASK_tag CHN_MASK[20]; /* Channel n Interrupt Mask Register */
  AON_IRQSTEER_CHN_SET_tag CHN_SET[20]; /* Channel n Interrupt Set Register */
  AON_IRQSTEER_CHN_STATUS_tag CHN_STATUS[20]; /* Channel n Interrupt Status Register */
  AON_IRQSTEER_CHN_MINTDIS_tag CHN_MINTDIS; /* Channel n Master Interrupt Disable Register */
  AON_IRQSTEER_CHN_MSTRSTAT_tag CHN_MSTRSTAT; /* Channel n Master Status Register */
};


/* ============================================================================
   =============================== Module: AON_LPIT ===========================
   ============================================================================ */

typedef union AON_LPIT_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_LPIT_VERID_tag;

typedef union AON_LPIT_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t CHANNEL:8;               /* Number of Timer Channels */
    vuint32_t EXT_TRIG:8;              /* Number of External Trigger Inputs */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPIT_PARAM_tag;

typedef union AON_LPIT_MCR_union_tag { /* Module Control */
  vuint32_t R;
  struct {
    vuint32_t M_CEN:1;                 /* Module Clock Enable */
    vuint32_t SW_RST:1;                /* Software Reset */
    vuint32_t DOZE_EN:1;               /* DOZE Mode Enable */
    vuint32_t DBG_EN:1;                /* Debug Mode Enable */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPIT_MCR_tag;

typedef union AON_LPIT_MSR_union_tag { /* Module Status */
  vuint32_t R;
  struct {
    vuint32_t TIF0:1;                  /* Channel 0 Timer Interrupt Flag */
    vuint32_t TIF1:1;                  /* Channel 1 Timer Interrupt Flag */
    vuint32_t TIF2:1;                  /* Channel 2 Timer Interrupt Flag */
    vuint32_t TIF3:1;                  /* Channel 3 Timer Interrupt Flag */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPIT_MSR_tag;

typedef union AON_LPIT_MIER_union_tag { /* Module Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t TIE0:1;                  /* Channel 0 Timer Interrupt Enable */
    vuint32_t TIE1:1;                  /* Channel 1 Timer Interrupt Enable */
    vuint32_t TIE2:1;                  /* Channel 2 Timer Interrupt Enable */
    vuint32_t TIE3:1;                  /* Channel 3 Timer Interrupt Enable */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPIT_MIER_tag;

typedef union AON_LPIT_SETTEN_union_tag { /* Set Timer Enable */
  vuint32_t R;
  struct {
    vuint32_t SET_T_EN_0:1;            /* Set Timer 0 Enable */
    vuint32_t SET_T_EN_1:1;            /* Set Timer 1 Enable */
    vuint32_t SET_T_EN_2:1;            /* Set Timer 2 Enable */
    vuint32_t SET_T_EN_3:1;            /* Set Timer 3 Enable */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPIT_SETTEN_tag;

typedef union AON_LPIT_CLRTEN_union_tag { /* Clear Timer Enable */
  vuint32_t R;
  struct {
    vuint32_t CLR_T_EN_0:1;            /* Clear Timer 0 Enable */
    vuint32_t CLR_T_EN_1:1;            /* Clear Timer 1 Enable */
    vuint32_t CLR_T_EN_2:1;            /* Clear Timer 2 Enable */
    vuint32_t CLR_T_EN_3:1;            /* Clear Timer 3 Enable */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPIT_CLRTEN_tag;

typedef union AON_LPIT_CHANNEL_TVAL_union_tag { /* Timer Value */
  vuint32_t R;
  struct {
    vuint32_t TMR_VAL:32;              /* Timer Value */
  } B;
} AON_LPIT_CHANNEL_TVAL_tag;

typedef union AON_LPIT_CHANNEL_CVAL_union_tag { /* Current Timer Value */
  vuint32_t R;
  struct {
    vuint32_t TMR_CUR_VAL:32;          /* Current Timer Value */
  } B;
} AON_LPIT_CHANNEL_CVAL_tag;

typedef union AON_LPIT_CHANNEL_TCTRL_union_tag { /* Timer Control */
  vuint32_t R;
  struct {
    vuint32_t T_EN:1;                  /* Timer Enable */
    vuint32_t CHAIN:1;                 /* Chain Channel */
    vuint32_t MODE:2;                  /* Timer Operation Mode */
    vuint32_t _unused_16:12;           /* Reserved */
    vuint32_t TSOT:1;                  /* Timer Start on Trigger */
    vuint32_t TSOI:1;                  /* Timer Stop on Interrupt */
    vuint32_t TROT:1;                  /* Timer Reload on Trigger */
    vuint32_t _unused_9:4;             /* Reserved */
    vuint32_t TRG_SRC:1;               /* Trigger Source */
    vuint32_t TRG_SEL:4;               /* Trigger Select */
    vuint32_t _unused_0:4;             /* Reserved */
  } B;
} AON_LPIT_CHANNEL_TCTRL_tag;

typedef struct AON_LPIT_CHANNEL_struct_tag {
  AON_LPIT_CHANNEL_TVAL_tag TVAL;      /* Timer Value */
  AON_LPIT_CHANNEL_CVAL_tag CVAL;      /* Current Timer Value */
  AON_LPIT_CHANNEL_TCTRL_tag TCTRL;    /* Timer Control */
  uint8_t CHANNEL_reserved0[4];
} AON_LPIT_CHANNEL_tag;

struct AON_LPIT_tag {
  AON_LPIT_VERID_tag VERID;            /* Version ID */
  AON_LPIT_PARAM_tag PARAM;            /* Parameter */
  AON_LPIT_MCR_tag MCR;                /* Module Control */
  AON_LPIT_MSR_tag MSR;                /* Module Status */
  AON_LPIT_MIER_tag MIER;              /* Module Interrupt Enable */
  AON_LPIT_SETTEN_tag SETTEN;          /* Set Timer Enable */
  AON_LPIT_CLRTEN_tag CLRTEN;          /* Clear Timer Enable */
  uint8_t AON_LPIT_reserved0[4];
  AON_LPIT_CHANNEL_tag CHANNEL[4];
};


/* ============================================================================
   =============================== Module: AON_LPSPI ==========================
   ============================================================================ */

typedef union AON_LPSPI_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Module Identification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_LPSPI_VERID_tag;

typedef union AON_LPSPI_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t TXFIFO:8;                /* Transmit FIFO Size */
    vuint32_t RXFIFO:8;                /* Receive FIFO Size */
    vuint32_t PCSNUM:8;                /* PCS Number */
    vuint32_t _unused_0:8;
  } B;
} AON_LPSPI_PARAM_tag;

typedef union AON_LPSPI_CR_union_tag { /* Control */
  vuint32_t R;
  struct {
    vuint32_t MEN:1;                   /* Module Enable */
    vuint32_t RST:1;                   /* Software Reset */
    vuint32_t DOZEN:1;                 /* Doze Mode Enable */
    vuint32_t DBGEN:1;                 /* Debug Enable */
    vuint32_t _unused_24:4;
    vuint32_t RTF:1;                   /* Reset Transmit FIFO */
    vuint32_t RRF:1;                   /* Reset Receive FIFO */
    vuint32_t _unused_0:22;
  } B;
} AON_LPSPI_CR_tag;

typedef union AON_LPSPI_SR_union_tag { /* Status */
  vuint32_t R;
  struct {
    vuint32_t TDF:1;                   /* Transmit Data Flag */
    vuint32_t RDF:1;                   /* Receive Data Flag */
    vuint32_t _unused_24:6;
    vuint32_t WCF:1;                   /* Word Complete Flag */
    vuint32_t FCF:1;                   /* Frame Complete Flag */
    vuint32_t TCF:1;                   /* Transfer Complete Flag */
    vuint32_t TEF:1;                   /* Transmit Error Flag */
    vuint32_t REF:1;                   /* Receive Error Flag */
    vuint32_t DMF:1;                   /* Data Match Flag */
    vuint32_t _unused_8:10;
    vuint32_t MBF:1;                   /* Module Busy Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_LPSPI_SR_tag;

typedef union AON_LPSPI_IER_union_tag { /* Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t TDIE:1;                  /* Transmit Data Interrupt Enable */
    vuint32_t RDIE:1;                  /* Receive Data Interrupt Enable */
    vuint32_t _unused_24:6;
    vuint32_t WCIE:1;                  /* Word Complete Interrupt Enable */
    vuint32_t FCIE:1;                  /* Frame Complete Interrupt Enable */
    vuint32_t TCIE:1;                  /* Transfer Complete Interrupt Enable */
    vuint32_t TEIE:1;                  /* Transmit Error Interrupt Enable */
    vuint32_t REIE:1;                  /* Receive Error Interrupt Enable */
    vuint32_t DMIE:1;                  /* Data Match Interrupt Enable */
    vuint32_t _unused_0:18;
  } B;
} AON_LPSPI_IER_tag;

typedef union AON_LPSPI_DER_union_tag { /* DMA Enable */
  vuint32_t R;
  struct {
    vuint32_t TDDE:1;                  /* Transmit Data DMA Enable */
    vuint32_t RDDE:1;                  /* Receive Data DMA Enable */
    vuint32_t _unused_23:7;
    vuint32_t FCDE:1;                  /* Frame Complete DMA Enable */
    vuint32_t _unused_0:22;
  } B;
} AON_LPSPI_DER_tag;

typedef union AON_LPSPI_CFGR0_union_tag { /* Configuration 0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t _unused_30:1;
    vuint32_t _unused_29:1;
    vuint32_t _unused_28:1;
    vuint32_t _unused_24:4;
    vuint32_t CIRFIFO:1;               /* Circular FIFO Enable */
    vuint32_t RDMO:1;                  /* Receive Data Match Only */
    vuint32_t _unused_0:22;
  } B;
} AON_LPSPI_CFGR0_tag;

typedef union AON_LPSPI_CFGR1_union_tag { /* Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t MASTER:1;                /* Master Mode */
    vuint32_t SAMPLE:1;                /* Sample Point */
    vuint32_t AUTOPCS:1;               /* Automatic PCS */
    vuint32_t NOSTALL:1;               /* No Stall */
    vuint32_t PARTIAL:1;               /* Partial Enable */
    vuint32_t _unused_24:3;
    vuint32_t PCSPOL:2;                /* Peripheral Chip Select Polarity */
    vuint32_t _unused_16:6;
    vuint32_t MATCFG:3;                /* Match Configuration */
    vuint32_t _unused_8:5;
    vuint32_t PINCFG:2;                /* Pin Configuration */
    vuint32_t OUTCFG:1;                /* Output Configuration */
    vuint32_t _unused_4:1;
    vuint32_t _unused_3:1;
    vuint32_t _unused_0:3;
  } B;
} AON_LPSPI_CFGR1_tag;

typedef union AON_LPSPI_DMR0_union_tag { /* Data Match 0 */
  vuint32_t R;
  struct {
    vuint32_t MATCH0:32;               /* Match 0 Value */
  } B;
} AON_LPSPI_DMR0_tag;

typedef union AON_LPSPI_DMR1_union_tag { /* Data Match 1 */
  vuint32_t R;
  struct {
    vuint32_t MATCH1:32;               /* Match 1 Value */
  } B;
} AON_LPSPI_DMR1_tag;

typedef union AON_LPSPI_CCR_union_tag { /* Clock Configuration */
  vuint32_t R;
  struct {
    vuint32_t SCKDIV:8;                /* SCK Divider */
    vuint32_t DBT:8;                   /* Delay Between Transfers */
    vuint32_t PCSSCK:8;                /* PCS-to-SCK Delay */
    vuint32_t SCKPCS:8;                /* SCK-to-PCS Delay */
  } B;
} AON_LPSPI_CCR_tag;

typedef union AON_LPSPI_CCR1_union_tag { /* Clock Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t SCKSET:8;                /* SCK Setup */
    vuint32_t SCKHLD:8;                /* SCK Hold */
    vuint32_t PCSPCS:8;                /* PCS to PCS delay */
    vuint32_t SCKSCK:8;                /* SCK Inter-Frame Delay */
  } B;
} AON_LPSPI_CCR1_tag;

typedef union AON_LPSPI_FCR_union_tag { /* FIFO Control */
  vuint32_t R;
  struct {
    vuint32_t TXWATER:4;               /* Transmit FIFO Watermark */
    vuint32_t _unused_24:4;
    vuint32_t _unused_16:8;
    vuint32_t RXWATER:4;               /* Receive FIFO Watermark */
    vuint32_t _unused_8:4;
    vuint32_t _unused_0:8;
  } B;
} AON_LPSPI_FCR_tag;

typedef union AON_LPSPI_FSR_union_tag { /* FIFO Status */
  vuint32_t R;
  struct {
    vuint32_t TXCOUNT:5;               /* Transmit FIFO Count */
    vuint32_t _unused_24:3;
    vuint32_t _unused_16:8;
    vuint32_t RXCOUNT:5;               /* Receive FIFO Count */
    vuint32_t _unused_8:3;
    vuint32_t _unused_0:8;
  } B;
} AON_LPSPI_FSR_tag;

typedef union AON_LPSPI_TCR_union_tag { /* Transmit Command */
  vuint32_t R;
  struct {
    vuint32_t FRAMESZ:12;              /* Frame Size */
    vuint32_t _unused_16:4;
    vuint32_t _unused_14:2;            /* Reserved. Only write zero to this field. */
    vuint32_t TXMSK:1;                 /* Transmit Data Mask */
    vuint32_t RXMSK:1;                 /* Receive Data Mask */
    vuint32_t CONTC:1;                 /* Continuing Command */
    vuint32_t CONT:1;                  /* Continuous Transfer */
    vuint32_t BYSW:1;                  /* Byte Swap */
    vuint32_t LSBF:1;                  /* LSB First */
    vuint32_t PCS:1;                   /* Peripheral Chip Select */
    vuint32_t _unused_5:2;
    vuint32_t PRESCALE:3;              /* Prescaler Value */
    vuint32_t CPHA:1;                  /* Clock Phase */
    vuint32_t CPOL:1;                  /* Clock Polarity */
  } B;
} AON_LPSPI_TCR_tag;

typedef union AON_LPSPI_TDR_union_tag { /* Transmit Data */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Transmit Data */
  } B;
} AON_LPSPI_TDR_tag;

typedef union AON_LPSPI_RSR_union_tag { /* Receive Status */
  vuint32_t R;
  struct {
    vuint32_t SOF:1;                   /* Start Of Frame */
    vuint32_t RXEMPTY:1;               /* RX FIFO Empty */
    vuint32_t _unused_0:30;
  } B;
} AON_LPSPI_RSR_tag;

typedef union AON_LPSPI_RDR_union_tag { /* Receive Data */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Receive Data */
  } B;
} AON_LPSPI_RDR_tag;

typedef union AON_LPSPI_RDROR_union_tag { /* Receive Data Read Only */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Receive Data */
  } B;
} AON_LPSPI_RDROR_tag;

typedef union AON_LPSPI_TCBR_union_tag { /* Transmit Command Burst */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Command Data */
  } B;
} AON_LPSPI_TCBR_tag;

typedef union AON_LPSPI_TDBR_union_tag { /* Transmit Data Burst */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Data */
  } B;
} AON_LPSPI_TDBR_tag;

typedef union AON_LPSPI_RDBR_union_tag { /* Receive Data Burst */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Data */
  } B;
} AON_LPSPI_RDBR_tag;

struct AON_LPSPI_tag {
  AON_LPSPI_VERID_tag VERID;           /* Version ID */
  AON_LPSPI_PARAM_tag PARAM;           /* Parameter */
  uint8_t AON_LPSPI_reserved0[8];
  AON_LPSPI_CR_tag CR;                 /* Control */
  AON_LPSPI_SR_tag SR;                 /* Status */
  AON_LPSPI_IER_tag IER;               /* Interrupt Enable */
  AON_LPSPI_DER_tag DER;               /* DMA Enable */
  AON_LPSPI_CFGR0_tag CFGR0;           /* Configuration 0 */
  AON_LPSPI_CFGR1_tag CFGR1;           /* Configuration 1 */
  uint8_t AON_LPSPI_reserved1[8];
  AON_LPSPI_DMR0_tag DMR0;             /* Data Match 0 */
  AON_LPSPI_DMR1_tag DMR1;             /* Data Match 1 */
  uint8_t AON_LPSPI_reserved2[8];
  AON_LPSPI_CCR_tag CCR;               /* Clock Configuration */
  AON_LPSPI_CCR1_tag CCR1;             /* Clock Configuration 1 */
  uint8_t AON_LPSPI_reserved3[16];
  AON_LPSPI_FCR_tag FCR;               /* FIFO Control */
  AON_LPSPI_FSR_tag FSR;               /* FIFO Status */
  AON_LPSPI_TCR_tag TCR;               /* Transmit Command */
  AON_LPSPI_TDR_tag TDR;               /* Transmit Data */
  uint8_t AON_LPSPI_reserved4[8];
  AON_LPSPI_RSR_tag RSR;               /* Receive Status */
  AON_LPSPI_RDR_tag RDR;               /* Receive Data */
  AON_LPSPI_RDROR_tag RDROR;           /* Receive Data Read Only */
  uint8_t AON_LPSPI_reserved5[896];
  AON_LPSPI_TCBR_tag TCBR;             /* Transmit Command Burst */
  AON_LPSPI_TDBR_tag TDBR[128];        /* Transmit Data Burst */
  AON_LPSPI_RDBR_tag RDBR[128];        /* Receive Data Burst */
};


/* ============================================================================
   =============================== Module: AON_LPTMR ==========================
   ============================================================================ */

typedef union AON_LPTMR_CSR_union_tag { /* Control Status */
  vuint32_t R;
  struct {
    vuint32_t TEN:1;                   /* Timer Enable */
    vuint32_t TMS:1;                   /* Timer Mode Select */
    vuint32_t TFC:1;                   /* Timer Free-Running Counter */
    vuint32_t TPP:1;                   /* Timer Pin Polarity */
    vuint32_t TPS:2;                   /* Timer Pin Select */
    vuint32_t TIE:1;                   /* Timer Interrupt Enable */
    vuint32_t TCF:1;                   /* Timer Compare Flag */
    vuint32_t TDRE:1;                  /* Timer DMA Request Enable */
    vuint32_t _unused_0:23;            /* Reserved */
  } B;
} AON_LPTMR_CSR_tag;

typedef union AON_LPTMR_PSR_union_tag { /* Prescaler and Glitch Filter */
  vuint32_t R;
  struct {
    vuint32_t PCS:2;                   /* Prescaler and Glitch Filter Clock Select */
    vuint32_t PBYP:1;                  /* Prescaler and Glitch Filter Bypass */
    vuint32_t PRESCALE:4;              /* Prescaler and Glitch Filter Value */
    vuint32_t _unused_0:25;            /* Reserved */
  } B;
} AON_LPTMR_PSR_tag;

typedef union AON_LPTMR_CMR_union_tag { /* Compare */
  vuint32_t R;
  struct {
    vuint32_t COMPARE:32;              /* Compare Value */
  } B;
} AON_LPTMR_CMR_tag;

typedef union AON_LPTMR_CNR_union_tag { /* Counter */
  vuint32_t R;
  struct {
    vuint32_t COUNTER:32;              /* Counter Value */
  } B;
} AON_LPTMR_CNR_tag;

struct AON_LPTMR_tag {
  AON_LPTMR_CSR_tag CSR;               /* Control Status */
  AON_LPTMR_PSR_tag PSR;               /* Prescaler and Glitch Filter */
  AON_LPTMR_CMR_tag CMR;               /* Compare */
  AON_LPTMR_CNR_tag CNR;               /* Counter */
};


/* ============================================================================
   =============================== Module: AON_LPTPM ==========================
   ============================================================================ */

typedef union AON_LPTPM_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Identification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_LPTPM_VERID_tag;

typedef union AON_LPTPM_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t CHAN:8;                  /* Channel Count */
    vuint32_t TRIG:8;                  /* Trigger Count */
    vuint32_t WIDTH:8;                 /* Counter Width */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} AON_LPTPM_PARAM_tag;

typedef union AON_LPTPM_GLOBAL_union_tag { /* TPM Global */
  vuint32_t R;
  struct {
    vuint32_t NOUPDATE:1;              /* No Update */
    vuint32_t RST:1;                   /* Software Reset */
    vuint32_t _unused_0:30;            /* Reserved */
  } B;
} AON_LPTPM_GLOBAL_tag;

typedef union AON_LPTPM_SC_union_tag { /* Status and Control */
  vuint32_t R;
  struct {
    vuint32_t PS:3;                    /* Prescale Factor Selection */
    vuint32_t CMOD:2;                  /* Clock Mode Selection */
    vuint32_t CPWMS:1;                 /* Center-Aligned PWM Select */
    vuint32_t TOIE:1;                  /* Timer Overflow Interrupt Enable */
    vuint32_t TOF:1;                   /* Timer Overflow Flag */
    vuint32_t DMA:1;                   /* DMA Enable */
    vuint32_t _unused_0:23;            /* Reserved */
  } B;
} AON_LPTPM_SC_tag;

typedef union AON_LPTPM_CNT_union_tag { /* Counter */
  vuint32_t R;
  struct {
    vuint32_t COUNT:32;                /* Counter Value */
  } B;
} AON_LPTPM_CNT_tag;

typedef union AON_LPTPM_MOD_union_tag { /* Modulo */
  vuint32_t R;
  struct {
    vuint32_t MOD:32;                  /* Modulo Value */
  } B;
} AON_LPTPM_MOD_tag;

typedef union AON_LPTPM_STATUS_union_tag { /* Capture and Compare Status */
  vuint32_t R;
  struct {
    vuint32_t CH0F:1;                  /* Channel 0 Flag */
    vuint32_t CH1F:1;                  /* Channel 1 Flag */
    vuint32_t CH2F:1;                  /* Channel 2 Flag */
    vuint32_t CH3F:1;                  /* Channel 3 Flag */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t TOF:1;                   /* Timer Overflow Flag */
    vuint32_t _unused_0:23;            /* Reserved */
  } B;
} AON_LPTPM_STATUS_tag;

typedef union AON_LPTPM_CHANNEL_CSC_union_tag { /* Channel n Status and Control */
  vuint32_t R;
  struct {
    vuint32_t DMA:1;                   /* DMA Enable */
    vuint32_t _unused_30:1;            /* Reserved */
    vuint32_t ELSA:1;                  /* Edge or Level Select A */
    vuint32_t ELSB:1;                  /* Edge or Level Select B */
    vuint32_t MSA:1;                   /* Channel Mode Select A */
    vuint32_t MSB:1;                   /* Channel Mode Select B */
    vuint32_t CHIE:1;                  /* Channel Interrupt Enable */
    vuint32_t CHF:1;                   /* Channel Flag */
    vuint32_t _unused_0:24;
  } B;
} AON_LPTPM_CHANNEL_CSC_tag;

typedef union AON_LPTPM_CHANNEL_CV_union_tag { /* Channel n Value */
  vuint32_t R;
  struct {
    vuint32_t VAL:32;                  /* Channel Value */
  } B;
} AON_LPTPM_CHANNEL_CV_tag;

typedef struct AON_LPTPM_CHANNEL_struct_tag {
  AON_LPTPM_CHANNEL_CSC_tag CSC;       /* Channel n Status and Control */
  AON_LPTPM_CHANNEL_CV_tag CV;         /* Channel n Value */
} AON_LPTPM_CHANNEL_tag;

typedef union AON_LPTPM_COMBINE_union_tag { /* Combine Channel */
  vuint32_t R;
  struct {
    vuint32_t COMBINE0:1;              /* Combine Channels 0 and 1 */
    vuint32_t COMSWAP0:1;              /* Combine Channel 0 and 1 Swap */
    vuint32_t _unused_24:6;            /* Reserved */
    vuint32_t COMBINE1:1;              /* Combine Channels 2 and 3 */
    vuint32_t COMSWAP1:1;              /* Combine Channels 2 and 3 Swap */
    vuint32_t _unused_16:6;            /* Reserved */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPTPM_COMBINE_tag;

typedef union AON_LPTPM_TRIG_union_tag { /* Channel Trigger */
  vuint32_t R;
  struct {
    vuint32_t TRIG0:1;                 /* Channel 0 Trigger */
    vuint32_t TRIG1:1;                 /* Channel 1 Trigger */
    vuint32_t TRIG2:1;                 /* Channel 2 Trigger */
    vuint32_t TRIG3:1;                 /* Channel 3 Trigger */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPTPM_TRIG_tag;

typedef union AON_LPTPM_POL_union_tag { /* Channel Polarity */
  vuint32_t R;
  struct {
    vuint32_t POL0:1;                  /* Channel 0 Polarity */
    vuint32_t POL1:1;                  /* Channel 1 Polarity */
    vuint32_t POL2:1;                  /* Channel 2 Polarity */
    vuint32_t POL3:1;                  /* Channel 3 Polarity */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPTPM_POL_tag;

typedef union AON_LPTPM_FILTER_union_tag { /* Filter Control */
  vuint32_t R;
  struct {
    vuint32_t CH0FVAL:4;               /* Channel 0 Filter Value */
    vuint32_t CH1FVAL:4;               /* Channel 1 Filter Value */
    vuint32_t CH2FVAL:4;               /* Channel 2 Filter Value */
    vuint32_t CH3FVAL:4;               /* Channel 3 Filter Value */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPTPM_FILTER_tag;

typedef union AON_LPTPM_QDCTRL_union_tag { /* Quadrature Decoder Control and Status */
  vuint32_t R;
  struct {
    vuint32_t QUADEN:1;                /* Quadrature Decoder Enable */
    vuint32_t TOFDIR:1;                /* Timer Overflow Direction */
    vuint32_t QUADIR:1;                /* Counter Direction in Quadrature Decode Mode */
    vuint32_t QUADMODE:1;              /* Quadrature Decoder Mode */
    vuint32_t _unused_0:28;            /* Reserved */
  } B;
} AON_LPTPM_QDCTRL_tag;

typedef union AON_LPTPM_CONF_union_tag { /* Configuration */
  vuint32_t R;
  struct {
    vuint32_t _unused_27:5;
    vuint32_t DOZEEN:1;                /* Doze Enable */
    vuint32_t DBGMODE:2;               /* Debug Mode */
    vuint32_t _unused_23:1;
    vuint32_t _unused_22:1;
    vuint32_t _unused_16:6;            /* Reserved */
    vuint32_t CSOT:1;                  /* Counter Start on Trigger */
    vuint32_t CSOO:1;                  /* Counter Stop on Overflow */
    vuint32_t CROT:1;                  /* Counter Reload on Trigger */
    vuint32_t CPOT:1;                  /* Counter Pause on Trigger */
    vuint32_t _unused_10:2;            /* Reserved */
    vuint32_t TRGPOL:1;                /* Trigger Polarity */
    vuint32_t TRGSRC:1;                /* Trigger Source */
    vuint32_t TRGSEL:2;                /* Trigger Select */
    vuint32_t _unused_0:6;             /* Reserved */
  } B;
} AON_LPTPM_CONF_tag;

struct AON_LPTPM_tag {
  AON_LPTPM_VERID_tag VERID;           /* Version ID */
  AON_LPTPM_PARAM_tag PARAM;           /* Parameter */
  AON_LPTPM_GLOBAL_tag GLOBAL;         /* TPM Global */
  uint8_t AON_LPTPM_reserved0[4];
  AON_LPTPM_SC_tag SC;                 /* Status and Control */
  AON_LPTPM_CNT_tag CNT;               /* Counter */
  AON_LPTPM_MOD_tag MOD;               /* Modulo */
  AON_LPTPM_STATUS_tag STATUS;         /* Capture and Compare Status */
  AON_LPTPM_CHANNEL_tag CHANNEL[4];
  uint8_t AON_LPTPM_reserved1[36];
  AON_LPTPM_COMBINE_tag COMBINE;       /* Combine Channel */
  uint8_t AON_LPTPM_reserved2[4];
  AON_LPTPM_TRIG_tag TRIG;             /* Channel Trigger */
  AON_LPTPM_POL_tag POL;               /* Channel Polarity */
  uint8_t AON_LPTPM_reserved3[4];
  AON_LPTPM_FILTER_tag FILTER;         /* Filter Control */
  uint8_t AON_LPTPM_reserved4[4];
  AON_LPTPM_QDCTRL_tag QDCTRL;         /* Quadrature Decoder Control and Status */
  AON_LPTPM_CONF_tag CONF;             /* Configuration */
};


/* ============================================================================
   =============================== Module: AON_LPUART =========================
   ============================================================================ */

typedef union AON_LPUART_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Identification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_LPUART_VERID_tag;

typedef union AON_LPUART_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t TXFIFO:8;                /* Transmit FIFO Size */
    vuint32_t RXFIFO:8;                /* Receive FIFO Size */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPUART_PARAM_tag;

typedef union AON_LPUART_GLOBAL_union_tag { /* Global */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;            /* Reserved */
    vuint32_t RST:1;                   /* Software Reset */
    vuint32_t _unused_0:30;            /* Reserved */
  } B;
} AON_LPUART_GLOBAL_tag;

typedef union AON_LPUART_PINCFG_union_tag { /* Pin Configuration */
  vuint32_t R;
  struct {
    vuint32_t TRGSEL:2;                /* Trigger Select */
    vuint32_t _unused_0:30;            /* Reserved */
  } B;
} AON_LPUART_PINCFG_tag;

typedef union AON_LPUART_BAUD_union_tag { /* Baud Rate */
  vuint32_t R;
  struct {
    vuint32_t SBR:13;                  /* Baud Rate Modulo Divisor */
    vuint32_t SBNS:1;                  /* Stop Bit Number Select */
    vuint32_t RXEDGIE:1;               /* RX Input Active Edge Interrupt Enable */
    vuint32_t LBKDIE:1;                /* LIN Break Detect Interrupt Enable */
    vuint32_t RESYNCDIS:1;             /* Resynchronization Disable */
    vuint32_t BOTHEDGE:1;              /* Both Edge Sampling */
    vuint32_t MATCFG:2;                /* Match Configuration */
    vuint32_t RIDMAE:1;                /* Receiver Idle DMA Enable */
    vuint32_t RDMAE:1;                 /* Receiver Full DMA Enable */
    vuint32_t _unused_9:1;             /* Reserved */
    vuint32_t TDMAE:1;                 /* Transmitter DMA Enable */
    vuint32_t OSR:5;                   /* Oversampling Ratio (OSR) */
    vuint32_t M10:1;                   /* 10-Bit Mode Select */
    vuint32_t MAEN2:1;                 /* Match Address Mode Enable 2 */
    vuint32_t MAEN1:1;                 /* Match Address Mode Enable 1 */
  } B;
} AON_LPUART_BAUD_tag;

typedef union AON_LPUART_STAT_union_tag { /* Status */
  vuint32_t R;
  struct {
    vuint32_t LBKFE:1;                 /* LIN Break Flag Enable */
    vuint32_t AME:1;                   /* Address Mark Enable */
    vuint32_t _unused_24:6;            /* Reserved */
    vuint32_t MSF:1;                   /* MODEM Status Flag */
    vuint32_t TSF:1;                   /* Timeout Status Flag */
    vuint32_t _unused_18:4;            /* Reserved */
    vuint32_t MA2F:1;                  /* Match 2 Flag */
    vuint32_t MA1F:1;                  /* Match 1 Flag */
    vuint32_t PF:1;                    /* Parity Error Flag (PF) */
    vuint32_t FE:1;                    /* Framing Error Flag (FE) */
    vuint32_t NF:1;                    /* Noise Flag (NF) */
    vuint32_t OR:1;                    /* Receiver Overrun Flag */
    vuint32_t IDLE:1;                  /* Idle Line Flag */
    vuint32_t RDRF:1;                  /* Receive Data Register Full Flag */
    vuint32_t TC:1;                    /* Transmission Complete Flag */
    vuint32_t TDRE:1;                  /* Transmit Data Register Empty Flag */
    vuint32_t RAF:1;                   /* Receiver Active Flag */
    vuint32_t LBKDE:1;                 /* LIN Break Detection Enable */
    vuint32_t BRK13:1;                 /* Break Character Generation Length */
    vuint32_t RWUID:1;                 /* Receive Wake Up Idle Detect */
    vuint32_t RXINV:1;                 /* Receive Data Inversion */
    vuint32_t MSBF:1;                  /* MSB First */
    vuint32_t RXEDGIF:1;               /* RXD Pin Active Edge Interrupt Flag */
    vuint32_t LBKDIF:1;                /* LIN Break Detect Interrupt Flag */
  } B;
} AON_LPUART_STAT_tag;

typedef union AON_LPUART_CTRL_union_tag { /* Control */
  vuint32_t R;
  struct {
    vuint32_t PT:1;                    /* Parity Type */
    vuint32_t PE:1;                    /* Parity Enable */
    vuint32_t ILT:1;                   /* Idle Line Type Select */
    vuint32_t WAKE:1;                  /* Receiver Wakeup Method Select */
    vuint32_t M:1;                     /* 9-Bit Or 8-Bit Mode Select */
    vuint32_t RSRC:1;                  /* Receiver Source Select */
    vuint32_t DOZEEN:1;                /* Enables LPUART in Doze mode. */
    vuint32_t LOOPS:1;                 /* Loop Mode Select */
    vuint32_t IDLECFG:3;               /* Idle Configuration */
    vuint32_t M7:1;                    /* 7-Bit Mode Select */
    vuint32_t _unused_19:1;            /* Reserved */
    vuint32_t _unused_18:1;            /* Reserved */
    vuint32_t MA2IE:1;                 /* Match 2 (MA2F) Interrupt Enable */
    vuint32_t MA1IE:1;                 /* Match 1 (MA1F) Interrupt Enable */
    vuint32_t SBK:1;                   /* Send Break */
    vuint32_t RWU:1;                   /* Receiver Wakeup Control */
    vuint32_t RE:1;                    /* Receiver Enable */
    vuint32_t TE:1;                    /* Transmitter Enable */
    vuint32_t ILIE:1;                  /* Idle Line Interrupt Enable */
    vuint32_t RIE:1;                   /* Receiver Interrupt Enable */
    vuint32_t TCIE:1;                  /* Transmission Complete Interrupt Enable */
    vuint32_t TIE:1;                   /* Transmit Interrupt Enable */
    vuint32_t PEIE:1;                  /* Parity Error Interrupt Enable */
    vuint32_t FEIE:1;                  /* Framing Error Interrupt Enable */
    vuint32_t NEIE:1;                  /* Noise Error Interrupt Enable */
    vuint32_t ORIE:1;                  /* Overrun Interrupt Enable */
    vuint32_t TXINV:1;                 /* Transmit Data Inversion */
    vuint32_t TXDIR:1;                 /* TXD Pin Direction in Single-Wire Mode */
    vuint32_t R9T8:1;                  /* Receive Bit 9 Transmit Bit 8 */
    vuint32_t R8T9:1;                  /* Receive Bit 8 Transmit Bit 9 */
  } B;
} AON_LPUART_CTRL_tag;

typedef union AON_LPUART_DATA_union_tag { /* Data */
  vuint32_t R;
  struct {
    vuint32_t R0T0:1;                  /* Read Receive FIFO Bit 0 Or Write Transmit FIFO Bit 0 */
    vuint32_t R1T1:1;                  /* Read Receive FIFO Bit 1 Or Write Transmit FIFO Bit 1 */
    vuint32_t R2T2:1;                  /* Read Receive FIFO Bit 2 Or Write Transmit FIFO Bit 2 */
    vuint32_t R3T3:1;                  /* Read Receive FIFO Bit 3 Or Write Transmit FIFO Bit 3 */
    vuint32_t R4T4:1;                  /* Read Receive FIFO Bit 4 Or Write Transmit FIFO Bit 4 */
    vuint32_t R5T5:1;                  /* Read Receive FIFO Bit 5 Or Write Transmit FIFO Bit 5 */
    vuint32_t R6T6:1;                  /* Read Receive FIFO Bit 6 Or Write Transmit FIFO Bit 6 */
    vuint32_t R7T7:1;                  /* Read Receive FIFO Bit 7 Or Write Transmit FIFO Bit 7 */
    vuint32_t R8T8:1;                  /* Read Receive FIFO Bit 8 Or Write Transmit FIFO Bit 8 */
    vuint32_t R9T9:1;                  /* Read Receive FIFO Bit 9 Or Write Transmit FIFO Bit 9 */
    vuint32_t LINBRK:1;                /* LIN Break */
    vuint32_t IDLINE:1;                /* Idle Line */
    vuint32_t RXEMPT:1;                /* Receive Buffer Empty */
    vuint32_t FRETSC:1;                /* Frame Error Transmit Special Character */
    vuint32_t PARITYE:1;               /* Parity Error */
    vuint32_t NOISY:1;                 /* Noisy Data Received */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPUART_DATA_tag;

typedef union AON_LPUART_MATCH_union_tag { /* Match Address */
  vuint32_t R;
  struct {
    vuint32_t MA1:10;                  /* Match Address 1 */
    vuint32_t _unused_16:6;            /* Reserved */
    vuint32_t MA2:10;                  /* Match Address 2 */
    vuint32_t _unused_0:6;             /* Reserved */
  } B;
} AON_LPUART_MATCH_tag;

typedef union AON_LPUART_MODIR_union_tag { /* MODEM IrDA */
  vuint32_t R;
  struct {
    vuint32_t TXCTSE:1;                /* Transmitter CTS Enable */
    vuint32_t TXRTSE:1;                /* Transmitter RTS Enable */
    vuint32_t TXRTSPOL:1;              /* Transmitter RTS Polarity */
    vuint32_t RXRTSE:1;                /* Receiver RTS Enable */
    vuint32_t TXCTSC:1;                /* Transmit CTS Configuration */
    vuint32_t TXCTSSRC:1;              /* Transmit CTS Source */
    vuint32_t _unused_24:2;            /* Reserved */
    vuint32_t RTSWATER:4;              /* Receive RTS Configuration */
    vuint32_t _unused_16:4;            /* Reserved */
    vuint32_t TNP:2;                   /* Transmitter Narrow Pulse */
    vuint32_t IREN:1;                  /* IR Enable */
    vuint32_t _unused_0:13;            /* Reserved */
  } B;
} AON_LPUART_MODIR_tag;

typedef union AON_LPUART_FIFO_union_tag { /* FIFO */
  vuint32_t R;
  struct {
    vuint32_t RXFIFOSIZE:3;            /* Receive FIFO Buffer Depth */
    vuint32_t RXFE:1;                  /* Receive FIFO Enable */
    vuint32_t TXFIFOSIZE:3;            /* Transmit FIFO Buffer Depth */
    vuint32_t TXFE:1;                  /* Transmit FIFO Enable */
    vuint32_t RXUFE:1;                 /* Receive FIFO Underflow Interrupt Enable */
    vuint32_t TXOFE:1;                 /* Transmit FIFO Overflow Interrupt Enable */
    vuint32_t RXIDEN:3;                /* Receiver Idle Empty Enable */
    vuint32_t _unused_18:1;            /* Reserved */
    vuint32_t RXFLUSH:1;               /* Receive FIFO Flush */
    vuint32_t TXFLUSH:1;               /* Transmit FIFO Flush */
    vuint32_t RXUF:1;                  /* Receiver FIFO Underflow Flag */
    vuint32_t TXOF:1;                  /* Transmitter FIFO Overflow Flag */
    vuint32_t _unused_10:4;            /* Reserved */
    vuint32_t RXEMPT:1;                /* Receive FIFO Or Buffer Empty */
    vuint32_t TXEMPT:1;                /* Transmit FIFO Or Buffer Empty */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} AON_LPUART_FIFO_tag;

typedef union AON_LPUART_WATER_union_tag { /* Watermark */
  vuint32_t R;
  struct {
    vuint32_t TXWATER:4;               /* Transmit Watermark */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t TXCOUNT:5;               /* Transmit Counter */
    vuint32_t _unused_16:3;            /* Reserved */
    vuint32_t RXWATER:4;               /* Receive Watermark */
    vuint32_t _unused_8:4;             /* Reserved */
    vuint32_t RXCOUNT:5;               /* Receive Counter */
    vuint32_t _unused_0:3;             /* Reserved */
  } B;
} AON_LPUART_WATER_tag;

typedef union AON_LPUART_DATARO_union_tag { /* Data Read-Only */
  vuint32_t R;
  struct {
    vuint32_t DATA:16;                 /* Receive Data */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPUART_DATARO_tag;

typedef union AON_LPUART_MCR_union_tag { /* MODEM Control */
  vuint32_t R;
  struct {
    vuint32_t CTS:1;                   /* Clear To Send */
    vuint32_t DSR:1;                   /* Data Set Ready */
    vuint32_t RIN:1;                   /* Ring Indicator */
    vuint32_t DCD:1;                   /* Data Carrier Detect */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t DTR:1;                   /* Data Terminal Ready */
    vuint32_t RTS:1;                   /* Request To Send */
    vuint32_t _unused_0:22;            /* Reserved */
  } B;
} AON_LPUART_MCR_tag;

typedef union AON_LPUART_MSR_union_tag { /* MODEM Status */
  vuint32_t R;
  struct {
    vuint32_t DCTS:1;                  /* Delta Clear To Send */
    vuint32_t DDSR:1;                  /* Delta Data Set Ready */
    vuint32_t DRI:1;                   /* Delta Ring Indicator */
    vuint32_t DDCD:1;                  /* Delta Data Carrier Detect */
    vuint32_t CTS:1;                   /* Clear To Send */
    vuint32_t DSR:1;                   /* Data Set Ready */
    vuint32_t RIN:1;                   /* Ring Indicator */
    vuint32_t DCD:1;                   /* Data Carrier Detect */
    vuint32_t _unused_0:24;            /* Reserved */
  } B;
} AON_LPUART_MSR_tag;

typedef union AON_LPUART_REIR_union_tag { /* Receiver Extended Idle */
  vuint32_t R;
  struct {
    vuint32_t IDTIME:14;               /* Idle Time */
    vuint32_t _unused_0:18;            /* Reserved */
  } B;
} AON_LPUART_REIR_tag;

typedef union AON_LPUART_TEIR_union_tag { /* Transmitter Extended Idle */
  vuint32_t R;
  struct {
    vuint32_t IDTIME:14;               /* Idle Time */
    vuint32_t _unused_0:18;            /* Reserved */
  } B;
} AON_LPUART_TEIR_tag;

typedef union AON_LPUART_HDCR_union_tag { /* Half Duplex Control */
  vuint32_t R;
  struct {
    vuint32_t TXSTALL:1;               /* Transmit Stall */
    vuint32_t RXSEL:1;                 /* Receive Select */
    vuint32_t RXWRMSK:1;               /* Receive FIFO Write Mask */
    vuint32_t RXMSK:1;                 /* Receive Mask */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t RTSEXT:8;                /* RTS Extended */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPUART_HDCR_tag;

typedef union AON_LPUART_TOCR_union_tag { /* Timeout Control */
  vuint32_t R;
  struct {
    vuint32_t TOEN:4;                  /* Timeout Enable */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t TOIE:4;                  /* Timeout Interrupt Enable */
    vuint32_t _unused_0:20;            /* Reserved */
  } B;
} AON_LPUART_TOCR_tag;

typedef union AON_LPUART_TOSR_union_tag { /* Timeout Status */
  vuint32_t R;
  struct {
    vuint32_t TOZ:4;                   /* Timeout Zero */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t TOF:4;                   /* Timeout Flag */
    vuint32_t _unused_0:20;            /* Reserved */
  } B;
} AON_LPUART_TOSR_tag;

typedef union AON_LPUART_TIMEOUT_union_tag { /* Timeout N */
  vuint32_t R;
  struct {
    vuint32_t TIMEOUT:14;              /* Timeout Value */
    vuint32_t _unused_2:16;            /* Reserved */
    vuint32_t CFG:2;                   /* Idle Configuration */
  } B;
} AON_LPUART_TIMEOUT_tag;

typedef union AON_LPUART_TCBR_union_tag { /* Transmit Command Burst */
  vuint32_t R;
  struct {
    vuint32_t DATA:16;                 /* Data */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_LPUART_TCBR_tag;

typedef union AON_LPUART_TDBR_union_tag { /* Transmit Data Burst */
  vuint32_t R;
  struct {
    vuint32_t DATA0:8;                 /* Data0 */
    vuint32_t DATA1:8;                 /* Data1 */
    vuint32_t DATA2:8;                 /* Data2 */
    vuint32_t DATA3:8;                 /* Data3 */
  } B;
} AON_LPUART_TDBR_tag;

struct AON_LPUART_tag {
  AON_LPUART_VERID_tag VERID;          /* Version ID */
  AON_LPUART_PARAM_tag PARAM;          /* Parameter */
  AON_LPUART_GLOBAL_tag GLOBAL;        /* Global */
  AON_LPUART_PINCFG_tag PINCFG;        /* Pin Configuration */
  AON_LPUART_BAUD_tag BAUD;            /* Baud Rate */
  AON_LPUART_STAT_tag STAT;            /* Status */
  AON_LPUART_CTRL_tag CTRL;            /* Control */
  AON_LPUART_DATA_tag DATA;            /* Data */
  AON_LPUART_MATCH_tag MATCH;          /* Match Address */
  AON_LPUART_MODIR_tag MODIR;          /* MODEM IrDA */
  AON_LPUART_FIFO_tag FIFO;            /* FIFO */
  AON_LPUART_WATER_tag WATER;          /* Watermark */
  AON_LPUART_DATARO_tag DATARO;        /* Data Read-Only */
  uint8_t AON_LPUART_reserved0[12];
  AON_LPUART_MCR_tag MCR;              /* MODEM Control */
  AON_LPUART_MSR_tag MSR;              /* MODEM Status */
  AON_LPUART_REIR_tag REIR;            /* Receiver Extended Idle */
  AON_LPUART_TEIR_tag TEIR;            /* Transmitter Extended Idle */
  AON_LPUART_HDCR_tag HDCR;            /* Half Duplex Control */
  uint8_t AON_LPUART_reserved1[4];
  AON_LPUART_TOCR_tag TOCR;            /* Timeout Control */
  AON_LPUART_TOSR_tag TOSR;            /* Timeout Status */
  AON_LPUART_TIMEOUT_tag TIMEOUT[4];   /* Timeout N */
  uint8_t AON_LPUART_reserved2[400];
  AON_LPUART_TCBR_tag TCBR[128];       /* Transmit Command Burst */
  AON_LPUART_TDBR_tag TDBR[256];       /* Transmit Data Burst */
};



/* ============================================================================
   =============================== Module: AON_LSTCU ==========================
   ============================================================================ */

typedef union AON_LSTCU_ERR_STAT_union_tag { /* Error Status */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVP_MB:1;               /* Invalid Pointer MBIST */
    vuint32_t _unused_29:1;
    vuint32_t _unused_16:13;
    vuint32_t UFSF:1;                  /* Unrecoverable Fault Status */
    vuint32_t RFSF:1;                  /* Recoverable Fault Status */
    vuint32_t _unused_0:14;
  } B;
} AON_LSTCU_ERR_STAT_tag;

typedef union AON_LSTCU_ERR_FM_union_tag { /* Error Fault Mapping */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVPFMMB:1;              /* Invalid BIST Pointer Fault Mapping During MBIST Scheduling */
    vuint32_t _unused_29:1;
    vuint32_t _unused_0:29;
  } B;
} AON_LSTCU_ERR_FM_tag;

typedef union AON_LSTCU_MB_RSTAT0_union_tag { /* MBIST Run Status 0 */
  vuint32_t R;
  struct {
    vuint32_t MBSTAT0:1;               /* MBIST Run Result Status Bit 0 */
    vuint32_t _unused_16:15;
    vuint32_t _unused_0:16;
  } B;
} AON_LSTCU_MB_RSTAT0_tag;

typedef union AON_LSTCU_MBFM0_union_tag { /* MBIST Fault Mapping 0 */
  vuint32_t R;
  struct {
    vuint32_t MBSTATFM0:1;             /* MBIST_RUN_STAT0[MBSTAT0] Fault Mapping */
    vuint32_t _unused_16:15;
    vuint32_t _unused_0:16;
  } B;
} AON_LSTCU_MBFM0_tag;

typedef union AON_LSTCU_STAG_union_tag { /* Stagger */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t MB_DELAY:8;              /* MBIST Delay */
    vuint32_t _unused_8:8;
    vuint32_t _unused_0:8;
  } B;
} AON_LSTCU_STAG_tag;

typedef union AON_LSTCU_PH1_DUR_union_tag { /* Phase 1 Duration */
  vuint32_t R;
  struct {
    vuint32_t PH1DUR:10;               /* Phase 1 Duration */
    vuint32_t _unused_0:22;
  } B;
} AON_LSTCU_PH1_DUR_tag;

typedef union AON_LSTCU_MBPTR_union_tag { /* MBIST Scheduler Pointer */
  vuint32_t R;
  struct {
    vuint32_t MBPTR:8;                 /* MBIST Pointer */
    vuint32_t MBCSM:1;                 /* MBIST Concurrent or Sequential Mode */
    vuint32_t _unused_1:22;
    vuint32_t MBEOL:1;                 /* MBIST End of List */
  } B;
} AON_LSTCU_MBPTR_tag;

struct AON_LSTCU_tag {
  uint8_t AON_LSTCU_reserved0[8];
  AON_LSTCU_ERR_STAT_tag ERR_STAT;     /* Error Status */
  uint8_t AON_LSTCU_reserved1[4];
  AON_LSTCU_ERR_FM_tag ERR_FM;         /* Error Fault Mapping */
  uint8_t AON_LSTCU_reserved2[76];
  AON_LSTCU_MB_RSTAT0_tag MB_RSTAT0;   /* MBIST Run Status 0 */
  uint8_t AON_LSTCU_reserved3[284];
  AON_LSTCU_MBFM0_tag MBFM0;           /* MBIST Fault Mapping 0 */
  uint8_t AON_LSTCU_reserved4[220];
  AON_LSTCU_STAG_tag STAG;             /* Stagger */
  uint8_t AON_LSTCU_reserved5[12];
  AON_LSTCU_PH1_DUR_tag PH1_DUR;       /* Phase 1 Duration */
  uint8_t AON_LSTCU_reserved6[140];
  AON_LSTCU_MBPTR_tag MBPTR[1];        /* MBIST Scheduler Pointer */
};


/* ============================================================================
   =============================== Module: AON_M33_CACHE_CTRL =================
   ============================================================================ */

typedef union AON_M33_CACHE_CTRL_CCR_union_tag { /* Cache Control */
  vuint32_t R;
  struct {
    vuint32_t ENCACHE:1;               /* Cache Enable */
    vuint32_t _unused_30:1;            /* Reserved Always write 0 to this field to maintain compatibility. */
    vuint32_t FRCWT:1;                 /* Force Write Through Mode */
    vuint32_t FRCNOALLC:1;             /* Forces No Allocation on Cache Misses */
    vuint32_t _unused_8:20;            /* Reserved */
    vuint32_t INVW0:1;                 /* Invalidate Way 0 */
    vuint32_t PUSHW0:1;                /* Push Way 0 */
    vuint32_t INVW1:1;                 /* Invalidate Way 1 */
    vuint32_t PUSHW1:1;                /* Push Way 1 */
    vuint32_t _unused_1:3;             /* Reserved */
    vuint32_t GO:1;                    /* Initiate Cache Command */
  } B;
} AON_M33_CACHE_CTRL_CCR_tag;

typedef union AON_M33_CACHE_CTRL_CLCR_union_tag { /* Cache Line Control */
  vuint32_t R;
  struct {
    vuint32_t LGO:1;                   /* Initiate Cache Line Command */
    vuint32_t _unused_30:1;            /* Reserved */
    vuint32_t CACHEADDR:12;            /* Cache Address */
    vuint32_t WSEL:1;                  /* Way Select */
    vuint32_t _unused_16:1;            /* Reserved */
    vuint32_t TDSEL:1;                 /* Tag or Data Select */
    vuint32_t _unused_12:3;            /* Reserved */
    vuint32_t LCIVB:1;                 /* Line Command Initial Valid */
    vuint32_t LCIMB:1;                 /* Line Command Initial Modified */
    vuint32_t LCWAY:1;                 /* Line Command Way */
    vuint32_t _unused_8:1;             /* Reserved */
    vuint32_t LCMD:2;                  /* Line Command */
    vuint32_t LADSEL:1;                /* Line Address Select */
    vuint32_t LACC:1;                  /* Line Access Type */
    vuint32_t _unused_0:4;             /* Reserved */
  } B;
} AON_M33_CACHE_CTRL_CLCR_tag;

typedef union AON_M33_CACHE_CTRL_CSAR_union_tag { /* Cache Search Address */
  vuint32_t R;
  struct {
    vuint32_t LGO:1;                   /* Initiate Cache Line Command */
    vuint32_t _unused_30:1;            /* Reserved */
    vuint32_t PHYADDR:30;              /* Physical Address */
  } B;
} AON_M33_CACHE_CTRL_CSAR_tag;

typedef union AON_M33_CACHE_CTRL_CCVR_union_tag { /* Cache Read/Write Value */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Cache Read/Write Data */
  } B;
} AON_M33_CACHE_CTRL_CCVR_tag;

struct AON_M33_CACHE_CTRL_tag {
  AON_M33_CACHE_CTRL_CCR_tag CCR;      /* Cache Control */
  AON_M33_CACHE_CTRL_CLCR_tag CLCR;    /* Cache Line Control */
  AON_M33_CACHE_CTRL_CSAR_tag CSAR;    /* Cache Search Address */
  AON_M33_CACHE_CTRL_CCVR_tag CCVR;    /* Cache Read/Write Value */
};


/* ============================================================================
   =============================== Module: AON_MCM ============================
   ============================================================================ */

typedef union AON_MCM_ISCR_union_tag { /* Interrupt Status and Control */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t IRQ:1;                   /* ETB-Related Interrupt Pending */
    vuint32_t NMI:1;                   /* Nonmaskable Interrupt Pending */
    vuint32_t DHREQ:1;                 /* Debug Halt Request Indicator */
    vuint32_t CWBER:1;                 /* Cache Write Buffer Error Status */
    vuint32_t _unused_26:1;
    vuint32_t _unused_24:2;
    vuint32_t FIOC:1;                  /* FPU Invalid Operation Interrupt Status */
    vuint32_t FDZC:1;                  /* FPU Divide-by-Zero Interrupt Status */
    vuint32_t FOFC:1;                  /* FPU Overflow Interrupt Status */
    vuint32_t FUFC:1;                  /* FPU Underflow Interrupt status */
    vuint32_t FIXC:1;                  /* FPU Inexact Interrupt Status */
    vuint32_t _unused_17:2;
    vuint32_t FIDC:1;                  /* FPU Input Denormal Interrupt Status */
    vuint32_t _unused_12:4;
    vuint32_t CWBEE:1;                 /* Cache Write Buffer Error Enable */
    vuint32_t _unused_10:1;
    vuint32_t _unused_8:2;
    vuint32_t FIOCE:1;                 /* FPU Invalid Operation Interrupt Enable */
    vuint32_t FDZCE:1;                 /* FPU Divide-by-Zero Interrupt Enable */
    vuint32_t FOFCE:1;                 /* FPU Overflow Interrupt Enable */
    vuint32_t FUFCE:1;                 /* FPU Underflow Interrupt Enable */
    vuint32_t FIXCE:1;                 /* FPU Inexact Interrupt Enable */
    vuint32_t _unused_1:2;
    vuint32_t FIDCE:1;                 /* FPU Input Denormal Interrupt Enable */
  } B;
} AON_MCM_ISCR_tag;

typedef union AON_MCM_ETBCC_union_tag { /* ETB Counter Control */
  vuint32_t R;
  struct {
    vuint32_t CNTEN:1;                 /* Counter Enable */
    vuint32_t RSPT:2;                  /* Response Type */
    vuint32_t RLRQ:1;                  /* Reload Request */
    vuint32_t _unused_0:28;
  } B;
} AON_MCM_ETBCC_tag;

typedef union AON_MCM_ETBRR_union_tag { /* ETB Reload */
  vuint32_t R;
  struct {
    vuint32_t RELOAD:11;               /* Byte Count Reload Value */
    vuint32_t _unused_0:21;            /* Reserved */
  } B;
} AON_MCM_ETBRR_tag;

typedef union AON_MCM_ETBCV_union_tag { /* ETB Counter Value */
  vuint32_t R;
  struct {
    vuint32_t COUNTER:11;              /* Byte Count Counter Value */
    vuint32_t _unused_0:21;
  } B;
} AON_MCM_ETBCV_tag;

typedef union AON_MCM_FADR_union_tag { /* Write Buffer Fault Address */
  vuint32_t R;
  struct {
    vuint32_t ADDRESS:32;              /* Fault Address */
  } B;
} AON_MCM_FADR_tag;

typedef union AON_MCM_FATR_union_tag { /* Store Buffer Fault Attributes */
  vuint32_t R;
  struct {
    vuint32_t BEDA:1;                  /* Bus Error Data Access Type */
    vuint32_t BEMD:1;                  /* Bus Error Privilege Level */
    vuint32_t _unused_28:2;
    vuint32_t BESZ:2;                  /* Bus Error Size */
    vuint32_t _unused_25:1;
    vuint32_t BEWT:1;                  /* Bus Error Write */
    vuint32_t BEMN:4;                  /* Bus Error Master Number */
    vuint32_t _unused_1:19;
    vuint32_t BEOVR:1;                 /* Bus Error Overrun */
  } B;
} AON_MCM_FATR_tag;

typedef union AON_MCM_FDR_union_tag {  /* Store Buffer Fault Data */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Fault Data */
  } B;
} AON_MCM_FDR_tag;

struct AON_MCM_tag {
  uint8_t AON_MCM_reserved0[16];
  AON_MCM_ISCR_tag ISCR;               /* Interrupt Status and Control */
  AON_MCM_ETBCC_tag ETBCC;             /* ETB Counter Control */
  AON_MCM_ETBRR_tag ETBRR;             /* ETB Reload */
  AON_MCM_ETBCV_tag ETBCV;             /* ETB Counter Value */
  AON_MCM_FADR_tag FADR;               /* Write Buffer Fault Address */
  AON_MCM_FATR_tag FATR;               /* Store Buffer Fault Attributes */
  AON_MCM_FDR_tag FDR;                 /* Store Buffer Fault Data */
};


/* ============================================================================
   =============================== Module: AON_MICFIL =========================
   ============================================================================ */

typedef union AON_MICFIL_CTRL_1_union_tag { /* MICFIL Control 1 */
  vuint32_t R;
  struct {
    vuint32_t CH0EN:1;                 /* Channel 0 Enable */
    vuint32_t CH1EN:1;                 /* Channel 1 Enable */
    vuint32_t CH2EN:1;                 /* Channel 2 Enable */
    vuint32_t CH3EN:1;                 /* Channel 3 Enable */
    vuint32_t CH4EN:1;                 /* Channel 4 Enable */
    vuint32_t CH5EN:1;                 /* Channel 5 Enable */
    vuint32_t CH6EN:1;                 /* Channel 6 Enable */
    vuint32_t CH7EN:1;                 /* Channel 7 Enable */
    vuint32_t _unused_16:8;            /* Reserved */
    vuint32_t FSYNCEN:1;               /* Frame Synchronization Enable */
    vuint32_t _unused_12:3;            /* Reserved */
    vuint32_t DECFILS:1;               /* Decimation Filter Enable in Stop */
    vuint32_t _unused_9:2;             /* Reserved */
    vuint32_t ERREN:1;                 /* Error Interruption Enable */
    vuint32_t DISEL:2;                 /* DMA Interrupt Selection */
    vuint32_t DBGE:1;                  /* Module Enable in Debug */
    vuint32_t SRES:1;                  /* Software Reset */
    vuint32_t DBG:1;                   /* Debug Mode */
    vuint32_t PDMIEN:1;                /* MICFIL Enable */
    vuint32_t DOZEN:1;                 /* Doze Enable */
    vuint32_t MDIS:1;                  /* Module Disable */
  } B;
} AON_MICFIL_CTRL_1_tag;

typedef union AON_MICFIL_CTRL_2_union_tag { /* MICFIL Control 2 */
  vuint32_t R;
  struct {
    vuint32_t CLKDIV:8;                /* Clock Divider */
    vuint32_t _unused_16:8;            /* Reserved */
    vuint32_t CICOSR:4;                /* CIC Decimation Rate */
    vuint32_t _unused_7:5;
    vuint32_t QSEL:3;                  /* Quality Mode */
    vuint32_t _unused_0:4;
  } B;
} AON_MICFIL_CTRL_2_tag;

typedef union AON_MICFIL_STAT_union_tag { /* MICFIL Status */
  vuint32_t R;
  struct {
    vuint32_t CH0F:1;                  /* Channel 0 Output Data Flag */
    vuint32_t CH1F:1;                  /* Channel 1 Output Data Flag */
    vuint32_t CH2F:1;                  /* Channel 2 Output Data Flag */
    vuint32_t CH3F:1;                  /* Channel 3 Output Data Flag */
    vuint32_t CH4F:1;                  /* Channel 4 Output Data Flag */
    vuint32_t CH5F:1;                  /* Channel 5 Output Data Flag */
    vuint32_t CH6F:1;                  /* Channel 6 Output Data Flag */
    vuint32_t CH7F:1;                  /* Channel 7 Output Data Flag */
    vuint32_t _unused_16:8;            /* Reserved */
    vuint32_t _unused_3:13;            /* Reserved */
    vuint32_t LOWFREQF:1;              /* Low Frequency Flag */
    vuint32_t FIR_RDY:1;               /* Filter Data Ready */
    vuint32_t BSY_FIL:1;               /* Busy Flag */
  } B;
} AON_MICFIL_STAT_tag;

typedef union AON_MICFIL_FIFO_CTRL_union_tag { /* MICFIL FIFO Control */
  vuint32_t R;
  struct {
    vuint32_t FIFOWMK:5;               /* FIFO Watermark Control */
    vuint32_t _unused_0:27;            /* Reserved */
  } B;
} AON_MICFIL_FIFO_CTRL_tag;

typedef union AON_MICFIL_FIFO_STAT_union_tag { /* MICFIL FIFO Status */
  vuint32_t R;
  struct {
    vuint32_t FIFOOVF0:1;              /* FIFO Overflow Exception Flag for Channel 0 */
    vuint32_t FIFOOVF1:1;              /* FIFO Overflow Exception Flag for Channel 1 */
    vuint32_t FIFOOVF2:1;              /* FIFO Overflow Exception Flag for Channel 2 */
    vuint32_t FIFOOVF3:1;              /* FIFO Overflow Exception Flag for Channel 3 */
    vuint32_t FIFOOVF4:1;              /* FIFO Overflow Exception Flag for Channel 4 */
    vuint32_t FIFOOVF5:1;              /* FIFO Overflow Exception Flag for Channel 5 */
    vuint32_t FIFOOVF6:1;              /* FIFO Overflow Exception Flag for Channel 6 */
    vuint32_t FIFOOVF7:1;              /* FIFO Overflow Exception Flag for Channel 7 */
    vuint32_t FIFOUND0:1;              /* FIFO Underflow Exception Flag for Channel 0 */
    vuint32_t FIFOUND1:1;              /* FIFO Underflow Exception Flag for Channel 1 */
    vuint32_t FIFOUND2:1;              /* FIFO Underflow Exception Flag for Channel 2 */
    vuint32_t FIFOUND3:1;              /* FIFO Underflow Exception Flag for Channel 3 */
    vuint32_t FIFOUND4:1;              /* FIFO Underflow Exception Flag for Channel 4 */
    vuint32_t FIFOUND5:1;              /* FIFO Underflow Exception Flag for Channel 5 */
    vuint32_t FIFOUND6:1;              /* FIFO Underflow Exception Flag for Channel 6 */
    vuint32_t FIFOUND7:1;              /* FIFO Underflow Exception Flag for Channel 7 */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_MICFIL_FIFO_STAT_tag;

typedef union AON_MICFIL_DATACH_union_tag { /* MICFIL Output Result */
  vuint32_t R;
  struct {
    vuint32_t DATA:32;                 /* Channel n Data */
  } B;
} AON_MICFIL_DATACH_tag;

typedef union AON_MICFIL_DC_CTRL_union_tag { /* MICFIL DC Remover Control */
  vuint32_t R;
  struct {
    vuint32_t DCCONFIG0:2;             /* Channel 0 DC Remover Configuration */
    vuint32_t DCCONFIG1:2;             /* Channel 1 DC Remover Configuration */
    vuint32_t DCCONFIG2:2;             /* Channel 2 DC Remover Configuration */
    vuint32_t DCCONFIG3:2;             /* Channel 3 DC Remover Configuration */
    vuint32_t DCCONFIG4:2;             /* Channel 4 DC Remover Configuration */
    vuint32_t DCCONFIG5:2;             /* Channel 5 DC Remover Configuration */
    vuint32_t DCCONFIG6:2;             /* Channel 6 DC Remover Configuration */
    vuint32_t DCCONFIG7:2;             /* Channel 7 DC Remover Configuration */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_MICFIL_DC_CTRL_tag;

typedef union AON_MICFIL_DC_OUT_CTRL_union_tag { /* MICFIL Output DC Remover Control */
  vuint32_t R;
  struct {
    vuint32_t DCCONFIG0:2;             /* Channel 0 DC Remover Configuration */
    vuint32_t DCCONFIG1:2;             /* Channel 1 DC Remover Configuration */
    vuint32_t DCCONFIG2:2;             /* Channel 2 DC Remover Configuration */
    vuint32_t DCCONFIG3:2;             /* Channel 3 DC Remover Configuration */
    vuint32_t DCCONFIG4:2;             /* Channel 4 DC Remover Configuration */
    vuint32_t DCCONFIG5:2;             /* Channel 5 DC Remover Configuration */
    vuint32_t DCCONFIG6:2;             /* Channel 6 DC Remover Configuration */
    vuint32_t DCCONFIG7:2;             /* Channel 7 DC Remover Configuration */
    vuint32_t _unused_0:16;
  } B;
} AON_MICFIL_DC_OUT_CTRL_tag;

typedef union AON_MICFIL_RANGE_CTRL_union_tag { /* MICFIL Range Control */
  vuint32_t R;
  struct {
    vuint32_t RANGEADJ0:4;             /* Channel 0 Range Adjustment */
    vuint32_t RANGEADJ1:4;             /* Channel 1 Range Adjustment */
    vuint32_t RANGEADJ2:4;             /* Channel 2 Range Adjustment */
    vuint32_t RANGEADJ3:4;             /* Channel 3 Range Adjustment */
    vuint32_t RANGEADJ4:4;             /* Channel 4 Range Adjustment */
    vuint32_t RANGEADJ5:4;             /* Channel 5 Range Adjustment */
    vuint32_t RANGEADJ6:4;             /* Channel 6 Range Adjustment */
    vuint32_t RANGEADJ7:4;             /* Channel 7 Range Adjustment */
  } B;
} AON_MICFIL_RANGE_CTRL_tag;

typedef union AON_MICFIL_RANGE_STAT_union_tag { /* MICFIL Range Status */
  vuint32_t R;
  struct {
    vuint32_t RANGEOVF0:1;             /* Channel 0 Range Overflow Error Flag */
    vuint32_t RANGEOVF1:1;             /* Channel 1 Range Overflow Error Flag */
    vuint32_t RANGEOVF2:1;             /* Channel 2 Range Overflow Error Flag */
    vuint32_t RANGEOVF3:1;             /* Channel 3 Range Overflow Error Flag */
    vuint32_t RANGEOVF4:1;             /* Channel 4 Range Overflow Error Flag */
    vuint32_t RANGEOVF5:1;             /* Channel 5 Range Overflow Error Flag */
    vuint32_t RANGEOVF6:1;             /* Channel 6 Range Overflow Error Flag */
    vuint32_t RANGEOVF7:1;             /* Channel 7 Range Overflow Error Flag */
    vuint32_t _unused_16:8;
    vuint32_t RANGEUNF0:1;             /* Channel 0 Range Underflow Error Flag */
    vuint32_t RANGEUNF1:1;             /* Channel 1 Range Underflow Error Flag */
    vuint32_t RANGEUNF2:1;             /* Channel 2 Range Underflow Error Flag */
    vuint32_t RANGEUNF3:1;             /* Channel 3 Range Underflow Error Flag */
    vuint32_t RANGEUNF4:1;             /* Channel 4 Range Underflow Error Flag */
    vuint32_t RANGEUNF5:1;             /* Channel 5 Range Underflow Error Flag */
    vuint32_t RANGEUNF6:1;             /* Channel 6 Range Underflow Error Flag */
    vuint32_t RANGEUNF7:1;             /* Channel 7 Range Underflow Error Flag */
    vuint32_t _unused_0:8;
  } B;
} AON_MICFIL_RANGE_STAT_tag;

typedef union AON_MICFIL_FSYNC_CTRL_union_tag { /* Frame Synchronization Control */
  vuint32_t R;
  struct {
    vuint32_t FSYNCLEN:32;             /* Frame Synchronization Window Length */
  } B;
} AON_MICFIL_FSYNC_CTRL_tag;

typedef union AON_MICFIL_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Specification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_MICFIL_VERID_tag;

typedef union AON_MICFIL_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t NPAIR:4;                 /* Number of Microphone Pairs */
    vuint32_t FIFO_PTRWID:4;           /* FIFO Pointer Width */
    vuint32_t FIL_OUT_WIDTH_24B:1;     /* Filter Output Width */
    vuint32_t LOW_POWER:1;             /* Low-Power Decimation Filter */
    vuint32_t DC_BYPASS:1;             /* Input DC Remover Bypass */
    vuint32_t DC_OUT_BYPASS:1;         /* Output DC Remover Bypass */
    vuint32_t _unused_16:4;
    vuint32_t HWVAD:1;                 /* HWVAD Active */
    vuint32_t HWVAD_ENERGY_MODE:1;     /* HWVAD Energy Mode Active */
    vuint32_t _unused_13:1;
    vuint32_t HWVAD_ZCD:1;             /* HWVAD Zero-Crossing Detector Active */
    vuint32_t _unused_8:4;
    vuint32_t NUM_HWVAD:4;             /* Number of HWVADs */
    vuint32_t _unused_0:4;
  } B;
} AON_MICFIL_PARAM_tag;

typedef union AON_MICFIL_VADN_VAD_CTRL_1_union_tag { /* Voice Activity Detector 0 Control */
  vuint32_t R;
  struct {
    vuint32_t VADEN:1;                 /* Voice Activity Detector Enable */
    vuint32_t VADRST:1;                /* Voice Activity Detector Reset */
    vuint32_t VADIE:1;                 /* Voice Activity Detector Interruption Enable */
    vuint32_t VADERIE:1;               /* Voice Activity Detector Error Interruption Enable */
    vuint32_t VADST10:1;               /* Voice Activity Detector Internal Filters Initialization */
    vuint32_t _unused_24:3;
    vuint32_t VADINITT:5;              /* Voice Activity Detector Initialization Time */
    vuint32_t _unused_16:3;
    vuint32_t VADCICOSR:4;             /* Voice Activity Detector CIC Oversampling Rate */
    vuint32_t _unused_10:2;
    vuint32_t _unused_8:2;
    vuint32_t VADCHSEL:3;              /* Voice Activity Detector Channel Selector */
    vuint32_t _unused_0:5;
  } B;
} AON_MICFIL_VADN_VAD_CTRL_1_tag;

typedef union AON_MICFIL_VADN_VAD_CTRL_2_union_tag { /* Voice Activity Detector 0 Control */
  vuint32_t R;
  struct {
    vuint32_t VADHPF:2;                /* Voice Activity Detector High-Pass Filter */
    vuint32_t _unused_24:6;
    vuint32_t VADINPGAIN:4;            /* Voice Activity Detector Input Gain */
    vuint32_t _unused_16:4;
    vuint32_t VADFRAMET:6;             /* Voice Activity Detector Frame Time */
    vuint32_t _unused_4:6;
    vuint32_t VADFOUTDIS:1;            /* Voice Activity Detector Force Output Disable */
    vuint32_t _unused_2:1;
    vuint32_t VADPREFEN:1;             /* Voice Activity Detector Pre Filter Enable */
    vuint32_t VADFRENDIS:1;            /* Voice Activity Detector Frame Energy Disable */
  } B;
} AON_MICFIL_VADN_VAD_CTRL_2_tag;

typedef union AON_MICFIL_VADN_VAD_STAT_union_tag { /* Voice Activity Detector 0 Status */
  vuint32_t R;
  struct {
    vuint32_t VADIF:1;                 /* Voice Activity Detector Interrupt Flag */
    vuint32_t _unused_17:14;           /* Reserved */
    vuint32_t _unused_16:1;            /* Reserved */
    vuint32_t VADINSATF:1;             /* Voice Activity Detector Input Saturation Flag */
    vuint32_t _unused_1:14;            /* Reserved */
    vuint32_t VADINITF:1;              /* Voice Activity Detector Initialization Flag */
  } B;
} AON_MICFIL_VADN_VAD_STAT_tag;

typedef union AON_MICFIL_VADN_VAD_SCONFIG_union_tag { /* Voice Activity Detector 0 Signal Configuration */
  vuint32_t R;
  struct {
    vuint32_t VADSGAIN:4;              /* Voice Activity Detector Signal Gain */
    vuint32_t _unused_2:26;
    vuint32_t VADSMAXEN:1;             /* Voice Activity Detector Signal Maximum Enable */
    vuint32_t VADSFILEN:1;             /* Voice Activity Detector Signal Filter Enable */
  } B;
} AON_MICFIL_VADN_VAD_SCONFIG_tag;

typedef union AON_MICFIL_VADN_VAD_NCONFIG_union_tag { /* Voice Activity Detector 0 Noise Configuration */
  vuint32_t R;
  struct {
    vuint32_t VADNGAIN:4;              /* Voice Activity Detector Noise Gain */
    vuint32_t _unused_24:4;            /* Reserved */
    vuint32_t VADNFILADJ:5;            /* Voice Activity Detector Noise Filter Adjustment */
    vuint32_t _unused_4:15;            /* Reserved */
    vuint32_t VADNOREN:1;              /* Voice Activity Detector Noise OR Enable */
    vuint32_t VADNDECEN:1;             /* Voice Activity Detector Noise Decimation Enable */
    vuint32_t VADNMINEN:1;             /* Voice Activity Detector Noise Minimum Enable */
    vuint32_t VADNFILAUTO:1;           /* Voice Activity Detector Noise Filter Auto */
  } B;
} AON_MICFIL_VADN_VAD_NCONFIG_tag;

typedef union AON_MICFIL_VADN_VAD_NDATA_union_tag { /* Voice Activity Detector 0 Noise Data */
  vuint32_t R;
  struct {
    vuint32_t VADNDATA:16;             /* Voice Activity Detector Noise Data */
    vuint32_t _unused_0:16;            /* Reserved */
  } B;
} AON_MICFIL_VADN_VAD_NDATA_tag;

typedef union AON_MICFIL_VADN_VAD_ZCD_union_tag { /* Voice Activity Detector 0 Zero-Crossing Detector */
  vuint32_t R;
  struct {
    vuint32_t VADZCDEN:1;              /* Zero-Crossing Detector Enable */
    vuint32_t _unused_30:1;            /* Reserved */
    vuint32_t VADZCDAUTO:1;            /* Zero-Crossing Detector Automatic Threshold */
    vuint32_t _unused_28:1;            /* Reserved */
    vuint32_t VADZCDAND:1;             /* Zero-Crossing Detector AND Behavior */
    vuint32_t _unused_24:3;            /* Reserved */
    vuint32_t VADZCDADJ:4;             /* Zero-Crossing Detector Adjustment */
    vuint32_t _unused_16:4;            /* Reserved */
    vuint32_t VADZCDTH:10;             /* Zero-Crossing Detector Threshold */
    vuint32_t _unused_0:6;             /* Reserved */
  } B;
} AON_MICFIL_VADN_VAD_ZCD_tag;

typedef struct AON_MICFIL_VADN_struct_tag {
  AON_MICFIL_VADN_VAD_CTRL_1_tag VAD_CTRL_1; /* Voice Activity Detector 0 Control */
  AON_MICFIL_VADN_VAD_CTRL_2_tag VAD_CTRL_2; /* Voice Activity Detector 0 Control */
  AON_MICFIL_VADN_VAD_STAT_tag VAD_STAT; /* Voice Activity Detector 0 Status */
  AON_MICFIL_VADN_VAD_SCONFIG_tag VAD_SCONFIG; /* Voice Activity Detector 0 Signal Configuration */
  AON_MICFIL_VADN_VAD_NCONFIG_tag VAD_NCONFIG; /* Voice Activity Detector 0 Noise Configuration */
  AON_MICFIL_VADN_VAD_NDATA_tag VAD_NDATA; /* Voice Activity Detector 0 Noise Data */
  AON_MICFIL_VADN_VAD_ZCD_tag VAD_ZCD; /* Voice Activity Detector 0 Zero-Crossing Detector */
} AON_MICFIL_VADN_tag;

struct AON_MICFIL_tag {
  AON_MICFIL_CTRL_1_tag CTRL_1;        /* MICFIL Control 1 */
  AON_MICFIL_CTRL_2_tag CTRL_2;        /* MICFIL Control 2 */
  AON_MICFIL_STAT_tag STAT;            /* MICFIL Status */
  uint8_t AON_MICFIL_reserved0[4];
  AON_MICFIL_FIFO_CTRL_tag FIFO_CTRL;  /* MICFIL FIFO Control */
  AON_MICFIL_FIFO_STAT_tag FIFO_STAT;  /* MICFIL FIFO Status */
  uint8_t AON_MICFIL_reserved1[12];
  AON_MICFIL_DATACH_tag DATACH[8];     /* MICFIL Output Result */
  uint8_t AON_MICFIL_reserved2[32];
  AON_MICFIL_DC_CTRL_tag DC_CTRL;      /* MICFIL DC Remover Control */
  AON_MICFIL_DC_OUT_CTRL_tag DC_OUT_CTRL; /* MICFIL Output DC Remover Control */
  uint8_t AON_MICFIL_reserved3[8];
  AON_MICFIL_RANGE_CTRL_tag RANGE_CTRL; /* MICFIL Range Control */
  uint8_t AON_MICFIL_reserved4[4];
  AON_MICFIL_RANGE_STAT_tag RANGE_STAT; /* MICFIL Range Status */
  AON_MICFIL_FSYNC_CTRL_tag FSYNC_CTRL; /* Frame Synchronization Control */
  AON_MICFIL_VERID_tag VERID;          /* Version ID */
  AON_MICFIL_PARAM_tag PARAM;          /* Parameter */
  uint8_t AON_MICFIL_reserved5[4];
  AON_MICFIL_VADN_tag VADN[1];
};


/* ============================================================================
   =============================== Module: AON_MSGINTR ========================
   ============================================================================ */

typedef union AON_MSGINTR_MSIIR0_union_tag { /* Message Signaled Interrupt Index Register 0 */
  vuint32_t R;
  struct {
    vuint32_t IBS:5;
    vuint32_t _unused_0:27;
  } B;
} AON_MSGINTR_MSIIR0_tag;

typedef union AON_MSGINTR_MSIR0_union_tag { /* Message Signaled Interrupt Register 0 */
  vuint32_t R;
  struct {
    vuint32_t SHN:32;
  } B;
} AON_MSGINTR_MSIR0_tag;

typedef union AON_MSGINTR_MSIIR1_union_tag { /* Message Signaled Interrupt Index Register 1 */
  vuint32_t R;
  struct {
    vuint32_t IBS:5;
    vuint32_t _unused_0:27;
  } B;
} AON_MSGINTR_MSIIR1_tag;

typedef union AON_MSGINTR_MSIR1_union_tag { /* Message Signaled Interrupt Register 1 */
  vuint32_t R;
  struct {
    vuint32_t SHN:32;
  } B;
} AON_MSGINTR_MSIR1_tag;

typedef union AON_MSGINTR_MSIIR2_union_tag { /* Message Signaled Interrupt Index Register 2 */
  vuint32_t R;
  struct {
    vuint32_t IBS:5;
    vuint32_t _unused_0:27;
  } B;
} AON_MSGINTR_MSIIR2_tag;

typedef union AON_MSGINTR_MSIR2_union_tag { /* Message Signaled Interrupt Register 2 */
  vuint32_t R;
  struct {
    vuint32_t SHN:32;
  } B;
} AON_MSGINTR_MSIR2_tag;

struct AON_MSGINTR_tag {
  AON_MSGINTR_MSIIR0_tag MSIIR0;       /* Message Signaled Interrupt Index Register 0 */
  AON_MSGINTR_MSIR0_tag MSIR0;         /* Message Signaled Interrupt Register 0 */
  AON_MSGINTR_MSIIR1_tag MSIIR1;       /* Message Signaled Interrupt Index Register 1 */
  AON_MSGINTR_MSIR1_tag MSIR1;         /* Message Signaled Interrupt Register 1 */
  AON_MSGINTR_MSIIR2_tag MSIIR2;       /* Message Signaled Interrupt Index Register 2 */
  AON_MSGINTR_MSIR2_tag MSIR2;         /* Message Signaled Interrupt Register 2 */
};


/* ============================================================================
   =============================== Module: AON_RGPIO ==========================
   ============================================================================ */

typedef union AON_RGPIO_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Specification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_RGPIO_VERID_tag;

typedef union AON_RGPIO_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t IRQNUM:4;                /* Interrupt Number */
    vuint32_t _unused_0:28;
  } B;
} AON_RGPIO_PARAM_tag;

typedef union AON_RGPIO_LOCK_union_tag { /* Lock */
  vuint32_t R;
  struct {
    vuint32_t PCNS:1;                  /* Lock PCNS */
    vuint32_t ICNS:1;                  /* Lock ICNS */
    vuint32_t PCNP:1;                  /* Lock PCNP */
    vuint32_t ICNP:1;                  /* Lock ICNP */
    vuint32_t _unused_0:28;
  } B;
} AON_RGPIO_LOCK_tag;

typedef union AON_RGPIO_PCNS_union_tag { /* Pin Control Nonsecure */
  vuint32_t R;
  struct {
    vuint32_t NSE0:1;                  /* Nonsecure Enable */
    vuint32_t NSE1:1;                  /* Nonsecure Enable */
    vuint32_t NSE2:1;                  /* Nonsecure Enable */
    vuint32_t NSE3:1;                  /* Nonsecure Enable */
    vuint32_t NSE4:1;                  /* Nonsecure Enable */
    vuint32_t NSE5:1;                  /* Nonsecure Enable */
    vuint32_t NSE6:1;                  /* Nonsecure Enable */
    vuint32_t NSE7:1;                  /* Nonsecure Enable */
    vuint32_t NSE8:1;                  /* Nonsecure Enable */
    vuint32_t NSE9:1;                  /* Nonsecure Enable */
    vuint32_t NSE10:1;                 /* Nonsecure Enable */
    vuint32_t NSE11:1;                 /* Nonsecure Enable */
    vuint32_t NSE12:1;                 /* Nonsecure Enable */
    vuint32_t NSE13:1;                 /* Nonsecure Enable */
    vuint32_t NSE14:1;                 /* Nonsecure Enable */
    vuint32_t NSE15:1;                 /* Nonsecure Enable */
    vuint32_t NSE16:1;                 /* Nonsecure Enable */
    vuint32_t NSE17:1;                 /* Nonsecure Enable */
    vuint32_t NSE18:1;                 /* Nonsecure Enable */
    vuint32_t NSE19:1;                 /* Nonsecure Enable */
    vuint32_t NSE20:1;                 /* Nonsecure Enable */
    vuint32_t NSE21:1;                 /* Nonsecure Enable */
    vuint32_t NSE22:1;                 /* Nonsecure Enable */
    vuint32_t NSE23:1;                 /* Nonsecure Enable */
    vuint32_t NSE24:1;                 /* Nonsecure Enable */
    vuint32_t NSE25:1;                 /* Nonsecure Enable */
    vuint32_t NSE26:1;                 /* Nonsecure Enable */
    vuint32_t NSE27:1;                 /* Nonsecure Enable */
    vuint32_t NSE28:1;                 /* Nonsecure Enable */
    vuint32_t NSE29:1;                 /* Nonsecure Enable */
    vuint32_t NSE30:1;                 /* Nonsecure Enable */
    vuint32_t NSE31:1;                 /* Nonsecure Enable */
  } B;
} AON_RGPIO_PCNS_tag;

typedef union AON_RGPIO_ICNS_union_tag { /* Interrupt Control Nonsecure */
  vuint32_t R;
  struct {
    vuint32_t NSE0:1;                  /* Nonsecure Enable */
    vuint32_t NSE1:1;                  /* Nonsecure Enable */
    vuint32_t _unused_0:30;
  } B;
} AON_RGPIO_ICNS_tag;

typedef union AON_RGPIO_PCNP_union_tag { /* Pin Control Nonprivilege */
  vuint32_t R;
  struct {
    vuint32_t NPE0:1;                  /* Nonprivilege Enable */
    vuint32_t NPE1:1;                  /* Nonprivilege Enable */
    vuint32_t NPE2:1;                  /* Nonprivilege Enable */
    vuint32_t NPE3:1;                  /* Nonprivilege Enable */
    vuint32_t NPE4:1;                  /* Nonprivilege Enable */
    vuint32_t NPE5:1;                  /* Nonprivilege Enable */
    vuint32_t NPE6:1;                  /* Nonprivilege Enable */
    vuint32_t NPE7:1;                  /* Nonprivilege Enable */
    vuint32_t NPE8:1;                  /* Nonprivilege Enable */
    vuint32_t NPE9:1;                  /* Nonprivilege Enable */
    vuint32_t NPE10:1;                 /* Nonprivilege Enable */
    vuint32_t NPE11:1;                 /* Nonprivilege Enable */
    vuint32_t NPE12:1;                 /* Nonprivilege Enable */
    vuint32_t NPE13:1;                 /* Nonprivilege Enable */
    vuint32_t NPE14:1;                 /* Nonprivilege Enable */
    vuint32_t NPE15:1;                 /* Nonprivilege Enable */
    vuint32_t NPE16:1;                 /* Nonprivilege Enable */
    vuint32_t NPE17:1;                 /* Nonprivilege Enable */
    vuint32_t NPE18:1;                 /* Nonprivilege Enable */
    vuint32_t NPE19:1;                 /* Nonprivilege Enable */
    vuint32_t NPE20:1;                 /* Nonprivilege Enable */
    vuint32_t NPE21:1;                 /* Nonprivilege Enable */
    vuint32_t NPE22:1;                 /* Nonprivilege Enable */
    vuint32_t NPE23:1;                 /* Nonprivilege Enable */
    vuint32_t NPE24:1;                 /* Nonprivilege Enable */
    vuint32_t NPE25:1;                 /* Nonprivilege Enable */
    vuint32_t NPE26:1;                 /* Nonprivilege Enable */
    vuint32_t NPE27:1;                 /* Nonprivilege Enable */
    vuint32_t NPE28:1;                 /* Nonprivilege Enable */
    vuint32_t NPE29:1;                 /* Nonprivilege Enable */
    vuint32_t NPE30:1;                 /* Nonprivilege Enable */
    vuint32_t NPE31:1;                 /* Nonprivilege Enable */
  } B;
} AON_RGPIO_PCNP_tag;

typedef union AON_RGPIO_ICNP_union_tag { /* Interrupt Control Nonprivilege */
  vuint32_t R;
  struct {
    vuint32_t NPE0:1;                  /* Nonprivilege Enable */
    vuint32_t NPE1:1;                  /* Nonprivilege Enable */
    vuint32_t _unused_0:30;
  } B;
} AON_RGPIO_ICNP_tag;

typedef union AON_RGPIO_PDOR_union_tag { /* Port Data Output */
  vuint32_t R;
  struct {
    vuint32_t PDO0:1;                  /* Port Data Output */
    vuint32_t PDO1:1;                  /* Port Data Output */
    vuint32_t PDO2:1;                  /* Port Data Output */
    vuint32_t PDO3:1;                  /* Port Data Output */
    vuint32_t PDO4:1;                  /* Port Data Output */
    vuint32_t PDO5:1;                  /* Port Data Output */
    vuint32_t PDO6:1;                  /* Port Data Output */
    vuint32_t PDO7:1;                  /* Port Data Output */
    vuint32_t PDO8:1;                  /* Port Data Output */
    vuint32_t PDO9:1;                  /* Port Data Output */
    vuint32_t PDO10:1;                 /* Port Data Output */
    vuint32_t PDO11:1;                 /* Port Data Output */
    vuint32_t PDO12:1;                 /* Port Data Output */
    vuint32_t PDO13:1;                 /* Port Data Output */
    vuint32_t PDO14:1;                 /* Port Data Output */
    vuint32_t PDO15:1;                 /* Port Data Output */
    vuint32_t PDO16:1;                 /* Port Data Output */
    vuint32_t PDO17:1;                 /* Port Data Output */
    vuint32_t PDO18:1;                 /* Port Data Output */
    vuint32_t PDO19:1;                 /* Port Data Output */
    vuint32_t PDO20:1;                 /* Port Data Output */
    vuint32_t PDO21:1;                 /* Port Data Output */
    vuint32_t PDO22:1;                 /* Port Data Output */
    vuint32_t PDO23:1;                 /* Port Data Output */
    vuint32_t PDO24:1;                 /* Port Data Output */
    vuint32_t PDO25:1;                 /* Port Data Output */
    vuint32_t PDO26:1;                 /* Port Data Output */
    vuint32_t PDO27:1;                 /* Port Data Output */
    vuint32_t PDO28:1;                 /* Port Data Output */
    vuint32_t PDO29:1;                 /* Port Data Output */
    vuint32_t PDO30:1;                 /* Port Data Output */
    vuint32_t PDO31:1;                 /* Port Data Output */
  } B;
} AON_RGPIO_PDOR_tag;

typedef union AON_RGPIO_PSOR_union_tag { /* Port Set Output */
  vuint32_t R;
  struct {
    vuint32_t PTSO0:1;                 /* Port Set Output */
    vuint32_t PTSO1:1;                 /* Port Set Output */
    vuint32_t PTSO2:1;                 /* Port Set Output */
    vuint32_t PTSO3:1;                 /* Port Set Output */
    vuint32_t PTSO4:1;                 /* Port Set Output */
    vuint32_t PTSO5:1;                 /* Port Set Output */
    vuint32_t PTSO6:1;                 /* Port Set Output */
    vuint32_t PTSO7:1;                 /* Port Set Output */
    vuint32_t PTSO8:1;                 /* Port Set Output */
    vuint32_t PTSO9:1;                 /* Port Set Output */
    vuint32_t PTSO10:1;                /* Port Set Output */
    vuint32_t PTSO11:1;                /* Port Set Output */
    vuint32_t PTSO12:1;                /* Port Set Output */
    vuint32_t PTSO13:1;                /* Port Set Output */
    vuint32_t PTSO14:1;                /* Port Set Output */
    vuint32_t PTSO15:1;                /* Port Set Output */
    vuint32_t PTSO16:1;                /* Port Set Output */
    vuint32_t PTSO17:1;                /* Port Set Output */
    vuint32_t PTSO18:1;                /* Port Set Output */
    vuint32_t PTSO19:1;                /* Port Set Output */
    vuint32_t PTSO20:1;                /* Port Set Output */
    vuint32_t PTSO21:1;                /* Port Set Output */
    vuint32_t PTSO22:1;                /* Port Set Output */
    vuint32_t PTSO23:1;                /* Port Set Output */
    vuint32_t PTSO24:1;                /* Port Set Output */
    vuint32_t PTSO25:1;                /* Port Set Output */
    vuint32_t PTSO26:1;                /* Port Set Output */
    vuint32_t PTSO27:1;                /* Port Set Output */
    vuint32_t PTSO28:1;                /* Port Set Output */
    vuint32_t PTSO29:1;                /* Port Set Output */
    vuint32_t PTSO30:1;                /* Port Set Output */
    vuint32_t PTSO31:1;                /* Port Set Output */
  } B;
} AON_RGPIO_PSOR_tag;

typedef union AON_RGPIO_PCOR_union_tag { /* Port Clear Output */
  vuint32_t R;
  struct {
    vuint32_t PTCO0:1;                 /* Port Clear Output */
    vuint32_t PTCO1:1;                 /* Port Clear Output */
    vuint32_t PTCO2:1;                 /* Port Clear Output */
    vuint32_t PTCO3:1;                 /* Port Clear Output */
    vuint32_t PTCO4:1;                 /* Port Clear Output */
    vuint32_t PTCO5:1;                 /* Port Clear Output */
    vuint32_t PTCO6:1;                 /* Port Clear Output */
    vuint32_t PTCO7:1;                 /* Port Clear Output */
    vuint32_t PTCO8:1;                 /* Port Clear Output */
    vuint32_t PTCO9:1;                 /* Port Clear Output */
    vuint32_t PTCO10:1;                /* Port Clear Output */
    vuint32_t PTCO11:1;                /* Port Clear Output */
    vuint32_t PTCO12:1;                /* Port Clear Output */
    vuint32_t PTCO13:1;                /* Port Clear Output */
    vuint32_t PTCO14:1;                /* Port Clear Output */
    vuint32_t PTCO15:1;                /* Port Clear Output */
    vuint32_t PTCO16:1;                /* Port Clear Output */
    vuint32_t PTCO17:1;                /* Port Clear Output */
    vuint32_t PTCO18:1;                /* Port Clear Output */
    vuint32_t PTCO19:1;                /* Port Clear Output */
    vuint32_t PTCO20:1;                /* Port Clear Output */
    vuint32_t PTCO21:1;                /* Port Clear Output */
    vuint32_t PTCO22:1;                /* Port Clear Output */
    vuint32_t PTCO23:1;                /* Port Clear Output */
    vuint32_t PTCO24:1;                /* Port Clear Output */
    vuint32_t PTCO25:1;                /* Port Clear Output */
    vuint32_t PTCO26:1;                /* Port Clear Output */
    vuint32_t PTCO27:1;                /* Port Clear Output */
    vuint32_t PTCO28:1;                /* Port Clear Output */
    vuint32_t PTCO29:1;                /* Port Clear Output */
    vuint32_t PTCO30:1;                /* Port Clear Output */
    vuint32_t PTCO31:1;                /* Port Clear Output */
  } B;
} AON_RGPIO_PCOR_tag;

typedef union AON_RGPIO_PTOR_union_tag { /* Port Toggle Output */
  vuint32_t R;
  struct {
    vuint32_t PTTO0:1;                 /* Port Toggle Output */
    vuint32_t PTTO1:1;                 /* Port Toggle Output */
    vuint32_t PTTO2:1;                 /* Port Toggle Output */
    vuint32_t PTTO3:1;                 /* Port Toggle Output */
    vuint32_t PTTO4:1;                 /* Port Toggle Output */
    vuint32_t PTTO5:1;                 /* Port Toggle Output */
    vuint32_t PTTO6:1;                 /* Port Toggle Output */
    vuint32_t PTTO7:1;                 /* Port Toggle Output */
    vuint32_t PTTO8:1;                 /* Port Toggle Output */
    vuint32_t PTTO9:1;                 /* Port Toggle Output */
    vuint32_t PTTO10:1;                /* Port Toggle Output */
    vuint32_t PTTO11:1;                /* Port Toggle Output */
    vuint32_t PTTO12:1;                /* Port Toggle Output */
    vuint32_t PTTO13:1;                /* Port Toggle Output */
    vuint32_t PTTO14:1;                /* Port Toggle Output */
    vuint32_t PTTO15:1;                /* Port Toggle Output */
    vuint32_t PTTO16:1;                /* Port Toggle Output */
    vuint32_t PTTO17:1;                /* Port Toggle Output */
    vuint32_t PTTO18:1;                /* Port Toggle Output */
    vuint32_t PTTO19:1;                /* Port Toggle Output */
    vuint32_t PTTO20:1;                /* Port Toggle Output */
    vuint32_t PTTO21:1;                /* Port Toggle Output */
    vuint32_t PTTO22:1;                /* Port Toggle Output */
    vuint32_t PTTO23:1;                /* Port Toggle Output */
    vuint32_t PTTO24:1;                /* Port Toggle Output */
    vuint32_t PTTO25:1;                /* Port Toggle Output */
    vuint32_t PTTO26:1;                /* Port Toggle Output */
    vuint32_t PTTO27:1;                /* Port Toggle Output */
    vuint32_t PTTO28:1;                /* Port Toggle Output */
    vuint32_t PTTO29:1;                /* Port Toggle Output */
    vuint32_t PTTO30:1;                /* Port Toggle Output */
    vuint32_t PTTO31:1;                /* Port Toggle Output */
  } B;
} AON_RGPIO_PTOR_tag;

typedef union AON_RGPIO_PDIR_union_tag { /* Port Data Input */
  vuint32_t R;
  struct {
    vuint32_t PDI0:1;                  /* Port Data Input */
    vuint32_t PDI1:1;                  /* Port Data Input */
    vuint32_t PDI2:1;                  /* Port Data Input */
    vuint32_t PDI3:1;                  /* Port Data Input */
    vuint32_t PDI4:1;                  /* Port Data Input */
    vuint32_t PDI5:1;                  /* Port Data Input */
    vuint32_t PDI6:1;                  /* Port Data Input */
    vuint32_t PDI7:1;                  /* Port Data Input */
    vuint32_t PDI8:1;                  /* Port Data Input */
    vuint32_t PDI9:1;                  /* Port Data Input */
    vuint32_t PDI10:1;                 /* Port Data Input */
    vuint32_t PDI11:1;                 /* Port Data Input */
    vuint32_t PDI12:1;                 /* Port Data Input */
    vuint32_t PDI13:1;                 /* Port Data Input */
    vuint32_t PDI14:1;                 /* Port Data Input */
    vuint32_t PDI15:1;                 /* Port Data Input */
    vuint32_t PDI16:1;                 /* Port Data Input */
    vuint32_t PDI17:1;                 /* Port Data Input */
    vuint32_t PDI18:1;                 /* Port Data Input */
    vuint32_t PDI19:1;                 /* Port Data Input */
    vuint32_t PDI20:1;                 /* Port Data Input */
    vuint32_t PDI21:1;                 /* Port Data Input */
    vuint32_t PDI22:1;                 /* Port Data Input */
    vuint32_t PDI23:1;                 /* Port Data Input */
    vuint32_t PDI24:1;                 /* Port Data Input */
    vuint32_t PDI25:1;                 /* Port Data Input */
    vuint32_t PDI26:1;                 /* Port Data Input */
    vuint32_t PDI27:1;                 /* Port Data Input */
    vuint32_t PDI28:1;                 /* Port Data Input */
    vuint32_t PDI29:1;                 /* Port Data Input */
    vuint32_t PDI30:1;                 /* Port Data Input */
    vuint32_t PDI31:1;                 /* Port Data Input */
  } B;
} AON_RGPIO_PDIR_tag;

typedef union AON_RGPIO_PDDR_union_tag { /* Port Data Direction */
  vuint32_t R;
  struct {
    vuint32_t PDD0:1;                  /* Port Data Direction */
    vuint32_t PDD1:1;                  /* Port Data Direction */
    vuint32_t PDD2:1;                  /* Port Data Direction */
    vuint32_t PDD3:1;                  /* Port Data Direction */
    vuint32_t PDD4:1;                  /* Port Data Direction */
    vuint32_t PDD5:1;                  /* Port Data Direction */
    vuint32_t PDD6:1;                  /* Port Data Direction */
    vuint32_t PDD7:1;                  /* Port Data Direction */
    vuint32_t PDD8:1;                  /* Port Data Direction */
    vuint32_t PDD9:1;                  /* Port Data Direction */
    vuint32_t PDD10:1;                 /* Port Data Direction */
    vuint32_t PDD11:1;                 /* Port Data Direction */
    vuint32_t PDD12:1;                 /* Port Data Direction */
    vuint32_t PDD13:1;                 /* Port Data Direction */
    vuint32_t PDD14:1;                 /* Port Data Direction */
    vuint32_t PDD15:1;                 /* Port Data Direction */
    vuint32_t PDD16:1;                 /* Port Data Direction */
    vuint32_t PDD17:1;                 /* Port Data Direction */
    vuint32_t PDD18:1;                 /* Port Data Direction */
    vuint32_t PDD19:1;                 /* Port Data Direction */
    vuint32_t PDD20:1;                 /* Port Data Direction */
    vuint32_t PDD21:1;                 /* Port Data Direction */
    vuint32_t PDD22:1;                 /* Port Data Direction */
    vuint32_t PDD23:1;                 /* Port Data Direction */
    vuint32_t PDD24:1;                 /* Port Data Direction */
    vuint32_t PDD25:1;                 /* Port Data Direction */
    vuint32_t PDD26:1;                 /* Port Data Direction */
    vuint32_t PDD27:1;                 /* Port Data Direction */
    vuint32_t PDD28:1;                 /* Port Data Direction */
    vuint32_t PDD29:1;                 /* Port Data Direction */
    vuint32_t PDD30:1;                 /* Port Data Direction */
    vuint32_t PDD31:1;                 /* Port Data Direction */
  } B;
} AON_RGPIO_PDDR_tag;

typedef union AON_RGPIO_PIDR_union_tag { /* Port Input Disable */
  vuint32_t R;
  struct {
    vuint32_t PID0:1;                  /* Port Input Disable */
    vuint32_t PID1:1;                  /* Port Input Disable */
    vuint32_t PID2:1;                  /* Port Input Disable */
    vuint32_t PID3:1;                  /* Port Input Disable */
    vuint32_t PID4:1;                  /* Port Input Disable */
    vuint32_t PID5:1;                  /* Port Input Disable */
    vuint32_t PID6:1;                  /* Port Input Disable */
    vuint32_t PID7:1;                  /* Port Input Disable */
    vuint32_t PID8:1;                  /* Port Input Disable */
    vuint32_t PID9:1;                  /* Port Input Disable */
    vuint32_t PID10:1;                 /* Port Input Disable */
    vuint32_t PID11:1;                 /* Port Input Disable */
    vuint32_t PID12:1;                 /* Port Input Disable */
    vuint32_t PID13:1;                 /* Port Input Disable */
    vuint32_t PID14:1;                 /* Port Input Disable */
    vuint32_t PID15:1;                 /* Port Input Disable */
    vuint32_t PID16:1;                 /* Port Input Disable */
    vuint32_t PID17:1;                 /* Port Input Disable */
    vuint32_t PID18:1;                 /* Port Input Disable */
    vuint32_t PID19:1;                 /* Port Input Disable */
    vuint32_t PID20:1;                 /* Port Input Disable */
    vuint32_t PID21:1;                 /* Port Input Disable */
    vuint32_t PID22:1;                 /* Port Input Disable */
    vuint32_t PID23:1;                 /* Port Input Disable */
    vuint32_t PID24:1;                 /* Port Input Disable */
    vuint32_t PID25:1;                 /* Port Input Disable */
    vuint32_t PID26:1;                 /* Port Input Disable */
    vuint32_t PID27:1;                 /* Port Input Disable */
    vuint32_t PID28:1;                 /* Port Input Disable */
    vuint32_t PID29:1;                 /* Port Input Disable */
    vuint32_t PID30:1;                 /* Port Input Disable */
    vuint32_t PID31:1;                 /* Port Input Disable */
  } B;
} AON_RGPIO_PIDR_tag;

typedef union AON_RGPIO_PDR_union_tag { /* Pin Data */
  vuint8_t R;
  struct {
    vuint8_t PD:1;                     /* Pin Data (I/O) */
    vuint8_t _unused_0:7;
  } B;
} AON_RGPIO_PDR_tag;

typedef union AON_RGPIO_ICR0_union_tag { /* Interrupt Control 0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR0_tag;

typedef union AON_RGPIO_ICR1_union_tag { /* Interrupt Control 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR1_tag;

typedef union AON_RGPIO_ICR2_union_tag { /* Interrupt Control 2 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR2_tag;

typedef union AON_RGPIO_ICR3_union_tag { /* Interrupt Control 3 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR3_tag;

typedef union AON_RGPIO_ICR4_union_tag { /* Interrupt Control 4 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR4_tag;

typedef union AON_RGPIO_ICR5_union_tag { /* Interrupt Control 5 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR5_tag;

typedef union AON_RGPIO_ICR6_union_tag { /* Interrupt Control 6 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR6_tag;

typedef union AON_RGPIO_ICR7_union_tag { /* Interrupt Control 7 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR7_tag;

typedef union AON_RGPIO_ICR8_union_tag { /* Interrupt Control 8 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR8_tag;

typedef union AON_RGPIO_ICR9_union_tag { /* Interrupt Control 9 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR9_tag;

typedef union AON_RGPIO_ICR10_union_tag { /* Interrupt Control 10 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR10_tag;

typedef union AON_RGPIO_ICR11_union_tag { /* Interrupt Control 11 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR11_tag;

typedef union AON_RGPIO_ICR12_union_tag { /* Interrupt Control 12 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR12_tag;

typedef union AON_RGPIO_ICR13_union_tag { /* Interrupt Control 13 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR13_tag;

typedef union AON_RGPIO_ICR14_union_tag { /* Interrupt Control 14 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR14_tag;

typedef union AON_RGPIO_ICR15_union_tag { /* Interrupt Control 15 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR15_tag;

typedef union AON_RGPIO_ICR16_union_tag { /* Interrupt Control 16 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR16_tag;

typedef union AON_RGPIO_ICR17_union_tag { /* Interrupt Control 17 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR17_tag;

typedef union AON_RGPIO_ICR18_union_tag { /* Interrupt Control 18 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR18_tag;

typedef union AON_RGPIO_ICR19_union_tag { /* Interrupt Control 19 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR19_tag;

typedef union AON_RGPIO_ICR20_union_tag { /* Interrupt Control 20 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR20_tag;

typedef union AON_RGPIO_ICR21_union_tag { /* Interrupt Control 21 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR21_tag;

typedef union AON_RGPIO_ICR22_union_tag { /* Interrupt Control 22 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR22_tag;

typedef union AON_RGPIO_ICR23_union_tag { /* Interrupt Control 23 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR23_tag;

typedef union AON_RGPIO_ICR24_union_tag { /* Interrupt Control 24 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR24_tag;

typedef union AON_RGPIO_ICR25_union_tag { /* Interrupt Control 25 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR25_tag;

typedef union AON_RGPIO_ICR26_union_tag { /* Interrupt Control 26 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR26_tag;

typedef union AON_RGPIO_ICR27_union_tag { /* Interrupt Control 27 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR27_tag;

typedef union AON_RGPIO_ICR28_union_tag { /* Interrupt Control 28 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR28_tag;

typedef union AON_RGPIO_ICR29_union_tag { /* Interrupt Control 29 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR29_tag;

typedef union AON_RGPIO_ICR30_union_tag { /* Interrupt Control 30 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR30_tag;

typedef union AON_RGPIO_ICR31_union_tag { /* Interrupt Control 31 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t IRQC:4;                  /* Interrupt Configuration */
    vuint32_t IRQS:1;                  /* Interrupt Select */
    vuint32_t _unused_9:2;
    vuint32_t LK:1;                    /* Lock */
    vuint32_t ISF:1;                   /* Interrupt Status Flag */
    vuint32_t _unused_0:7;
  } B;
} AON_RGPIO_ICR31_tag;

typedef union AON_RGPIO_GICLR_union_tag { /* Global Interrupt Control Low */
  vuint32_t R;
  struct {
    vuint32_t GIWE0:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE1:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE2:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE3:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE4:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE5:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE6:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE7:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE8:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE9:1;                 /* Global Interrupt Write Enable */
    vuint32_t GIWE10:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE11:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE12:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE13:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE14:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE15:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWD:16;                 /* Global Interrupt Write Data */
  } B;
} AON_RGPIO_GICLR_tag;

typedef union AON_RGPIO_GICHR_union_tag { /* Global Interrupt Control High */
  vuint32_t R;
  struct {
    vuint32_t GIWE16:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE17:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE18:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE19:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE20:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE21:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE22:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE23:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE24:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE25:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE26:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE27:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE28:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE29:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE30:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWE31:1;                /* Global Interrupt Write Enable */
    vuint32_t GIWD:16;                 /* Global Interrupt Write Data */
  } B;
} AON_RGPIO_GICHR_tag;

typedef union AON_RGPIO_ISFR_union_tag { /* Interrupt Status Flag */
  vuint32_t R;
  struct {
    vuint32_t ISF0:1;                  /* Interrupt Status Flag */
    vuint32_t ISF1:1;                  /* Interrupt Status Flag */
    vuint32_t ISF2:1;                  /* Interrupt Status Flag */
    vuint32_t ISF3:1;                  /* Interrupt Status Flag */
    vuint32_t ISF4:1;                  /* Interrupt Status Flag */
    vuint32_t ISF5:1;                  /* Interrupt Status Flag */
    vuint32_t ISF6:1;                  /* Interrupt Status Flag */
    vuint32_t ISF7:1;                  /* Interrupt Status Flag */
    vuint32_t ISF8:1;                  /* Interrupt Status Flag */
    vuint32_t ISF9:1;                  /* Interrupt Status Flag */
    vuint32_t ISF10:1;                 /* Interrupt Status Flag */
    vuint32_t ISF11:1;                 /* Interrupt Status Flag */
    vuint32_t ISF12:1;                 /* Interrupt Status Flag */
    vuint32_t ISF13:1;                 /* Interrupt Status Flag */
    vuint32_t ISF14:1;                 /* Interrupt Status Flag */
    vuint32_t ISF15:1;                 /* Interrupt Status Flag */
    vuint32_t ISF16:1;                 /* Interrupt Status Flag */
    vuint32_t ISF17:1;                 /* Interrupt Status Flag */
    vuint32_t ISF18:1;                 /* Interrupt Status Flag */
    vuint32_t ISF19:1;                 /* Interrupt Status Flag */
    vuint32_t ISF20:1;                 /* Interrupt Status Flag */
    vuint32_t ISF21:1;                 /* Interrupt Status Flag */
    vuint32_t ISF22:1;                 /* Interrupt Status Flag */
    vuint32_t ISF23:1;                 /* Interrupt Status Flag */
    vuint32_t ISF24:1;                 /* Interrupt Status Flag */
    vuint32_t ISF25:1;                 /* Interrupt Status Flag */
    vuint32_t ISF26:1;                 /* Interrupt Status Flag */
    vuint32_t ISF27:1;                 /* Interrupt Status Flag */
    vuint32_t ISF28:1;                 /* Interrupt Status Flag */
    vuint32_t ISF29:1;                 /* Interrupt Status Flag */
    vuint32_t ISF30:1;                 /* Interrupt Status Flag */
    vuint32_t ISF31:1;                 /* Interrupt Status Flag */
  } B;
} AON_RGPIO_ISFR_tag;

struct AON_RGPIO_tag {
  AON_RGPIO_VERID_tag VERID;           /* Version ID */
  AON_RGPIO_PARAM_tag PARAM;           /* Parameter */
  uint8_t AON_RGPIO_reserved0[4];
  AON_RGPIO_LOCK_tag LOCK;             /* Lock */
  AON_RGPIO_PCNS_tag PCNS;             /* Pin Control Nonsecure */
  AON_RGPIO_ICNS_tag ICNS;             /* Interrupt Control Nonsecure */
  AON_RGPIO_PCNP_tag PCNP;             /* Pin Control Nonprivilege */
  AON_RGPIO_ICNP_tag ICNP;             /* Interrupt Control Nonprivilege */
  uint8_t AON_RGPIO_reserved1[32];
  AON_RGPIO_PDOR_tag PDOR;             /* Port Data Output */
  AON_RGPIO_PSOR_tag PSOR;             /* Port Set Output */
  AON_RGPIO_PCOR_tag PCOR;             /* Port Clear Output */
  AON_RGPIO_PTOR_tag PTOR;             /* Port Toggle Output */
  AON_RGPIO_PDIR_tag PDIR;             /* Port Data Input */
  AON_RGPIO_PDDR_tag PDDR;             /* Port Data Direction */
  AON_RGPIO_PIDR_tag PIDR;             /* Port Input Disable */
  uint8_t AON_RGPIO_reserved2[4];
  AON_RGPIO_PDR_tag PDR[32];           /* Pin Data */
  AON_RGPIO_ICR0_tag ICR0;             /* Interrupt Control 0 */
  AON_RGPIO_ICR1_tag ICR1;             /* Interrupt Control 1 */
  AON_RGPIO_ICR2_tag ICR2;             /* Interrupt Control 2 */
  AON_RGPIO_ICR3_tag ICR3;             /* Interrupt Control 3 */
  AON_RGPIO_ICR4_tag ICR4;             /* Interrupt Control 4 */
  AON_RGPIO_ICR5_tag ICR5;             /* Interrupt Control 5 */
  AON_RGPIO_ICR6_tag ICR6;             /* Interrupt Control 6 */
  AON_RGPIO_ICR7_tag ICR7;             /* Interrupt Control 7 */
  AON_RGPIO_ICR8_tag ICR8;             /* Interrupt Control 8 */
  AON_RGPIO_ICR9_tag ICR9;             /* Interrupt Control 9 */
  AON_RGPIO_ICR10_tag ICR10;           /* Interrupt Control 10 */
  AON_RGPIO_ICR11_tag ICR11;           /* Interrupt Control 11 */
  AON_RGPIO_ICR12_tag ICR12;           /* Interrupt Control 12 */
  AON_RGPIO_ICR13_tag ICR13;           /* Interrupt Control 13 */
  AON_RGPIO_ICR14_tag ICR14;           /* Interrupt Control 14 */
  AON_RGPIO_ICR15_tag ICR15;           /* Interrupt Control 15 */
  AON_RGPIO_ICR16_tag ICR16;           /* Interrupt Control 16 */
  AON_RGPIO_ICR17_tag ICR17;           /* Interrupt Control 17 */
  AON_RGPIO_ICR18_tag ICR18;           /* Interrupt Control 18 */
  AON_RGPIO_ICR19_tag ICR19;           /* Interrupt Control 19 */
  AON_RGPIO_ICR20_tag ICR20;           /* Interrupt Control 20 */
  AON_RGPIO_ICR21_tag ICR21;           /* Interrupt Control 21 */
  AON_RGPIO_ICR22_tag ICR22;           /* Interrupt Control 22 */
  AON_RGPIO_ICR23_tag ICR23;           /* Interrupt Control 23 */
  AON_RGPIO_ICR24_tag ICR24;           /* Interrupt Control 24 */
  AON_RGPIO_ICR25_tag ICR25;           /* Interrupt Control 25 */
  AON_RGPIO_ICR26_tag ICR26;           /* Interrupt Control 26 */
  AON_RGPIO_ICR27_tag ICR27;           /* Interrupt Control 27 */
  AON_RGPIO_ICR28_tag ICR28;           /* Interrupt Control 28 */
  AON_RGPIO_ICR29_tag ICR29;           /* Interrupt Control 29 */
  AON_RGPIO_ICR30_tag ICR30;           /* Interrupt Control 30 */
  AON_RGPIO_ICR31_tag ICR31;           /* Interrupt Control 31 */
  AON_RGPIO_GICLR_tag GICLR;           /* Global Interrupt Control Low */
  AON_RGPIO_GICHR_tag GICHR;           /* Global Interrupt Control High */
  uint8_t AON_RGPIO_reserved3[24];
  AON_RGPIO_ISFR_tag ISFR[2];          /* Interrupt Status Flag */
};


/* ============================================================================
   =============================== Module: AON_ROMCP ==========================
   ============================================================================ */

typedef union AON_ROMCP_ROMPATCHD_union_tag { /* Data Registers */
  vuint32_t R;
  struct {
    vuint32_t DATAX:32;                /* Data Fix Registers */
  } B;
} AON_ROMCP_ROMPATCHD_tag;

typedef union AON_ROMCP_ROMPATCHCNTL_union_tag { /* Control Register */
  vuint32_t R;
  struct {
    vuint32_t DATAFIX0:1;              /* Data Fix Enable */
    vuint32_t DATAFIX1:1;              /* Data Fix Enable */
    vuint32_t DATAFIX2:1;              /* Data Fix Enable */
    vuint32_t DATAFIX3:1;              /* Data Fix Enable */
    vuint32_t DATAFIX4:1;              /* Data Fix Enable */
    vuint32_t DATAFIX5:1;              /* Data Fix Enable */
    vuint32_t DATAFIX6:1;              /* Data Fix Enable */
    vuint32_t DATAFIX7:1;              /* Data Fix Enable */
    vuint32_t DATAFIX8:1;              /* Data Fix Enable */
    vuint32_t DATAFIX9:1;              /* Data Fix Enable */
    vuint32_t DATAFIX10:1;             /* Data Fix Enable */
    vuint32_t DATAFIX11:1;             /* Data Fix Enable */
    vuint32_t DATAFIX12:1;             /* Data Fix Enable */
    vuint32_t DATAFIX13:1;             /* Data Fix Enable */
    vuint32_t DATAFIX14:1;             /* Data Fix Enable */
    vuint32_t DATAFIX15:1;             /* Data Fix Enable */
    vuint32_t _unused_3:13;
    vuint32_t DIS:1;                   /* Patch Disable */
    vuint32_t _unused_0:2;
  } B;
} AON_ROMCP_ROMPATCHCNTL_tag;

typedef union AON_ROMCP_ROMPATCHENH_union_tag { /* Enable Register High */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:32;
  } B;
} AON_ROMCP_ROMPATCHENH_tag;

typedef union AON_ROMCP_ROMPATCHENL_union_tag { /* Enable Register Low */
  vuint32_t R;
  struct {
    vuint32_t ENABLE:32;               /* Enable Address Comparator */
  } B;
} AON_ROMCP_ROMPATCHENL_tag;

typedef union AON_ROMCP_ROMPATCHA_union_tag { /* Address Registers */
  vuint32_t R;
  struct {
    vuint32_t THUMBX:1;                /* THUMB Comparator Select */
    vuint32_t ADDRX:22;                /* Address Comparator Registers */
    vuint32_t _unused_0:9;
  } B;
} AON_ROMCP_ROMPATCHA_tag;

typedef union AON_ROMCP_ROMPATCHSR_union_tag { /* Status Register */
  vuint32_t R;
  struct {
    vuint32_t SOURCE:6;                /* ROMCP Source Number */
    vuint32_t _unused_15:11;
    vuint32_t SW:1;                    /* ROMCP AHB Multiple Address Comparator Match Indicator */
    vuint32_t _unused_0:14;
  } B;
} AON_ROMCP_ROMPATCHSR_tag;

struct AON_ROMCP_tag {
  uint8_t AON_ROMCP_reserved0[180];
  AON_ROMCP_ROMPATCHD_tag ROMPATCHD[16]; /* Data Registers */
  AON_ROMCP_ROMPATCHCNTL_tag ROMPATCHCNTL; /* Control Register */
  AON_ROMCP_ROMPATCHENH_tag ROMPATCHENH; /* Enable Register High */
  AON_ROMCP_ROMPATCHENL_tag ROMPATCHENL; /* Enable Register Low */
  AON_ROMCP_ROMPATCHA_tag ROMPATCHA[32]; /* Address Registers */
  uint8_t AON_ROMCP_reserved1[136];
  AON_ROMCP_ROMPATCHSR_tag ROMPATCHSR; /* Status Register */
};


/* ============================================================================
   =============================== Module: AON_SAI ============================
   ============================================================================ */

typedef union AON_SAI_VERID_union_tag { /* Version ID */
  vuint32_t R;
  struct {
    vuint32_t FEATURE:16;              /* Feature Specification Number */
    vuint32_t MINOR:8;                 /* Minor Version Number */
    vuint32_t MAJOR:8;                 /* Major Version Number */
  } B;
} AON_SAI_VERID_tag;

typedef union AON_SAI_PARAM_union_tag { /* Parameter */
  vuint32_t R;
  struct {
    vuint32_t DATALINE:4;              /* Number of Data Lines */
    vuint32_t _unused_24:4;
    vuint32_t FIFO:4;                  /* FIFO Size */
    vuint32_t _unused_16:4;
    vuint32_t FRAME:4;                 /* Frame Size */
    vuint32_t _unused_0:12;
  } B;
} AON_SAI_PARAM_tag;

typedef union AON_SAI_TCSR_union_tag { /* Transmit Control */
  vuint32_t R;
  struct {
    vuint32_t FRDE:1;                  /* FIFO Request DMA Enable */
    vuint32_t FWDE:1;                  /* FIFO Warning DMA Enable */
    vuint32_t _unused_27:3;
    vuint32_t _unused_24:3;
    vuint32_t FRIE:1;                  /* FIFO Request Interrupt Enable */
    vuint32_t FWIE:1;                  /* FIFO Warning Interrupt Enable */
    vuint32_t FEIE:1;                  /* FIFO Error Interrupt Enable */
    vuint32_t SEIE:1;                  /* Sync Error Interrupt Enable */
    vuint32_t WSIE:1;                  /* Word Start Interrupt Enable */
    vuint32_t _unused_16:3;
    vuint32_t FRF:1;                   /* FIFO Request Flag */
    vuint32_t FWF:1;                   /* FIFO Warning Flag */
    vuint32_t FEF:1;                   /* FIFO Error Flag */
    vuint32_t SEF:1;                   /* Sync Error Flag */
    vuint32_t WSF:1;                   /* Word Start Flag */
    vuint32_t _unused_8:3;
    vuint32_t SR:1;                    /* Software Reset */
    vuint32_t FR:1;                    /* FIFO Reset */
    vuint32_t _unused_4:2;
    vuint32_t BCE:1;                   /* Bit Clock Enable */
    vuint32_t _unused_2:1;
    vuint32_t _unused_1:1;             /* Reserved */
    vuint32_t TE:1;                    /* Transmitter Enable */
  } B;
} AON_SAI_TCSR_tag;

typedef union AON_SAI_TCR1_union_tag { /* Transmit Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t TFW:5;                   /* Transmit FIFO Watermark */
    vuint32_t _unused_0:27;
  } B;
} AON_SAI_TCR1_tag;

typedef union AON_SAI_TCR2_union_tag { /* Transmit Configuration 2 */
  vuint32_t R;
  struct {
    vuint32_t DIV:8;                   /* Bit Clock Divide */
    vuint32_t _unused_9:15;
    vuint32_t BYP:1;                   /* Bit Clock Bypass */
    vuint32_t BCD:1;                   /* Bit Clock Direction */
    vuint32_t BCP:1;                   /* Bit Clock Polarity */
    vuint32_t MSEL:2;                  /* MCLK Select */
    vuint32_t BCI:1;                   /* Bit Clock Input */
    vuint32_t BCS:1;                   /* Bit Clock Swap */
    vuint32_t SYNC:1;                  /* Synchronous Mode */
    vuint32_t _unused_0:1;
  } B;
} AON_SAI_TCR2_tag;

typedef union AON_SAI_TCR3_union_tag { /* Transmit Configuration 3 */
  vuint32_t R;
  struct {
    vuint32_t WDFL:5;                  /* Word Flag Configuration */
    vuint32_t _unused_16:11;
    vuint32_t TCE:2;                   /* Transmit Channel Enable */
    vuint32_t _unused_8:6;
    vuint32_t CFR:2;                   /* Channel FIFO Reset */
    vuint32_t _unused_0:6;
  } B;
} AON_SAI_TCR3_tag;

typedef union AON_SAI_TCR4_union_tag { /* Transmit Configuration 4 */
  vuint32_t R;
  struct {
    vuint32_t FSD:1;                   /* Frame Sync Direction */
    vuint32_t FSP:1;                   /* Frame Sync Polarity */
    vuint32_t ONDEM:1;                 /* On-Demand Mode */
    vuint32_t FSE:1;                   /* Frame Sync Early */
    vuint32_t MF:1;                    /* MSB First */
    vuint32_t CHMOD:1;                 /* Channel Mode */
    vuint32_t _unused_24:2;
    vuint32_t SYWD:5;                  /* Sync Width */
    vuint32_t _unused_16:3;
    vuint32_t FRSZ:5;                  /* Frame size */
    vuint32_t _unused_8:3;
    vuint32_t FPACK:2;                 /* FIFO Packing Mode */
    vuint32_t FCOMB:2;                 /* FIFO Combine Mode */
    vuint32_t FCONT:1;                 /* FIFO Continue on Error */
    vuint32_t _unused_0:3;
  } B;
} AON_SAI_TCR4_tag;

typedef union AON_SAI_TCR5_union_tag { /* Transmit Configuration 5 */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t FBT:5;                   /* First Bit Shifted */
    vuint32_t _unused_16:3;
    vuint32_t W0W:5;                   /* Word 0 Width */
    vuint32_t _unused_8:3;
    vuint32_t WNW:5;                   /* Word N Width */
    vuint32_t _unused_0:3;
  } B;
} AON_SAI_TCR5_tag;

typedef union AON_SAI_TDR_union_tag {  /* Transmit Data */
  vuint32_t R;
  struct {
    vuint32_t TDR:32;                  /* Transmit Data */
  } B;
} AON_SAI_TDR_tag;

typedef union AON_SAI_TFR_union_tag {  /* Transmit FIFO */
  vuint32_t R;
  struct {
    vuint32_t RFP:6;                   /* Read FIFO Pointer */
    vuint32_t _unused_16:10;
    vuint32_t WFP:6;                   /* Write FIFO Pointer */
    vuint32_t _unused_1:9;
    vuint32_t WCP:1;                   /* Write Channel Pointer */
  } B;
} AON_SAI_TFR_tag;

typedef union AON_SAI_TMR_union_tag {  /* Transmit Mask */
  vuint32_t R;
  struct {
    vuint32_t TWM:32;                  /* Transmit Word Mask */
  } B;
} AON_SAI_TMR_tag;

typedef union AON_SAI_TTCR_union_tag { /* Transmit Timestamp Control */
  vuint32_t R;
  struct {
    vuint32_t TSEN:1;                  /* Timestamp Enable */
    vuint32_t TSINC:1;                 /* Timestamp Increment */
    vuint32_t TSSEL:2;                 /* Timestamp Select */
    vuint32_t _unused_24:4;
    vuint32_t RTSC:1;                  /* Reset Timestamp Counter */
    vuint32_t RBC:1;                   /* Reset Bit Counter */
    vuint32_t _unused_0:22;
  } B;
} AON_SAI_TTCR_tag;

typedef union AON_SAI_TTSR_union_tag { /* Transmit Timestamp */
  vuint32_t R;
  struct {
    vuint32_t TSC:32;                  /* Timestamp Counter */
  } B;
} AON_SAI_TTSR_tag;

typedef union AON_SAI_TBCR_union_tag { /* Transmit Bit Count */
  vuint32_t R;
  struct {
    vuint32_t BCNT:32;                 /* Bit Counter */
  } B;
} AON_SAI_TBCR_tag;

typedef union AON_SAI_TBCTR_union_tag { /* Transmit Bit Count Timestamp */
  vuint32_t R;
  struct {
    vuint32_t BCTS:32;                 /* Bit Timestamp */
  } B;
} AON_SAI_TBCTR_tag;

typedef union AON_SAI_RCSR_union_tag { /* Receive Control */
  vuint32_t R;
  struct {
    vuint32_t FRDE:1;                  /* FIFO Request DMA Enable */
    vuint32_t FWDE:1;                  /* FIFO Warning DMA Enable */
    vuint32_t _unused_27:3;
    vuint32_t _unused_24:3;
    vuint32_t FRIE:1;                  /* FIFO Request Interrupt Enable */
    vuint32_t FWIE:1;                  /* FIFO Warning Interrupt Enable */
    vuint32_t FEIE:1;                  /* FIFO Error Interrupt Enable */
    vuint32_t SEIE:1;                  /* Sync Error Interrupt Enable */
    vuint32_t WSIE:1;                  /* Word Start Interrupt Enable */
    vuint32_t _unused_16:3;
    vuint32_t FRF:1;                   /* FIFO Request Flag */
    vuint32_t FWF:1;                   /* FIFO Warning Flag */
    vuint32_t FEF:1;                   /* FIFO Error Flag */
    vuint32_t SEF:1;                   /* Sync Error Flag */
    vuint32_t WSF:1;                   /* Word Start Flag */
    vuint32_t _unused_8:3;
    vuint32_t SR:1;                    /* Software Reset */
    vuint32_t FR:1;                    /* FIFO Reset */
    vuint32_t _unused_4:2;
    vuint32_t BCE:1;                   /* Bit Clock Enable */
    vuint32_t _unused_2:1;
    vuint32_t _unused_1:1;             /* Reserved */
    vuint32_t RE:1;                    /* Receiver Enable */
  } B;
} AON_SAI_RCSR_tag;

typedef union AON_SAI_RCR1_union_tag { /* Receive Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t RFW:5;                   /* Receive FIFO Watermark */
    vuint32_t _unused_0:27;
  } B;
} AON_SAI_RCR1_tag;

typedef union AON_SAI_RCR2_union_tag { /* Receive Configuration 2 */
  vuint32_t R;
  struct {
    vuint32_t DIV:8;                   /* Bit Clock Divide */
    vuint32_t _unused_9:15;
    vuint32_t BYP:1;                   /* Bit Clock Bypass */
    vuint32_t BCD:1;                   /* Bit Clock Direction */
    vuint32_t BCP:1;                   /* Bit Clock Polarity */
    vuint32_t MSEL:2;                  /* MCLK Select */
    vuint32_t BCI:1;                   /* Bit Clock Input */
    vuint32_t BCS:1;                   /* Bit Clock Swap */
    vuint32_t SYNC:1;                  /* Synchronous Mode */
    vuint32_t _unused_0:1;
  } B;
} AON_SAI_RCR2_tag;

typedef union AON_SAI_RCR3_union_tag { /* Receive Configuration 3 */
  vuint32_t R;
  struct {
    vuint32_t WDFL:5;                  /* Word Flag Configuration */
    vuint32_t _unused_16:11;
    vuint32_t RCE:2;                   /* Receive Channel Enable */
    vuint32_t _unused_8:6;
    vuint32_t CFR:2;                   /* Channel FIFO Reset */
    vuint32_t _unused_0:6;
  } B;
} AON_SAI_RCR3_tag;

typedef union AON_SAI_RCR4_union_tag { /* Receive Configuration 4 */
  vuint32_t R;
  struct {
    vuint32_t FSD:1;                   /* Frame Sync Direction */
    vuint32_t FSP:1;                   /* Frame Sync Polarity */
    vuint32_t ONDEM:1;                 /* On-Demand Mode */
    vuint32_t FSE:1;                   /* Frame Sync Early */
    vuint32_t MF:1;                    /* MSB First */
    vuint32_t _unused_26:1;            /* Reserved */
    vuint32_t _unused_24:2;
    vuint32_t SYWD:5;                  /* Sync Width */
    vuint32_t _unused_16:3;
    vuint32_t FRSZ:5;                  /* Frame Size */
    vuint32_t _unused_8:3;
    vuint32_t FPACK:2;                 /* FIFO Packing Mode */
    vuint32_t FCOMB:2;                 /* FIFO Combine Mode */
    vuint32_t FCONT:1;                 /* FIFO Continue on Error */
    vuint32_t _unused_0:3;
  } B;
} AON_SAI_RCR4_tag;

typedef union AON_SAI_RCR5_union_tag { /* Receive Configuration 5 */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t FBT:5;                   /* First Bit Shifted */
    vuint32_t _unused_16:3;
    vuint32_t W0W:5;                   /* Word 0 Width */
    vuint32_t _unused_8:3;
    vuint32_t WNW:5;                   /* Word N Width */
    vuint32_t _unused_0:3;
  } B;
} AON_SAI_RCR5_tag;

typedef union AON_SAI_RDR_union_tag {  /* Receive Data */
  vuint32_t R;
  struct {
    vuint32_t RDR:32;                  /* Receive Data */
  } B;
} AON_SAI_RDR_tag;

typedef union AON_SAI_RFR_union_tag {  /* Receive FIFO */
  vuint32_t R;
  struct {
    vuint32_t RFP:6;                   /* Read FIFO Pointer */
    vuint32_t _unused_17:9;
    vuint32_t RCP:1;                   /* Read Channel Pointer */
    vuint32_t WFP:6;                   /* Write FIFO Pointer */
    vuint32_t _unused_0:10;
  } B;
} AON_SAI_RFR_tag;

typedef union AON_SAI_RMR_union_tag {  /* Receive Mask */
  vuint32_t R;
  struct {
    vuint32_t RWM:32;                  /* Receive Word Mask */
  } B;
} AON_SAI_RMR_tag;

typedef union AON_SAI_RTCR_union_tag { /* Receive Timestamp Control */
  vuint32_t R;
  struct {
    vuint32_t TSEN:1;                  /* Timestamp Enable */
    vuint32_t TSINC:1;                 /* Timestamp Increment */
    vuint32_t TSSEL:2;                 /* Timestamp Select */
    vuint32_t _unused_24:4;
    vuint32_t RTSC:1;                  /* Reset Timestamp Counter */
    vuint32_t RBC:1;                   /* Reset Bit Counter */
    vuint32_t _unused_0:22;
  } B;
} AON_SAI_RTCR_tag;

typedef union AON_SAI_RTSR_union_tag { /* Receive Timestamp */
  vuint32_t R;
  struct {
    vuint32_t TSC:32;                  /* Timestamp Counter */
  } B;
} AON_SAI_RTSR_tag;

typedef union AON_SAI_RBCR_union_tag { /* Receive Bit Count */
  vuint32_t R;
  struct {
    vuint32_t BCNT:32;                 /* Bit Counter */
  } B;
} AON_SAI_RBCR_tag;

typedef union AON_SAI_RBCTR_union_tag { /* Receive Bit Count Timestamp */
  vuint32_t R;
  struct {
    vuint32_t BCTS:32;                 /* Bit Timestamp */
  } B;
} AON_SAI_RBCTR_tag;

typedef union AON_SAI_MCR_union_tag {  /* MCLK Control */
  vuint32_t R;
  struct {
    vuint32_t DIV:8;                   /* MCLK Post Divide */
    vuint32_t _unused_9:15;
    vuint32_t DIVEN:1;                 /* MCLK Post Divide Enable */
    vuint32_t MSEL:2;                  /* MCLK Select */
    vuint32_t _unused_2:4;
    vuint32_t MOE:1;                   /* MCLK Output Enable */
    vuint32_t _unused_0:1;
  } B;
} AON_SAI_MCR_tag;

struct AON_SAI_tag {
  AON_SAI_VERID_tag VERID;             /* Version ID */
  AON_SAI_PARAM_tag PARAM;             /* Parameter */
  AON_SAI_TCSR_tag TCSR;               /* Transmit Control */
  AON_SAI_TCR1_tag TCR1;               /* Transmit Configuration 1 */
  AON_SAI_TCR2_tag TCR2;               /* Transmit Configuration 2 */
  AON_SAI_TCR3_tag TCR3;               /* Transmit Configuration 3 */
  AON_SAI_TCR4_tag TCR4;               /* Transmit Configuration 4 */
  AON_SAI_TCR5_tag TCR5;               /* Transmit Configuration 5 */
  AON_SAI_TDR_tag TDR[2];              /* Transmit Data */
  uint8_t AON_SAI_reserved0[24];
  AON_SAI_TFR_tag TFR[2];              /* Transmit FIFO */
  uint8_t AON_SAI_reserved1[24];
  AON_SAI_TMR_tag TMR;                 /* Transmit Mask */
  uint8_t AON_SAI_reserved2[12];
  AON_SAI_TTCR_tag TTCR;               /* Transmit Timestamp Control */
  AON_SAI_TTSR_tag TTSR;               /* Transmit Timestamp */
  AON_SAI_TBCR_tag TBCR;               /* Transmit Bit Count */
  AON_SAI_TBCTR_tag TBCTR;             /* Transmit Bit Count Timestamp */
  uint8_t AON_SAI_reserved3[8];
  AON_SAI_RCSR_tag RCSR;               /* Receive Control */
  AON_SAI_RCR1_tag RCR1;               /* Receive Configuration 1 */
  AON_SAI_RCR2_tag RCR2;               /* Receive Configuration 2 */
  AON_SAI_RCR3_tag RCR3;               /* Receive Configuration 3 */
  AON_SAI_RCR4_tag RCR4;               /* Receive Configuration 4 */
  AON_SAI_RCR5_tag RCR5;               /* Receive Configuration 5 */
  AON_SAI_RDR_tag RDR[2];              /* Receive Data */
  uint8_t AON_SAI_reserved4[24];
  AON_SAI_RFR_tag RFR[2];              /* Receive FIFO */
  uint8_t AON_SAI_reserved5[24];
  AON_SAI_RMR_tag RMR;                 /* Receive Mask */
  uint8_t AON_SAI_reserved6[12];
  AON_SAI_RTCR_tag RTCR;               /* Receive Timestamp Control */
  AON_SAI_RTSR_tag RTSR;               /* Receive Timestamp */
  AON_SAI_RBCR_tag RBCR;               /* Receive Bit Count */
  AON_SAI_RBCTR_tag RBCTR;             /* Receive Bit Count Timestamp */
  AON_SAI_MCR_tag MCR;                 /* MCLK Control */
};


/* ============================================================================
   =============================== Module: AON_SEMA42 =========================
   ============================================================================ */

typedef union AON_SEMA42_GATE_union_tag { /* Gate */
  vuint8_t R;
  struct {
    vuint8_t GTFSM:4;                  /* Gate Finite State Machine */
    vuint8_t _unused_0:4;              /* Reserved */
  } B;
} AON_SEMA42_GATE_tag;

typedef union AON_SEMA42_RSTGT_R_union_tag { /* Reset Gate Read */
  vuint16_t R;
  struct {
    vuint16_t RSTGTN:8;                /* Reset Gate Number */
    vuint16_t RSTGMS:4;                /* Reset Gate Domain */
    vuint16_t RSTGSM:2;                /* Reset Gate Finite State Machine */
    vuint16_t _unused_0:2;
  } B;
} AON_SEMA42_RSTGT_R_tag;

typedef union AON_SEMA42_RSTGT_W_union_tag { /* Reset Gate Write */
  vuint16_t R;
  struct {
    vuint16_t RSTGTN:8;                /* Reset Gate Number */
    vuint16_t RSTGDP:8;                /* Reset Gate Data Pattern */
  } B;
} AON_SEMA42_RSTGT_W_tag;

typedef union AON_SEMA42_RSTGT_union_tag {
  AON_SEMA42_RSTGT_R_tag R;            /* Reset Gate Read */
  AON_SEMA42_RSTGT_W_tag W;            /* Reset Gate Write */
} AON_SEMA42_RSTGT_tag;

struct AON_SEMA42_tag {
  AON_SEMA42_GATE_tag GATE[64];        /* Gate */
  uint8_t AON_SEMA42_reserved0[2];
  AON_SEMA42_RSTGT_tag RSTGT;
};


/* ============================================================================
   =============================== Module: AON_SYSPM ==========================
   ============================================================================ */

typedef union AON_SYSPM_PMCR_PMCR_union_tag { /* Performance Monitor Control */
  vuint32_t R;
  struct {
    vuint32_t MENB:1;                  /* Module Is Enabled */
    vuint32_t SSC:3;                   /* Start and Stop Control */
    vuint32_t CMODE:2;                 /* Count Mode */
    vuint32_t DCIFSH:1;                /* Disable Counters if Stopped or Halted */
    vuint32_t RICTR:1;                 /* Reset Instruction Counter */
    vuint32_t RECTR1:1;                /* Reset Event Counter 1 */
    vuint32_t RECTR2:1;                /* Reset Event Counter 2 */
    vuint32_t RECTR3:1;                /* Reset Event Counter 3 */
    vuint32_t SELEVT1:7;               /* Select Event 1 */
    vuint32_t SELEVT2:7;               /* Select Event 2 */
    vuint32_t SELEVT3:7;               /* Select Event 3 */
  } B;
} AON_SYSPM_PMCR_PMCR_tag;

typedef union AON_SYSPM_PMCR_PMICTR_HI_union_tag { /* Performance Monitor Instruction Counter */
  vuint8_t R;
  struct {
    vuint8_t ICTR:8;                   /* Instruction Counter */
  } B;
} AON_SYSPM_PMCR_PMICTR_HI_tag;

typedef union AON_SYSPM_PMCR_PMICTR_LO_union_tag { /* Performance Monitor Instruction Counter */
  vuint32_t R;
  struct {
    vuint32_t ICTR:32;                 /* Instruction Counter */
  } B;
} AON_SYSPM_PMCR_PMICTR_LO_tag;

typedef union AON_SYSPM_PMCR_PMECTR_HI_union_tag { /* Performance Monitor Event Counter */
  vuint8_t R;
  struct {
    vuint8_t ECTR:8;                   /* Event Counter */
  } B;
} AON_SYSPM_PMCR_PMECTR_HI_tag;

typedef union AON_SYSPM_PMCR_PMECTR_LO_union_tag { /* Performance Monitor Event Counter */
  vuint32_t R;
  struct {
    vuint32_t ECTR:32;                 /* Event Counter */
  } B;
} AON_SYSPM_PMCR_PMECTR_LO_tag;

typedef struct AON_SYSPM_PMCR_PMECTR_struct_tag {
  AON_SYSPM_PMCR_PMECTR_HI_tag HI;     /* Performance Monitor Event Counter */
  uint8_t PMECTR_reserved0[3];
  AON_SYSPM_PMCR_PMECTR_LO_tag LO;     /* Performance Monitor Event Counter */
} AON_SYSPM_PMCR_PMECTR_tag;

typedef struct AON_SYSPM_PMCR_struct_tag {
  AON_SYSPM_PMCR_PMCR_tag PMCR;        /* Performance Monitor Control */
  uint8_t PMCR_reserved0[12];
  AON_SYSPM_PMCR_PMICTR_HI_tag PMICTR_HI; /* Performance Monitor Instruction Counter */
  uint8_t PMCR_reserved1[3];
  AON_SYSPM_PMCR_PMICTR_LO_tag PMICTR_LO; /* Performance Monitor Instruction Counter */
  AON_SYSPM_PMCR_PMECTR_tag PMECTR[3];
} AON_SYSPM_PMCR_tag;

struct AON_SYSPM_tag {
  AON_SYSPM_PMCR_tag PMCR[1];
};


/* ============================================================================
   =============================== Module: AON_TCU ============================
   ============================================================================ */

typedef union AON_TCU_TCU_MAGIC_KW__MAGIC_KW0_union_tag { /* Magic KW0 */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* 32-Bit Magic KW0 used in conjuction with Magic KW1 to unlock the writes to test mode registers (Value is 0x12345678) */
  } B;
} AON_TCU_TCU_MAGIC_KW__MAGIC_KW0_tag;

typedef union AON_TCU_TCU_MAGIC_KW__MAGIC_KW1_union_tag { /* Magic KW1 */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* 32-Bit Magic KW1 used in conjuction with Magic KW0 to unlock the writes to test mode registers (Value - 0x87654321) */
  } B;
} AON_TCU_TCU_MAGIC_KW__MAGIC_KW1_tag;

typedef union AON_TCU_TCU_CRR_IPT_CORE_HOLD_union_tag { /* ipc_core_hold */
  vuint32_t R;
  struct {
    vuint32_t IPT_CORE_HOLD:1;         /* ipt_core_hold */
    vuint32_t _unused_0:31;
  } B;
} AON_TCU_TCU_CRR_IPT_CORE_HOLD_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__union_tag { /* MCT Test Mode CTRL Reg */
  vuint32_t R;
  struct {
    vuint32_t MCT_TEST_MODE:1;         /* For using MCT test mode through the TCU, this bit has to be set first which enables all the muxes related to this test mode */
    vuint32_t MCT_LAUNCH_BIST_START:1; /* Signal in the MCT that is basically used to start all the BIST's selected through mct_launch_bistsel registers */
    vuint32_t MCT_LAUNCH_CREP:1;       /* Signal in the MCT used to calculate repair while running the BIST incase of any failure */
    vuint32_t _unused_0:29;
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL0_union_tag { /* MCT Launch ALGOSEL0 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Select the required algorithm */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL0_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL1_union_tag { /* MCT Launch ALGOSEL1 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Select the required algorithm */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL1_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL0_union_tag { /* MCT Launch BISTSEL0 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Selects BIST's [31:0] that will be run */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL0_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL1_union_tag { /* MCT Launch BISTSEL1 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Selects BIST's [63:32] that will be run */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL1_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL2_union_tag { /* MCT Launch BISTSEL2 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Selects BIST's [95:64] that will be run */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL2_tag;

typedef union AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL3_union_tag { /* MCT Launch BISTSEL2 Reg */
  vuint32_t R;
  struct {
    vuint32_t OUT:32;                  /* Selects BIST's [127:96] that will be run */
  } B;
} AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL3_tag;

typedef union AON_TCU_TCU_MTR_DIRECT_BIST_ACCESS__union_tag { /* Direct BIST Access CTRL Reg */
  vuint32_t R;
  struct {
    vuint32_t BIST_MODE:1;             /* bist mode indication */
    vuint32_t BIST_BURNIN_LOOP_MODE:1; /* Test mode bit to qualify the BIST start in Burn-in mode */
    vuint32_t BIST_BURNIN_LOOP_START:1; /* start burnin BIST signal */
    vuint32_t _unused_0:29;
  } B;
} AON_TCU_TCU_MTR_DIRECT_BIST_ACCESS__tag;

typedef union AON_TCU_TCU_PLL_COUNTER_union_tag { /* tcu pll counter reg */
  vuint32_t R;
  struct {
    vuint32_t PLL_COUNT_RST_N:1;       /* pll count reset */
    vuint32_t PLL_COUNT_START:1;       /* pll count start */
    vuint32_t PLL_COUNT_DIV_EN:1;      /* pll count div en */
    vuint32_t PLL_COUNT_CLK_SEL:3;     /* pll count clk sel */
    vuint32_t _unused_24:2;
    vuint32_t PLL_COUNT_REF_VAL:8;     /* pll count ref val */
    vuint32_t PLL_COUNT_CNT:16;        /* pll count cnt */
  } B;
} AON_TCU_TCU_PLL_COUNTER_tag;

typedef union AON_TCU_TCU_DFT_FUSE_union_tag { /* observe MIX fuse state and override it */
  vuint32_t R;
  struct {
    vuint32_t TCU_DFT_FUSE_DISABLE:1;  /* dft fuse disable */
    vuint32_t TCU_FUSE_OBS:5;          /* fuse observation */
    vuint32_t _unused_0:26;
  } B;
} AON_TCU_TCU_DFT_FUSE_tag;

struct AON_TCU_tag {
  uint8_t AON_TCU_reserved0[1024];
  AON_TCU_TCU_MAGIC_KW__MAGIC_KW0_tag TCU_MAGIC_KW__MAGIC_KW0; /* Magic KW0 */
  uint8_t AON_TCU_reserved1[12];
  AON_TCU_TCU_MAGIC_KW__MAGIC_KW1_tag TCU_MAGIC_KW__MAGIC_KW1; /* Magic KW1 */
  uint8_t AON_TCU_reserved2[348];
  AON_TCU_TCU_CRR_IPT_CORE_HOLD_tag TCU_CRR_IPT_CORE_HOLD; /* ipc_core_hold */
  uint8_t AON_TCU_reserved3[140];
  AON_TCU_TCU_MTR_MCT_ACCESS__tag TCU_MTR_MCT_ACCESS_; /* MCT Test Mode CTRL Reg */
  uint8_t AON_TCU_reserved4[12];
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL0_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL0; /* MCT Launch ALGOSEL0 Reg */
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL1_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL1; /* MCT Launch ALGOSEL1 Reg */
  uint8_t AON_TCU_reserved5[8];
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL0_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL0; /* MCT Launch BISTSEL0 Reg */
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL1_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL1; /* MCT Launch BISTSEL1 Reg */
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL2_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL2; /* MCT Launch BISTSEL2 Reg */
  AON_TCU_TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL3_tag TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL3; /* MCT Launch BISTSEL2 Reg */
  uint8_t AON_TCU_reserved6[32];
  AON_TCU_TCU_MTR_DIRECT_BIST_ACCESS__tag TCU_MTR_DIRECT_BIST_ACCESS_; /* Direct BIST Access CTRL Reg */
  uint8_t AON_TCU_reserved7[1452];
  AON_TCU_TCU_PLL_COUNTER_tag TCU_PLL_COUNTER; /* tcu pll counter reg */
  uint8_t AON_TCU_reserved8[60];
  AON_TCU_TCU_DFT_FUSE_tag TCU_DFT_FUSE; /* observe MIX fuse state and override it */
};


/* ============================================================================
   =============================== Module: AON_TRDC_MGR =======================
   ============================================================================ */

typedef union AON_TRDC_MGR_TRDC_CR_union_tag { /* TRDC Register */
  vuint32_t R;
  struct {
    vuint32_t GVLDM:1;                 /* Global Valid for Domain Assignment Controllers */
    vuint32_t HRL:4;                   /* Hardware Revision Level */
    vuint32_t _unused_23:4;
    vuint32_t _unused_18:5;
    vuint32_t GVLDB:1;                 /* Global Valid for Memory Block Checkers */
    vuint32_t GVLDR:1;                 /* Global Valid for Memory Region Checkers */
    vuint32_t _unused_12:4;
    vuint32_t _unused_2:10;
    vuint32_t LK1:1;                   /* Lock Status */
    vuint32_t _unused_0:1;
  } B;
} AON_TRDC_MGR_TRDC_CR_tag;

typedef union AON_TRDC_MGR_TRDC_HWCFG0_union_tag { /* TRDC Hardware Configuration Register 0 */
  vuint32_t R;
  struct {
    vuint32_t NDID:5;                  /* Number of domains */
    vuint32_t _unused_24:3;
    vuint32_t NMSTR:8;                 /* Number of bus masters */
    vuint32_t NMBC:4;                  /* Number of MBCs */
    vuint32_t _unused_8:4;
    vuint32_t NMRC:5;                  /* Number of MRCs */
    vuint32_t MID:3;                   /* Module ID */
  } B;
} AON_TRDC_MGR_TRDC_HWCFG0_tag;

typedef union AON_TRDC_MGR_TRDC_HWCFG1_union_tag { /* TRDC Hardware Configuration Register 1 */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier number */
    vuint32_t _unused_0:28;
  } B;
} AON_TRDC_MGR_TRDC_HWCFG1_tag;

typedef union AON_TRDC_MGR_TRDC_HWCFG2_union_tag { /* TRDC Hardware Configuration Register 2 */
  vuint32_t R;
  struct {
    vuint32_t PIDPN:32;                /* Process identifier present */
  } B;
} AON_TRDC_MGR_TRDC_HWCFG2_tag;

typedef union AON_TRDC_MGR_TRDC_HWCFG3_union_tag { /* TRDC Hardware Configuration Register 3 */
  vuint32_t R;
  struct {
    vuint32_t PIDPN:32;                /* Process identifier present */
  } B;
} AON_TRDC_MGR_TRDC_HWCFG3_tag;

typedef union AON_TRDC_MGR_DACFG0_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG0_tag;

typedef union AON_TRDC_MGR_DACFG1_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG1_tag;

typedef union AON_TRDC_MGR_DACFG2_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG2_tag;

typedef union AON_TRDC_MGR_DACFG3_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG3_tag;

typedef union AON_TRDC_MGR_DACFG4_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG4_tag;

typedef union AON_TRDC_MGR_DACFG5_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG5_tag;

typedef union AON_TRDC_MGR_DACFG6_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG6_tag;

typedef union AON_TRDC_MGR_DACFG7_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG7_tag;

typedef union AON_TRDC_MGR_DACFG8_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG8_tag;

typedef union AON_TRDC_MGR_DACFG9_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG9_tag;

typedef union AON_TRDC_MGR_DACFG10_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG10_tag;

typedef union AON_TRDC_MGR_DACFG11_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG11_tag;

typedef union AON_TRDC_MGR_DACFG12_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG12_tag;

typedef union AON_TRDC_MGR_DACFG13_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG13_tag;

typedef union AON_TRDC_MGR_DACFG14_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG14_tag;

typedef union AON_TRDC_MGR_DACFG15_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG15_tag;

typedef union AON_TRDC_MGR_DACFG16_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG16_tag;

typedef union AON_TRDC_MGR_DACFG17_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG17_tag;

typedef union AON_TRDC_MGR_DACFG18_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG18_tag;

typedef union AON_TRDC_MGR_DACFG19_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG19_tag;

typedef union AON_TRDC_MGR_DACFG20_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG20_tag;

typedef union AON_TRDC_MGR_DACFG21_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG21_tag;

typedef union AON_TRDC_MGR_DACFG22_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG22_tag;

typedef union AON_TRDC_MGR_DACFG23_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG23_tag;

typedef union AON_TRDC_MGR_DACFG24_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG24_tag;

typedef union AON_TRDC_MGR_DACFG25_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG25_tag;

typedef union AON_TRDC_MGR_DACFG26_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG26_tag;

typedef union AON_TRDC_MGR_DACFG27_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG27_tag;

typedef union AON_TRDC_MGR_DACFG28_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG28_tag;

typedef union AON_TRDC_MGR_DACFG29_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG29_tag;

typedef union AON_TRDC_MGR_DACFG30_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG30_tag;

typedef union AON_TRDC_MGR_DACFG31_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG31_tag;

typedef union AON_TRDC_MGR_DACFG32_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG32_tag;

typedef union AON_TRDC_MGR_DACFG33_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG33_tag;

typedef union AON_TRDC_MGR_DACFG34_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG34_tag;

typedef union AON_TRDC_MGR_DACFG35_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG35_tag;

typedef union AON_TRDC_MGR_DACFG36_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG36_tag;

typedef union AON_TRDC_MGR_DACFG37_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG37_tag;

typedef union AON_TRDC_MGR_DACFG38_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG38_tag;

typedef union AON_TRDC_MGR_DACFG39_union_tag { /* Domain Assignment Configuration Register */
  vuint8_t R;
  struct {
    vuint8_t NMDAR:4;                  /* Number of master domain assignment registers for bus master m */
    vuint8_t _unused_1:3;
    vuint8_t NCM:1;                    /* Non-CPU Master */
  } B;
} AON_TRDC_MGR_DACFG39_tag;

typedef union AON_TRDC_MGR_TRDC_IDAU_CR_union_tag { /* TRDC IDAU Control Register */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_29:2;
    vuint32_t CFGSECEXT:1;             /* Configure Security Extension */
    vuint32_t MPUSDIS:1;               /* Secure Memory Protection Unit Disabled */
    vuint32_t MPUNSDIS:1;              /* NonSecure Memory Protection Unit Disabled */
    vuint32_t SAUDIS:1;                /* Security Attribution Unit Disable */
    vuint32_t _unused_24:1;
    vuint32_t LKSVTAIRCR:1;            /* Lock Secure VTOR, Application interrupt and Reset Control Registers */
    vuint32_t LKNSVTOR:1;              /* Lock Nonsecure Vector Table Offset Register */
    vuint32_t LKSMPU:1;                /* Lock Secure MPU */
    vuint32_t LKNSMPU:1;               /* Lock Nonsecure MPU */
    vuint32_t LKSAU:1;                 /* Lock SAU */
    vuint32_t _unused_16:3;
    vuint32_t _unused_13:3;
    vuint32_t _unused_1:12;
    vuint32_t PCURRNS:1;               /* Processor current security */
  } B;
} AON_TRDC_MGR_TRDC_IDAU_CR_tag;

typedef union AON_TRDC_MGR_TRDC_FLW_CTL_union_tag { /* TRDC FLW Control */
  vuint32_t R;
  struct {
    vuint32_t _unused_2:30;
    vuint32_t LK:1;                    /* Lock bit */
    vuint32_t V:1;                     /* Valid bit */
  } B;
} AON_TRDC_MGR_TRDC_FLW_CTL_tag;

typedef union AON_TRDC_MGR_TRDC_FLW_PBASE_union_tag { /* TRDC FLW Physical Base */
  vuint32_t R;
  struct {
    vuint32_t PBASE:32;                /* Physical base address */
  } B;
} AON_TRDC_MGR_TRDC_FLW_PBASE_tag;

typedef union AON_TRDC_MGR_TRDC_FLW_ABASE_union_tag { /* TRDC FLW Array Base */
  vuint32_t R;
  struct {
    vuint32_t _unused_17:15;
    vuint32_t ABASE_L:7;               /* Array base address low */
    vuint32_t ABASE_H:10;              /* Array base address high */
  } B;
} AON_TRDC_MGR_TRDC_FLW_ABASE_tag;

typedef union AON_TRDC_MGR_TRDC_FLW_BCNT_union_tag { /* TRDC FLW Block Count */
  vuint32_t R;
  struct {
    vuint32_t BCNT:15;                 /* Block Count */
    vuint32_t _unused_0:17;
  } B;
} AON_TRDC_MGR_TRDC_FLW_BCNT_tag;

typedef union AON_TRDC_MGR_TRDC_FDID_union_tag { /* TRDC Fault Domain ID */
  vuint32_t R;
  struct {
    vuint32_t FDID:4;                  /* Domain ID of Faulted Access */
    vuint32_t _unused_0:28;
  } B;
} AON_TRDC_MGR_TRDC_FDID_tag;

typedef union AON_TRDC_MGR_TRDC_DERRLOC_union_tag { /* TRDC Domain Error Location Register */
  vuint32_t R;
  struct {
    vuint32_t MBCINST:8;               /* MBC instance */
    vuint32_t _unused_16:8;
    vuint32_t MRCINST:16;              /* MRC instance */
  } B;
} AON_TRDC_MGR_TRDC_DERRLOC_tag;

typedef union AON_TRDC_MGR_MBC_DERR_W0_union_tag { /* MBC Domain Error Word0 Register */
  vuint32_t R;
  struct {
    vuint32_t EADDR:32;                /* Error address */
  } B;
} AON_TRDC_MGR_MBC_DERR_W0_tag;

typedef union AON_TRDC_MGR_MBC_DERR_W1_union_tag { /* MBC Domain Error Word1 Register */
  vuint32_t R;
  struct {
    vuint32_t EDID:4;                  /* Error domain identifier */
    vuint32_t _unused_24:4;
    vuint32_t EATR:3;                  /* Error attributes */
    vuint32_t ERW:1;                   /* Error read/write */
    vuint32_t _unused_8:12;
    vuint32_t EPORT:3;                 /* Error port */
    vuint32_t _unused_2:3;
    vuint32_t EST:2;                   /* Error state */
  } B;
} AON_TRDC_MGR_MBC_DERR_W1_tag;

typedef union AON_TRDC_MGR_MBC_DERR_W3_union_tag { /* MBC Domain Error Word3 Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_2:30;
    vuint32_t RECR:2;                  /* Rearm Error Capture Registers */
  } B;
} AON_TRDC_MGR_MBC_DERR_W3_tag;

typedef struct AON_TRDC_MGR_MBC_DERR_struct_tag {
  AON_TRDC_MGR_MBC_DERR_W0_tag W0;     /* MBC Domain Error Word0 Register */
  AON_TRDC_MGR_MBC_DERR_W1_tag W1;     /* MBC Domain Error Word1 Register */
  uint8_t MBC_DERR_reserved0[4];
  AON_TRDC_MGR_MBC_DERR_W3_tag W3;     /* MBC Domain Error Word3 Register */
} AON_TRDC_MGR_MBC_DERR_tag;

typedef union AON_TRDC_MGR_MRC_DERR_W0_union_tag { /* MRC Domain Error Word0 Register */
  vuint32_t R;
  struct {
    vuint32_t EADDR:32;                /* Error address */
  } B;
} AON_TRDC_MGR_MRC_DERR_W0_tag;

typedef union AON_TRDC_MGR_MRC_DERR_W1_union_tag { /* MRC Domain Error Word1 Register */
  vuint32_t R;
  struct {
    vuint32_t EDID:4;                  /* Error domain identifier */
    vuint32_t _unused_24:4;
    vuint32_t EATR:3;                  /* Error attributes */
    vuint32_t ERW:1;                   /* Error read/write */
    vuint32_t _unused_8:12;
    vuint32_t EPORT:3;                 /* Error port */
    vuint32_t _unused_2:3;
    vuint32_t EST:2;                   /* Error state */
  } B;
} AON_TRDC_MGR_MRC_DERR_W1_tag;

typedef union AON_TRDC_MGR_MRC_DERR_W3_union_tag { /* MRC Domain Error Word3 Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_2:30;
    vuint32_t RECR:2;                  /* Rearm Error Capture Registers */
  } B;
} AON_TRDC_MGR_MRC_DERR_W3_tag;

typedef struct AON_TRDC_MGR_MRC_DERR_struct_tag {
  AON_TRDC_MGR_MRC_DERR_W0_tag W0;     /* MRC Domain Error Word0 Register */
  AON_TRDC_MGR_MRC_DERR_W1_tag W1;     /* MRC Domain Error Word1 Register */
  uint8_t MRC_DERR_reserved0[4];
  AON_TRDC_MGR_MRC_DERR_W3_tag W3;     /* MRC Domain Error Word3 Register */
} AON_TRDC_MGR_MRC_DERR_tag;

typedef union AON_TRDC_MGR_PID16_union_tag { /* Process Identifier */
  vuint32_t R;
  struct {
    vuint32_t PID:6;                   /* Process identifier */
    vuint32_t _unused_5:21;
    vuint32_t _unused_4:1;
    vuint32_t _unused_3:1;
    vuint32_t LK2:2;                   /* Lock */
    vuint32_t _unused_0:1;
  } B;
} AON_TRDC_MGR_PID16_tag;

typedef union AON_TRDC_MGR_MDA_W0_0_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_0_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_1_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_1_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_2_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_2_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_3_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_3_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_4_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_4_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_5_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_5_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_6_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_6_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_7_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_7_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_8_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_8_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_9_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_9_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_10_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_10_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_11_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_11_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_12_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_12_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_13_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_13_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_14_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_14_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_15_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_15_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_16_DFMT0_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t DIDS:2;                  /* DID Select */
    vuint32_t PE:2;                    /* Process identifier enable */
    vuint32_t PIDM:6;                  /* Process Identifier Mask */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t PID:6;                   /* Process Identifier */
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_16_DFMT0_tag;

typedef union AON_TRDC_MGR_MDA_W1_16_DFMT0_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t DIDS:2;                  /* DID Select */
    vuint32_t PE:2;                    /* Process identifier enable */
    vuint32_t PIDM:6;                  /* Process Identifier Mask */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t PID:6;                   /* Process Identifier */
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W1_16_DFMT0_tag;

typedef union AON_TRDC_MGR_MDA_W2_16_DFMT0_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t DIDS:2;                  /* DID Select */
    vuint32_t PE:2;                    /* Process identifier enable */
    vuint32_t PIDM:6;                  /* Process Identifier Mask */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t PID:6;                   /* Process Identifier */
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W2_16_DFMT0_tag;

typedef union AON_TRDC_MGR_MDA_W0_17_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_17_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_18_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_18_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_19_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_19_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_20_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_20_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_21_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_21_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_22_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_22_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_23_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_23_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_24_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_24_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_25_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_25_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_26_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_26_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_27_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_27_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_28_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_28_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_29_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_29_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_30_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_30_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_31_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_31_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_32_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_32_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_33_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_33_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_34_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_34_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_35_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_35_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_36_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_36_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_37_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_37_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_38_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_38_DFMT1_tag;

typedef union AON_TRDC_MGR_MDA_W0_39_DFMT1_union_tag { /* DAC Master Domain Assignment Register */
  vuint32_t R;
  struct {
    vuint32_t DID:4;                   /* Domain identifier */
    vuint32_t PA:2;                    /* Privileged attribute */
    vuint32_t SA:2;                    /* Secure attribute */
    vuint32_t DIDB:1;                  /* DID Bypass */
    vuint32_t _unused_18:5;
    vuint32_t _unused_16:2;
    vuint32_t _unused_10:6;
    vuint32_t SID:6;                   /* Stream ID */
    vuint32_t KPA:1;                   /* Known Physical Address */
    vuint32_t DFMT:1;                  /* Domain format */
    vuint32_t LK1:1;                   /* 1-bit Lock */
    vuint32_t VLD:1;                   /* Valid */
  } B;
} AON_TRDC_MGR_MDA_W0_39_DFMT1_tag;

typedef union AON_TRDC_MGR_MBC0_MEM_GLBCFG_union_tag { /* MBC Global Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t NBLKS:10;                /* Number of blocks in this memory */
    vuint32_t _unused_16:6;
    vuint32_t SIZE_LOG2:5;             /* Log2 size per block */
    vuint32_t _unused_0:11;
  } B;
} AON_TRDC_MGR_MBC0_MEM_GLBCFG_tag;

typedef union AON_TRDC_MGR_MBC0_NSE_BLK_INDEX_union_tag { /* MBC NonSecure Enable Block Index */
  vuint32_t R;
  struct {
    vuint32_t AI:1;                    /* Auto Increment */
    vuint32_t _unused_30:1;
    vuint32_t WNDX:4;                  /* Word index into the block NSE bitmap. It selects the BLK_NSE_Wn register, where WNDX determines the value of n. */
    vuint32_t _unused_24:2;
    vuint32_t MEM_SEL:4;               /* Memory Select */
    vuint32_t _unused_16:4;
    vuint32_t DID_SEL0:1;              /* DID Select */
    vuint32_t DID_SEL1:1;              /* DID Select */
    vuint32_t DID_SEL2:1;              /* DID Select */
    vuint32_t DID_SEL3:1;              /* DID Select */
    vuint32_t DID_SEL4:1;              /* DID Select */
    vuint32_t DID_SEL5:1;              /* DID Select */
    vuint32_t DID_SEL6:1;              /* DID Select */
    vuint32_t DID_SEL7:1;              /* DID Select */
    vuint32_t DID_SEL8:1;              /* DID Select */
    vuint32_t DID_SEL9:1;              /* DID Select */
    vuint32_t DID_SEL10:1;             /* DID Select */
    vuint32_t DID_SEL11:1;             /* DID Select */
    vuint32_t DID_SEL12:1;             /* DID Select */
    vuint32_t DID_SEL13:1;             /* DID Select */
    vuint32_t DID_SEL14:1;             /* DID Select */
    vuint32_t DID_SEL15:1;             /* DID Select */
  } B;
} AON_TRDC_MGR_MBC0_NSE_BLK_INDEX_tag;

typedef union AON_TRDC_MGR_MBC0_NSE_BLK_SET_union_tag { /* MBC NonSecure Enable Block Set */
  vuint32_t R;
  struct {
    vuint32_t W1SET:32;                /* Write-1 Set */
  } B;
} AON_TRDC_MGR_MBC0_NSE_BLK_SET_tag;

typedef union AON_TRDC_MGR_MBC0_NSE_BLK_CLR_union_tag { /* MBC NonSecure Enable Block Clear */
  vuint32_t R;
  struct {
    vuint32_t W1CLR:32;                /* Write-1 Clear */
  } B;
} AON_TRDC_MGR_MBC0_NSE_BLK_CLR_tag;

typedef union AON_TRDC_MGR_MBC0_NSE_BLK_CLR_ALL_union_tag { /* MBC NonSecure Enable Block Clear All */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t MEMSEL:4;                /* Memory Select */
    vuint32_t _unused_16:4;
    vuint32_t DID_SEL0:1;              /* DID Select */
    vuint32_t DID_SEL1:1;              /* DID Select */
    vuint32_t DID_SEL2:1;              /* DID Select */
    vuint32_t DID_SEL3:1;              /* DID Select */
    vuint32_t DID_SEL4:1;              /* DID Select */
    vuint32_t DID_SEL5:1;              /* DID Select */
    vuint32_t DID_SEL6:1;              /* DID Select */
    vuint32_t DID_SEL7:1;              /* DID Select */
    vuint32_t DID_SEL8:1;              /* DID Select */
    vuint32_t DID_SEL9:1;              /* DID Select */
    vuint32_t DID_SEL10:1;             /* DID Select */
    vuint32_t DID_SEL11:1;             /* DID Select */
    vuint32_t DID_SEL12:1;             /* DID Select */
    vuint32_t DID_SEL13:1;             /* DID Select */
    vuint32_t DID_SEL14:1;             /* DID Select */
    vuint32_t DID_SEL15:1;             /* DID Select */
  } B;
} AON_TRDC_MGR_MBC0_NSE_BLK_CLR_ALL_tag;

typedef union AON_TRDC_MGR_MBC0_MEMN_GLBAC_union_tag { /* MBC Global Access Control */
  vuint32_t R;
  struct {
    vuint32_t NUX:1;                   /* NonsecureUser Execute */
    vuint32_t NUW:1;                   /* NonsecureUser Write */
    vuint32_t NUR:1;                   /* NonsecureUser Read */
    vuint32_t _unused_28:1;
    vuint32_t NPX:1;                   /* NonsecurePriv Execute */
    vuint32_t NPW:1;                   /* NonsecurePriv Write */
    vuint32_t NPR:1;                   /* NonsecurePriv Read */
    vuint32_t _unused_24:1;
    vuint32_t SUX:1;                   /* SecureUser Execute */
    vuint32_t SUW:1;                   /* SecureUser Write */
    vuint32_t SUR:1;                   /* SecureUser Read */
    vuint32_t _unused_20:1;
    vuint32_t SPX:1;                   /* SecurePriv Execute */
    vuint32_t SPW:1;                   /* SecurePriv Write */
    vuint32_t SPR:1;                   /* SecurePriv Read */
    vuint32_t _unused_1:16;
    vuint32_t LK:1;                    /* LOCK */
  } B;
} AON_TRDC_MGR_MBC0_MEMN_GLBAC_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W4_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W4_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W5_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W5_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W6_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W6_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W7_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W7_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W8_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W8_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W9_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W9_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W10_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W10_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W11_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W11_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W12_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W12_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W13_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W13_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W14_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W14_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W15_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W15_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W1_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W1_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W2_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W2_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W3_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W3_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_MEM_GLBCFG_union_tag { /* MBC Global Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t NBLKS:10;                /* Number of blocks in this memory */
    vuint32_t _unused_16:6;
    vuint32_t SIZE_LOG2:5;             /* Log2 size per block */
    vuint32_t _unused_0:11;
  } B;
} AON_TRDC_MGR_MBC1_MEM_GLBCFG_tag;

typedef union AON_TRDC_MGR_MBC1_NSE_BLK_INDEX_union_tag { /* MBC NonSecure Enable Block Index */
  vuint32_t R;
  struct {
    vuint32_t AI:1;                    /* Auto Increment */
    vuint32_t _unused_30:1;
    vuint32_t WNDX:4;                  /* Word index into the block NSE bitmap. It selects the BLK_NSE_Wn register, where WNDX determines the value of n. */
    vuint32_t _unused_24:2;
    vuint32_t MEM_SEL:4;               /* Memory Select */
    vuint32_t _unused_16:4;
    vuint32_t DID_SEL0:1;              /* DID Select */
    vuint32_t DID_SEL1:1;              /* DID Select */
    vuint32_t DID_SEL2:1;              /* DID Select */
    vuint32_t DID_SEL3:1;              /* DID Select */
    vuint32_t DID_SEL4:1;              /* DID Select */
    vuint32_t DID_SEL5:1;              /* DID Select */
    vuint32_t DID_SEL6:1;              /* DID Select */
    vuint32_t DID_SEL7:1;              /* DID Select */
    vuint32_t DID_SEL8:1;              /* DID Select */
    vuint32_t DID_SEL9:1;              /* DID Select */
    vuint32_t DID_SEL10:1;             /* DID Select */
    vuint32_t DID_SEL11:1;             /* DID Select */
    vuint32_t DID_SEL12:1;             /* DID Select */
    vuint32_t DID_SEL13:1;             /* DID Select */
    vuint32_t DID_SEL14:1;             /* DID Select */
    vuint32_t DID_SEL15:1;             /* DID Select */
  } B;
} AON_TRDC_MGR_MBC1_NSE_BLK_INDEX_tag;

typedef union AON_TRDC_MGR_MBC1_NSE_BLK_SET_union_tag { /* MBC NonSecure Enable Block Set */
  vuint32_t R;
  struct {
    vuint32_t W1SET:32;                /* Write-1 Set */
  } B;
} AON_TRDC_MGR_MBC1_NSE_BLK_SET_tag;

typedef union AON_TRDC_MGR_MBC1_NSE_BLK_CLR_union_tag { /* MBC NonSecure Enable Block Clear */
  vuint32_t R;
  struct {
    vuint32_t W1CLR:32;                /* Write-1 Clear */
  } B;
} AON_TRDC_MGR_MBC1_NSE_BLK_CLR_tag;

typedef union AON_TRDC_MGR_MBC1_NSE_BLK_CLR_ALL_union_tag { /* MBC NonSecure Enable Block Clear All */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t MEMSEL:4;                /* Memory Select */
    vuint32_t _unused_16:4;
    vuint32_t DID_SEL0:1;              /* DID Select */
    vuint32_t DID_SEL1:1;              /* DID Select */
    vuint32_t DID_SEL2:1;              /* DID Select */
    vuint32_t DID_SEL3:1;              /* DID Select */
    vuint32_t DID_SEL4:1;              /* DID Select */
    vuint32_t DID_SEL5:1;              /* DID Select */
    vuint32_t DID_SEL6:1;              /* DID Select */
    vuint32_t DID_SEL7:1;              /* DID Select */
    vuint32_t DID_SEL8:1;              /* DID Select */
    vuint32_t DID_SEL9:1;              /* DID Select */
    vuint32_t DID_SEL10:1;             /* DID Select */
    vuint32_t DID_SEL11:1;             /* DID Select */
    vuint32_t DID_SEL12:1;             /* DID Select */
    vuint32_t DID_SEL13:1;             /* DID Select */
    vuint32_t DID_SEL14:1;             /* DID Select */
    vuint32_t DID_SEL15:1;             /* DID Select */
  } B;
} AON_TRDC_MGR_MBC1_NSE_BLK_CLR_ALL_tag;

typedef union AON_TRDC_MGR_MBC1_MEMN_GLBAC_union_tag { /* MBC Global Access Control */
  vuint32_t R;
  struct {
    vuint32_t NUX:1;                   /* NonsecureUser Execute */
    vuint32_t NUW:1;                   /* NonsecureUser Write */
    vuint32_t NUR:1;                   /* NonsecureUser Read */
    vuint32_t _unused_28:1;
    vuint32_t NPX:1;                   /* NonsecurePriv Execute */
    vuint32_t NPW:1;                   /* NonsecurePriv Write */
    vuint32_t NPR:1;                   /* NonsecurePriv Read */
    vuint32_t _unused_24:1;
    vuint32_t SUX:1;                   /* SecureUser Execute */
    vuint32_t SUW:1;                   /* SecureUser Write */
    vuint32_t SUR:1;                   /* SecureUser Read */
    vuint32_t _unused_20:1;
    vuint32_t SPX:1;                   /* SecurePriv Execute */
    vuint32_t SPW:1;                   /* SecurePriv Write */
    vuint32_t SPR:1;                   /* SecurePriv Read */
    vuint32_t _unused_1:16;
    vuint32_t LK:1;                    /* LOCK */
  } B;
} AON_TRDC_MGR_MBC1_MEMN_GLBAC_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W0_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W0_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W1_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W1_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W2_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W2_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W3_union_tag { /* MBC Memory Block Configuration Word */
  vuint32_t R;
  struct {
    vuint32_t MBACSEL0:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE0:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL1:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE1:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL2:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE2:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL3:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE3:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL4:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE4:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL5:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE5:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL6:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE6:1;                  /* NonSecure Enable for block B */
    vuint32_t MBACSEL7:3;              /* Memory Block Access Control Select for block B */
    vuint32_t NSE7:1;                  /* NonSecure Enable for block B */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W3_tag;

typedef union AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_NSE_W0_union_tag { /* MBC Memory Block NonSecure Enable Word */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT1:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT2:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT3:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT4:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT5:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT6:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT7:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT8:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT9:1;                  /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT10:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT11:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT12:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT13:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT14:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT15:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT16:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT17:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT18:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT19:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT20:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT21:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT22:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT23:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT24:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT25:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT26:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT27:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT28:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT29:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT30:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
    vuint32_t BIT31:1;                 /* Bit b NonSecure Enable [b = 0 - 31] */
  } B;
} AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_NSE_W0_tag;

typedef union AON_TRDC_MGR_MRC0_GLBCFG_union_tag { /* MRC Global Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t NRGNS:5;                 /* Number of regions [1-16] */
    vuint32_t _unused_0:27;
  } B;
} AON_TRDC_MGR_MRC0_GLBCFG_tag;

typedef union AON_TRDC_MGR_MRC0_NSE_RGN_INDIRECT_union_tag { /* MRC NonSecure Enable Region Indirect */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t DID_SEL:16;              /* DID Select */
  } B;
} AON_TRDC_MGR_MRC0_NSE_RGN_INDIRECT_tag;

typedef union AON_TRDC_MGR_MRC0_NSE_RGN_SET_union_tag { /* MRC NonSecure Enable Region Set */
  vuint32_t R;
  struct {
    vuint32_t W1SET:16;                /* Write-1 Set */
    vuint32_t _unused_0:16;
  } B;
} AON_TRDC_MGR_MRC0_NSE_RGN_SET_tag;

typedef union AON_TRDC_MGR_MRC0_NSE_RGN_CLR_union_tag { /* MRC NonSecure Enable Region Clear */
  vuint32_t R;
  struct {
    vuint32_t W1CLR:16;                /* Write-1 Clear */
    vuint32_t _unused_0:16;
  } B;
} AON_TRDC_MGR_MRC0_NSE_RGN_CLR_tag;

typedef union AON_TRDC_MGR_MRC0_NSE_RGN_CLR_ALL_union_tag { /* MRC NonSecure Enable Region Clear All */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t DID_SEL:16;              /* DID Select */
  } B;
} AON_TRDC_MGR_MRC0_NSE_RGN_CLR_ALL_tag;

typedef union AON_TRDC_MGR_MRC0_GLBAC_union_tag { /* MRC Global Access Control */
  vuint32_t R;
  struct {
    vuint32_t NUX:1;                   /* NonsecureUser Execute */
    vuint32_t NUW:1;                   /* NonsecureUser Write */
    vuint32_t NUR:1;                   /* NonsecureUser Read */
    vuint32_t _unused_28:1;
    vuint32_t NPX:1;                   /* NonsecurePriv Execute */
    vuint32_t NPW:1;                   /* NonsecurePriv Write */
    vuint32_t NPR:1;                   /* NonsecurePriv Read */
    vuint32_t _unused_24:1;
    vuint32_t SUX:1;                   /* SecureUser Execute */
    vuint32_t SUW:1;                   /* SecureUser Write */
    vuint32_t SUR:1;                   /* SecureUser Read */
    vuint32_t _unused_20:1;
    vuint32_t SPX:1;                   /* SecurePriv Execute */
    vuint32_t SPW:1;                   /* SecurePriv Write */
    vuint32_t SPR:1;                   /* SecurePriv Read */
    vuint32_t _unused_1:16;
    vuint32_t LK:1;                    /* LOCK */
  } B;
} AON_TRDC_MGR_MRC0_GLBAC_tag;

typedef union AON_TRDC_MGR_MRC0_DOM0_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM0_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM0_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM0_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM0_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM0_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM0_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM0_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM0_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM0_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM1_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM1_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM1_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM1_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM1_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM1_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM1_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM1_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM1_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM1_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM2_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM2_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM2_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM2_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM2_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM2_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM2_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM2_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM2_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM2_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM3_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM3_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM3_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM3_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM3_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM3_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM3_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM3_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM3_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM3_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM4_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM4_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM4_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM4_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM4_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM4_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM4_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM4_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM4_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM4_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM5_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM5_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM5_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM5_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM5_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM5_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM5_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM5_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM5_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM5_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM6_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM6_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM6_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM6_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM6_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM6_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM6_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM6_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM6_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM6_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM7_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM7_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM7_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM7_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM7_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM7_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM7_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM7_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM7_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM7_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM8_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM8_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM8_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM8_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM8_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM8_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM8_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM8_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM8_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM8_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM9_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM9_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM9_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM9_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM9_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM9_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM9_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM9_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM9_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM9_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM10_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM10_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM10_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM10_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM10_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM10_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM10_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM10_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM10_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM10_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM11_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM11_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM11_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM11_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM11_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM11_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM11_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM11_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM11_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM11_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM12_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM12_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM12_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM12_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM12_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM12_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM12_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM12_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM12_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM12_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM13_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM13_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM13_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM13_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM13_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM13_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM13_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM13_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM13_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM13_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM14_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM14_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM14_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM14_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM14_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM14_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM14_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM14_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM14_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM14_RGD_NSE_tag;

typedef union AON_TRDC_MGR_MRC0_DOM15_RGD_W0_union_tag { /* MRC Region Descriptor Word 0 */
  vuint32_t R;
  struct {
    vuint32_t MRACSEL:3;               /* Memory Region Access Control Select */
    vuint32_t _unused_18:11;
    vuint32_t STRT_ADDR:18;            /* Start Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM15_RGD_W0_tag;

typedef union AON_TRDC_MGR_MRC0_DOM15_RGD_W1_union_tag { /* MRC Region Descriptor Word 1 */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t NSE:1;                   /* NonSecure Enable */
    vuint32_t _unused_18:9;
    vuint32_t END_ADDR:18;             /* End Address */
  } B;
} AON_TRDC_MGR_MRC0_DOM15_RGD_W1_tag;

typedef struct AON_TRDC_MGR_MRC0_DOM15_RGD_struct_tag {
  AON_TRDC_MGR_MRC0_DOM15_RGD_W0_tag W0; /* MRC Region Descriptor Word 0 */
  AON_TRDC_MGR_MRC0_DOM15_RGD_W1_tag W1; /* MRC Region Descriptor Word 1 */
} AON_TRDC_MGR_MRC0_DOM15_RGD_tag;

typedef union AON_TRDC_MGR_MRC0_DOM15_RGD_NSE_union_tag { /* MRC Region Descriptor NonSecure Enable */
  vuint32_t R;
  struct {
    vuint32_t BIT0:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT1:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT2:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT3:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT4:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT5:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT6:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t BIT7:1;                  /* Bit n NonSecure Enable [n = 0 - 15] */
    vuint32_t _unused_0:24;
  } B;
} AON_TRDC_MGR_MRC0_DOM15_RGD_NSE_tag;

struct AON_TRDC_MGR_tag {
  AON_TRDC_MGR_TRDC_CR_tag TRDC_CR;    /* TRDC Register */
  uint8_t AON_TRDC_MGR_reserved0[236];
  AON_TRDC_MGR_TRDC_HWCFG0_tag TRDC_HWCFG0; /* TRDC Hardware Configuration Register 0 */
  AON_TRDC_MGR_TRDC_HWCFG1_tag TRDC_HWCFG1; /* TRDC Hardware Configuration Register 1 */
  AON_TRDC_MGR_TRDC_HWCFG2_tag TRDC_HWCFG2; /* TRDC Hardware Configuration Register 2 */
  AON_TRDC_MGR_TRDC_HWCFG3_tag TRDC_HWCFG3; /* TRDC Hardware Configuration Register 3 */
  AON_TRDC_MGR_DACFG0_tag DACFG0;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG1_tag DACFG1;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG2_tag DACFG2;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG3_tag DACFG3;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG4_tag DACFG4;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG5_tag DACFG5;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG6_tag DACFG6;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG7_tag DACFG7;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG8_tag DACFG8;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG9_tag DACFG9;      /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG10_tag DACFG10;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG11_tag DACFG11;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG12_tag DACFG12;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG13_tag DACFG13;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG14_tag DACFG14;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG15_tag DACFG15;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG16_tag DACFG16;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG17_tag DACFG17;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG18_tag DACFG18;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG19_tag DACFG19;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG20_tag DACFG20;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG21_tag DACFG21;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG22_tag DACFG22;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG23_tag DACFG23;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG24_tag DACFG24;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG25_tag DACFG25;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG26_tag DACFG26;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG27_tag DACFG27;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG28_tag DACFG28;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG29_tag DACFG29;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG30_tag DACFG30;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG31_tag DACFG31;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG32_tag DACFG32;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG33_tag DACFG33;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG34_tag DACFG34;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG35_tag DACFG35;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG36_tag DACFG36;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG37_tag DACFG37;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG38_tag DACFG38;    /* Domain Assignment Configuration Register */
  AON_TRDC_MGR_DACFG39_tag DACFG39;    /* Domain Assignment Configuration Register */
  uint8_t AON_TRDC_MGR_reserved1[152];
  AON_TRDC_MGR_TRDC_IDAU_CR_tag TRDC_IDAU_CR; /* TRDC IDAU Control Register */
  uint8_t AON_TRDC_MGR_reserved2[28];
  AON_TRDC_MGR_TRDC_FLW_CTL_tag TRDC_FLW_CTL; /* TRDC FLW Control */
  AON_TRDC_MGR_TRDC_FLW_PBASE_tag TRDC_FLW_PBASE; /* TRDC FLW Physical Base */
  AON_TRDC_MGR_TRDC_FLW_ABASE_tag TRDC_FLW_ABASE; /* TRDC FLW Array Base */
  AON_TRDC_MGR_TRDC_FLW_BCNT_tag TRDC_FLW_BCNT; /* TRDC FLW Block Count */
  uint8_t AON_TRDC_MGR_reserved3[12];
  AON_TRDC_MGR_TRDC_FDID_tag TRDC_FDID; /* TRDC Fault Domain ID */
  AON_TRDC_MGR_TRDC_DERRLOC_tag TRDC_DERRLOC[16]; /* TRDC Domain Error Location Register */
  uint8_t AON_TRDC_MGR_reserved4[448];
  AON_TRDC_MGR_MBC_DERR_tag MBC_DERR[2];
  uint8_t AON_TRDC_MGR_reserved5[96];
  AON_TRDC_MGR_MRC_DERR_tag MRC_DERR[1];
  uint8_t AON_TRDC_MGR_reserved6[688];
  AON_TRDC_MGR_PID16_tag PID16;        /* Process Identifier */
  uint8_t AON_TRDC_MGR_reserved7[188];
  AON_TRDC_MGR_MDA_W0_0_DFMT1_tag MDA_W0_0_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved8[28];
  AON_TRDC_MGR_MDA_W0_1_DFMT1_tag MDA_W0_1_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved9[28];
  AON_TRDC_MGR_MDA_W0_2_DFMT1_tag MDA_W0_2_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved10[28];
  AON_TRDC_MGR_MDA_W0_3_DFMT1_tag MDA_W0_3_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved11[28];
  AON_TRDC_MGR_MDA_W0_4_DFMT1_tag MDA_W0_4_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved12[28];
  AON_TRDC_MGR_MDA_W0_5_DFMT1_tag MDA_W0_5_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved13[28];
  AON_TRDC_MGR_MDA_W0_6_DFMT1_tag MDA_W0_6_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved14[28];
  AON_TRDC_MGR_MDA_W0_7_DFMT1_tag MDA_W0_7_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved15[28];
  AON_TRDC_MGR_MDA_W0_8_DFMT1_tag MDA_W0_8_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved16[28];
  AON_TRDC_MGR_MDA_W0_9_DFMT1_tag MDA_W0_9_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved17[28];
  AON_TRDC_MGR_MDA_W0_10_DFMT1_tag MDA_W0_10_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved18[28];
  AON_TRDC_MGR_MDA_W0_11_DFMT1_tag MDA_W0_11_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved19[28];
  AON_TRDC_MGR_MDA_W0_12_DFMT1_tag MDA_W0_12_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved20[28];
  AON_TRDC_MGR_MDA_W0_13_DFMT1_tag MDA_W0_13_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved21[28];
  AON_TRDC_MGR_MDA_W0_14_DFMT1_tag MDA_W0_14_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved22[28];
  AON_TRDC_MGR_MDA_W0_15_DFMT1_tag MDA_W0_15_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved23[28];
  AON_TRDC_MGR_MDA_W0_16_DFMT0_tag MDA_W0_16_DFMT0; /* DAC Master Domain Assignment Register */
  AON_TRDC_MGR_MDA_W1_16_DFMT0_tag MDA_W1_16_DFMT0; /* DAC Master Domain Assignment Register */
  AON_TRDC_MGR_MDA_W2_16_DFMT0_tag MDA_W2_16_DFMT0; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved24[20];
  AON_TRDC_MGR_MDA_W0_17_DFMT1_tag MDA_W0_17_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved25[28];
  AON_TRDC_MGR_MDA_W0_18_DFMT1_tag MDA_W0_18_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved26[28];
  AON_TRDC_MGR_MDA_W0_19_DFMT1_tag MDA_W0_19_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved27[28];
  AON_TRDC_MGR_MDA_W0_20_DFMT1_tag MDA_W0_20_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved28[28];
  AON_TRDC_MGR_MDA_W0_21_DFMT1_tag MDA_W0_21_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved29[28];
  AON_TRDC_MGR_MDA_W0_22_DFMT1_tag MDA_W0_22_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved30[28];
  AON_TRDC_MGR_MDA_W0_23_DFMT1_tag MDA_W0_23_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved31[28];
  AON_TRDC_MGR_MDA_W0_24_DFMT1_tag MDA_W0_24_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved32[28];
  AON_TRDC_MGR_MDA_W0_25_DFMT1_tag MDA_W0_25_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved33[28];
  AON_TRDC_MGR_MDA_W0_26_DFMT1_tag MDA_W0_26_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved34[28];
  AON_TRDC_MGR_MDA_W0_27_DFMT1_tag MDA_W0_27_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved35[28];
  AON_TRDC_MGR_MDA_W0_28_DFMT1_tag MDA_W0_28_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved36[28];
  AON_TRDC_MGR_MDA_W0_29_DFMT1_tag MDA_W0_29_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved37[28];
  AON_TRDC_MGR_MDA_W0_30_DFMT1_tag MDA_W0_30_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved38[28];
  AON_TRDC_MGR_MDA_W0_31_DFMT1_tag MDA_W0_31_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved39[28];
  AON_TRDC_MGR_MDA_W0_32_DFMT1_tag MDA_W0_32_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved40[28];
  AON_TRDC_MGR_MDA_W0_33_DFMT1_tag MDA_W0_33_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved41[28];
  AON_TRDC_MGR_MDA_W0_34_DFMT1_tag MDA_W0_34_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved42[28];
  AON_TRDC_MGR_MDA_W0_35_DFMT1_tag MDA_W0_35_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved43[28];
  AON_TRDC_MGR_MDA_W0_36_DFMT1_tag MDA_W0_36_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved44[28];
  AON_TRDC_MGR_MDA_W0_37_DFMT1_tag MDA_W0_37_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved45[28];
  AON_TRDC_MGR_MDA_W0_38_DFMT1_tag MDA_W0_38_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved46[28];
  AON_TRDC_MGR_MDA_W0_39_DFMT1_tag MDA_W0_39_DFMT1; /* DAC Master Domain Assignment Register */
  uint8_t AON_TRDC_MGR_reserved47[62236];
  AON_TRDC_MGR_MBC0_MEM_GLBCFG_tag MBC0_MEM_GLBCFG[4]; /* MBC Global Configuration Register */
  AON_TRDC_MGR_MBC0_NSE_BLK_INDEX_tag MBC0_NSE_BLK_INDEX; /* MBC NonSecure Enable Block Index */
  AON_TRDC_MGR_MBC0_NSE_BLK_SET_tag MBC0_NSE_BLK_SET; /* MBC NonSecure Enable Block Set */
  AON_TRDC_MGR_MBC0_NSE_BLK_CLR_tag MBC0_NSE_BLK_CLR; /* MBC NonSecure Enable Block Clear */
  AON_TRDC_MGR_MBC0_NSE_BLK_CLR_ALL_tag MBC0_NSE_BLK_CLR_ALL; /* MBC NonSecure Enable Block Clear All */
  AON_TRDC_MGR_MBC0_MEMN_GLBAC_tag MBC0_MEMN_GLBAC[8]; /* MBC Global Access Control */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W0_tag MBC0_DOM0_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W1_tag MBC0_DOM0_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W2_tag MBC0_DOM0_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W3_tag MBC0_DOM0_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W4_tag MBC0_DOM0_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W5_tag MBC0_DOM0_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W6_tag MBC0_DOM0_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W7_tag MBC0_DOM0_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W8_tag MBC0_DOM0_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W9_tag MBC0_DOM0_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W10_tag MBC0_DOM0_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W11_tag MBC0_DOM0_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W12_tag MBC0_DOM0_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W13_tag MBC0_DOM0_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W14_tag MBC0_DOM0_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W15_tag MBC0_DOM0_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved48[192];
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W0_tag MBC0_DOM0_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W1_tag MBC0_DOM0_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W2_tag MBC0_DOM0_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W3_tag MBC0_DOM0_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved49[48];
  AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_CFG_W0_tag MBC0_DOM0_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved50[28];
  AON_TRDC_MGR_MBC0_DOM0_MEM1_BLK_NSE_W0_tag MBC0_DOM0_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved51[4];
  AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_CFG_W0_tag MBC0_DOM0_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved52[28];
  AON_TRDC_MGR_MBC0_DOM0_MEM2_BLK_NSE_W0_tag MBC0_DOM0_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved53[116];
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W0_tag MBC0_DOM1_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W1_tag MBC0_DOM1_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W2_tag MBC0_DOM1_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W3_tag MBC0_DOM1_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W4_tag MBC0_DOM1_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W5_tag MBC0_DOM1_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W6_tag MBC0_DOM1_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W7_tag MBC0_DOM1_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W8_tag MBC0_DOM1_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W9_tag MBC0_DOM1_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W10_tag MBC0_DOM1_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W11_tag MBC0_DOM1_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W12_tag MBC0_DOM1_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W13_tag MBC0_DOM1_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W14_tag MBC0_DOM1_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W15_tag MBC0_DOM1_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved54[192];
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W0_tag MBC0_DOM1_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W1_tag MBC0_DOM1_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W2_tag MBC0_DOM1_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W3_tag MBC0_DOM1_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved55[48];
  AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_CFG_W0_tag MBC0_DOM1_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved56[28];
  AON_TRDC_MGR_MBC0_DOM1_MEM1_BLK_NSE_W0_tag MBC0_DOM1_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved57[4];
  AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_CFG_W0_tag MBC0_DOM1_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved58[28];
  AON_TRDC_MGR_MBC0_DOM1_MEM2_BLK_NSE_W0_tag MBC0_DOM1_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved59[116];
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W0_tag MBC0_DOM2_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W1_tag MBC0_DOM2_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W2_tag MBC0_DOM2_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W3_tag MBC0_DOM2_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W4_tag MBC0_DOM2_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W5_tag MBC0_DOM2_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W6_tag MBC0_DOM2_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W7_tag MBC0_DOM2_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W8_tag MBC0_DOM2_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W9_tag MBC0_DOM2_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W10_tag MBC0_DOM2_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W11_tag MBC0_DOM2_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W12_tag MBC0_DOM2_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W13_tag MBC0_DOM2_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W14_tag MBC0_DOM2_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W15_tag MBC0_DOM2_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved60[192];
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W0_tag MBC0_DOM2_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W1_tag MBC0_DOM2_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W2_tag MBC0_DOM2_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W3_tag MBC0_DOM2_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved61[48];
  AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_CFG_W0_tag MBC0_DOM2_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved62[28];
  AON_TRDC_MGR_MBC0_DOM2_MEM1_BLK_NSE_W0_tag MBC0_DOM2_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved63[4];
  AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_CFG_W0_tag MBC0_DOM2_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved64[28];
  AON_TRDC_MGR_MBC0_DOM2_MEM2_BLK_NSE_W0_tag MBC0_DOM2_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved65[116];
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W0_tag MBC0_DOM3_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W1_tag MBC0_DOM3_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W2_tag MBC0_DOM3_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W3_tag MBC0_DOM3_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W4_tag MBC0_DOM3_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W5_tag MBC0_DOM3_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W6_tag MBC0_DOM3_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W7_tag MBC0_DOM3_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W8_tag MBC0_DOM3_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W9_tag MBC0_DOM3_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W10_tag MBC0_DOM3_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W11_tag MBC0_DOM3_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W12_tag MBC0_DOM3_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W13_tag MBC0_DOM3_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W14_tag MBC0_DOM3_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W15_tag MBC0_DOM3_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved66[192];
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W0_tag MBC0_DOM3_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W1_tag MBC0_DOM3_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W2_tag MBC0_DOM3_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W3_tag MBC0_DOM3_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved67[48];
  AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_CFG_W0_tag MBC0_DOM3_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved68[28];
  AON_TRDC_MGR_MBC0_DOM3_MEM1_BLK_NSE_W0_tag MBC0_DOM3_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved69[4];
  AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_CFG_W0_tag MBC0_DOM3_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved70[28];
  AON_TRDC_MGR_MBC0_DOM3_MEM2_BLK_NSE_W0_tag MBC0_DOM3_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved71[116];
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W0_tag MBC0_DOM4_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W1_tag MBC0_DOM4_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W2_tag MBC0_DOM4_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W3_tag MBC0_DOM4_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W4_tag MBC0_DOM4_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W5_tag MBC0_DOM4_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W6_tag MBC0_DOM4_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W7_tag MBC0_DOM4_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W8_tag MBC0_DOM4_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W9_tag MBC0_DOM4_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W10_tag MBC0_DOM4_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W11_tag MBC0_DOM4_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W12_tag MBC0_DOM4_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W13_tag MBC0_DOM4_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W14_tag MBC0_DOM4_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W15_tag MBC0_DOM4_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved72[192];
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W0_tag MBC0_DOM4_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W1_tag MBC0_DOM4_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W2_tag MBC0_DOM4_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W3_tag MBC0_DOM4_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved73[48];
  AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_CFG_W0_tag MBC0_DOM4_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved74[28];
  AON_TRDC_MGR_MBC0_DOM4_MEM1_BLK_NSE_W0_tag MBC0_DOM4_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved75[4];
  AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_CFG_W0_tag MBC0_DOM4_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved76[28];
  AON_TRDC_MGR_MBC0_DOM4_MEM2_BLK_NSE_W0_tag MBC0_DOM4_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved77[116];
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W0_tag MBC0_DOM5_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W1_tag MBC0_DOM5_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W2_tag MBC0_DOM5_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W3_tag MBC0_DOM5_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W4_tag MBC0_DOM5_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W5_tag MBC0_DOM5_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W6_tag MBC0_DOM5_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W7_tag MBC0_DOM5_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W8_tag MBC0_DOM5_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W9_tag MBC0_DOM5_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W10_tag MBC0_DOM5_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W11_tag MBC0_DOM5_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W12_tag MBC0_DOM5_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W13_tag MBC0_DOM5_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W14_tag MBC0_DOM5_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W15_tag MBC0_DOM5_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved78[192];
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W0_tag MBC0_DOM5_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W1_tag MBC0_DOM5_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W2_tag MBC0_DOM5_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W3_tag MBC0_DOM5_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved79[48];
  AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_CFG_W0_tag MBC0_DOM5_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved80[28];
  AON_TRDC_MGR_MBC0_DOM5_MEM1_BLK_NSE_W0_tag MBC0_DOM5_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved81[4];
  AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_CFG_W0_tag MBC0_DOM5_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved82[28];
  AON_TRDC_MGR_MBC0_DOM5_MEM2_BLK_NSE_W0_tag MBC0_DOM5_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved83[116];
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W0_tag MBC0_DOM6_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W1_tag MBC0_DOM6_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W2_tag MBC0_DOM6_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W3_tag MBC0_DOM6_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W4_tag MBC0_DOM6_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W5_tag MBC0_DOM6_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W6_tag MBC0_DOM6_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W7_tag MBC0_DOM6_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W8_tag MBC0_DOM6_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W9_tag MBC0_DOM6_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W10_tag MBC0_DOM6_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W11_tag MBC0_DOM6_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W12_tag MBC0_DOM6_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W13_tag MBC0_DOM6_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W14_tag MBC0_DOM6_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W15_tag MBC0_DOM6_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved84[192];
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W0_tag MBC0_DOM6_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W1_tag MBC0_DOM6_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W2_tag MBC0_DOM6_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W3_tag MBC0_DOM6_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved85[48];
  AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_CFG_W0_tag MBC0_DOM6_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved86[28];
  AON_TRDC_MGR_MBC0_DOM6_MEM1_BLK_NSE_W0_tag MBC0_DOM6_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved87[4];
  AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_CFG_W0_tag MBC0_DOM6_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved88[28];
  AON_TRDC_MGR_MBC0_DOM6_MEM2_BLK_NSE_W0_tag MBC0_DOM6_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved89[116];
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W0_tag MBC0_DOM7_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W1_tag MBC0_DOM7_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W2_tag MBC0_DOM7_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W3_tag MBC0_DOM7_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W4_tag MBC0_DOM7_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W5_tag MBC0_DOM7_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W6_tag MBC0_DOM7_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W7_tag MBC0_DOM7_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W8_tag MBC0_DOM7_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W9_tag MBC0_DOM7_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W10_tag MBC0_DOM7_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W11_tag MBC0_DOM7_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W12_tag MBC0_DOM7_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W13_tag MBC0_DOM7_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W14_tag MBC0_DOM7_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W15_tag MBC0_DOM7_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved90[192];
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W0_tag MBC0_DOM7_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W1_tag MBC0_DOM7_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W2_tag MBC0_DOM7_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W3_tag MBC0_DOM7_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved91[48];
  AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_CFG_W0_tag MBC0_DOM7_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved92[28];
  AON_TRDC_MGR_MBC0_DOM7_MEM1_BLK_NSE_W0_tag MBC0_DOM7_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved93[4];
  AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_CFG_W0_tag MBC0_DOM7_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved94[28];
  AON_TRDC_MGR_MBC0_DOM7_MEM2_BLK_NSE_W0_tag MBC0_DOM7_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved95[116];
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W0_tag MBC0_DOM8_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W1_tag MBC0_DOM8_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W2_tag MBC0_DOM8_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W3_tag MBC0_DOM8_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W4_tag MBC0_DOM8_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W5_tag MBC0_DOM8_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W6_tag MBC0_DOM8_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W7_tag MBC0_DOM8_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W8_tag MBC0_DOM8_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W9_tag MBC0_DOM8_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W10_tag MBC0_DOM8_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W11_tag MBC0_DOM8_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W12_tag MBC0_DOM8_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W13_tag MBC0_DOM8_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W14_tag MBC0_DOM8_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W15_tag MBC0_DOM8_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved96[192];
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W0_tag MBC0_DOM8_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W1_tag MBC0_DOM8_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W2_tag MBC0_DOM8_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W3_tag MBC0_DOM8_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved97[48];
  AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_CFG_W0_tag MBC0_DOM8_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved98[28];
  AON_TRDC_MGR_MBC0_DOM8_MEM1_BLK_NSE_W0_tag MBC0_DOM8_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved99[4];
  AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_CFG_W0_tag MBC0_DOM8_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved100[28];
  AON_TRDC_MGR_MBC0_DOM8_MEM2_BLK_NSE_W0_tag MBC0_DOM8_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved101[116];
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W0_tag MBC0_DOM9_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W1_tag MBC0_DOM9_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W2_tag MBC0_DOM9_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W3_tag MBC0_DOM9_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W4_tag MBC0_DOM9_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W5_tag MBC0_DOM9_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W6_tag MBC0_DOM9_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W7_tag MBC0_DOM9_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W8_tag MBC0_DOM9_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W9_tag MBC0_DOM9_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W10_tag MBC0_DOM9_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W11_tag MBC0_DOM9_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W12_tag MBC0_DOM9_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W13_tag MBC0_DOM9_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W14_tag MBC0_DOM9_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W15_tag MBC0_DOM9_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved102[192];
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W0_tag MBC0_DOM9_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W1_tag MBC0_DOM9_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W2_tag MBC0_DOM9_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W3_tag MBC0_DOM9_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved103[48];
  AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_CFG_W0_tag MBC0_DOM9_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved104[28];
  AON_TRDC_MGR_MBC0_DOM9_MEM1_BLK_NSE_W0_tag MBC0_DOM9_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved105[4];
  AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_CFG_W0_tag MBC0_DOM9_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved106[28];
  AON_TRDC_MGR_MBC0_DOM9_MEM2_BLK_NSE_W0_tag MBC0_DOM9_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved107[116];
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W0_tag MBC0_DOM10_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W1_tag MBC0_DOM10_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W2_tag MBC0_DOM10_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W3_tag MBC0_DOM10_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W4_tag MBC0_DOM10_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W5_tag MBC0_DOM10_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W6_tag MBC0_DOM10_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W7_tag MBC0_DOM10_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W8_tag MBC0_DOM10_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W9_tag MBC0_DOM10_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W10_tag MBC0_DOM10_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W11_tag MBC0_DOM10_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W12_tag MBC0_DOM10_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W13_tag MBC0_DOM10_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W14_tag MBC0_DOM10_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W15_tag MBC0_DOM10_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved108[192];
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W0_tag MBC0_DOM10_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W1_tag MBC0_DOM10_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W2_tag MBC0_DOM10_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W3_tag MBC0_DOM10_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved109[48];
  AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_CFG_W0_tag MBC0_DOM10_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved110[28];
  AON_TRDC_MGR_MBC0_DOM10_MEM1_BLK_NSE_W0_tag MBC0_DOM10_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved111[4];
  AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_CFG_W0_tag MBC0_DOM10_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved112[28];
  AON_TRDC_MGR_MBC0_DOM10_MEM2_BLK_NSE_W0_tag MBC0_DOM10_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved113[116];
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W0_tag MBC0_DOM11_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W1_tag MBC0_DOM11_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W2_tag MBC0_DOM11_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W3_tag MBC0_DOM11_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W4_tag MBC0_DOM11_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W5_tag MBC0_DOM11_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W6_tag MBC0_DOM11_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W7_tag MBC0_DOM11_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W8_tag MBC0_DOM11_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W9_tag MBC0_DOM11_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W10_tag MBC0_DOM11_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W11_tag MBC0_DOM11_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W12_tag MBC0_DOM11_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W13_tag MBC0_DOM11_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W14_tag MBC0_DOM11_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W15_tag MBC0_DOM11_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved114[192];
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W0_tag MBC0_DOM11_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W1_tag MBC0_DOM11_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W2_tag MBC0_DOM11_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W3_tag MBC0_DOM11_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved115[48];
  AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_CFG_W0_tag MBC0_DOM11_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved116[28];
  AON_TRDC_MGR_MBC0_DOM11_MEM1_BLK_NSE_W0_tag MBC0_DOM11_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved117[4];
  AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_CFG_W0_tag MBC0_DOM11_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved118[28];
  AON_TRDC_MGR_MBC0_DOM11_MEM2_BLK_NSE_W0_tag MBC0_DOM11_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved119[116];
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W0_tag MBC0_DOM12_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W1_tag MBC0_DOM12_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W2_tag MBC0_DOM12_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W3_tag MBC0_DOM12_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W4_tag MBC0_DOM12_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W5_tag MBC0_DOM12_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W6_tag MBC0_DOM12_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W7_tag MBC0_DOM12_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W8_tag MBC0_DOM12_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W9_tag MBC0_DOM12_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W10_tag MBC0_DOM12_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W11_tag MBC0_DOM12_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W12_tag MBC0_DOM12_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W13_tag MBC0_DOM12_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W14_tag MBC0_DOM12_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W15_tag MBC0_DOM12_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved120[192];
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W0_tag MBC0_DOM12_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W1_tag MBC0_DOM12_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W2_tag MBC0_DOM12_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W3_tag MBC0_DOM12_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved121[48];
  AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_CFG_W0_tag MBC0_DOM12_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved122[28];
  AON_TRDC_MGR_MBC0_DOM12_MEM1_BLK_NSE_W0_tag MBC0_DOM12_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved123[4];
  AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_CFG_W0_tag MBC0_DOM12_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved124[28];
  AON_TRDC_MGR_MBC0_DOM12_MEM2_BLK_NSE_W0_tag MBC0_DOM12_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved125[116];
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W0_tag MBC0_DOM13_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W1_tag MBC0_DOM13_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W2_tag MBC0_DOM13_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W3_tag MBC0_DOM13_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W4_tag MBC0_DOM13_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W5_tag MBC0_DOM13_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W6_tag MBC0_DOM13_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W7_tag MBC0_DOM13_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W8_tag MBC0_DOM13_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W9_tag MBC0_DOM13_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W10_tag MBC0_DOM13_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W11_tag MBC0_DOM13_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W12_tag MBC0_DOM13_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W13_tag MBC0_DOM13_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W14_tag MBC0_DOM13_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W15_tag MBC0_DOM13_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved126[192];
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W0_tag MBC0_DOM13_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W1_tag MBC0_DOM13_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W2_tag MBC0_DOM13_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W3_tag MBC0_DOM13_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved127[48];
  AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_CFG_W0_tag MBC0_DOM13_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved128[28];
  AON_TRDC_MGR_MBC0_DOM13_MEM1_BLK_NSE_W0_tag MBC0_DOM13_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved129[4];
  AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_CFG_W0_tag MBC0_DOM13_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved130[28];
  AON_TRDC_MGR_MBC0_DOM13_MEM2_BLK_NSE_W0_tag MBC0_DOM13_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved131[116];
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W0_tag MBC0_DOM14_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W1_tag MBC0_DOM14_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W2_tag MBC0_DOM14_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W3_tag MBC0_DOM14_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W4_tag MBC0_DOM14_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W5_tag MBC0_DOM14_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W6_tag MBC0_DOM14_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W7_tag MBC0_DOM14_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W8_tag MBC0_DOM14_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W9_tag MBC0_DOM14_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W10_tag MBC0_DOM14_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W11_tag MBC0_DOM14_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W12_tag MBC0_DOM14_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W13_tag MBC0_DOM14_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W14_tag MBC0_DOM14_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W15_tag MBC0_DOM14_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved132[192];
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W0_tag MBC0_DOM14_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W1_tag MBC0_DOM14_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W2_tag MBC0_DOM14_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W3_tag MBC0_DOM14_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved133[48];
  AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_CFG_W0_tag MBC0_DOM14_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved134[28];
  AON_TRDC_MGR_MBC0_DOM14_MEM1_BLK_NSE_W0_tag MBC0_DOM14_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved135[4];
  AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_CFG_W0_tag MBC0_DOM14_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved136[28];
  AON_TRDC_MGR_MBC0_DOM14_MEM2_BLK_NSE_W0_tag MBC0_DOM14_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved137[116];
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W0_tag MBC0_DOM15_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W1_tag MBC0_DOM15_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W2_tag MBC0_DOM15_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W3_tag MBC0_DOM15_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W4_tag MBC0_DOM15_MEM0_BLK_CFG_W4; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W5_tag MBC0_DOM15_MEM0_BLK_CFG_W5; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W6_tag MBC0_DOM15_MEM0_BLK_CFG_W6; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W7_tag MBC0_DOM15_MEM0_BLK_CFG_W7; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W8_tag MBC0_DOM15_MEM0_BLK_CFG_W8; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W9_tag MBC0_DOM15_MEM0_BLK_CFG_W9; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W10_tag MBC0_DOM15_MEM0_BLK_CFG_W10; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W11_tag MBC0_DOM15_MEM0_BLK_CFG_W11; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W12_tag MBC0_DOM15_MEM0_BLK_CFG_W12; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W13_tag MBC0_DOM15_MEM0_BLK_CFG_W13; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W14_tag MBC0_DOM15_MEM0_BLK_CFG_W14; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W15_tag MBC0_DOM15_MEM0_BLK_CFG_W15; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved138[192];
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W0_tag MBC0_DOM15_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W1_tag MBC0_DOM15_MEM0_BLK_NSE_W1; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W2_tag MBC0_DOM15_MEM0_BLK_NSE_W2; /* MBC Memory Block NonSecure Enable Word */
  AON_TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W3_tag MBC0_DOM15_MEM0_BLK_NSE_W3; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved139[48];
  AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_CFG_W0_tag MBC0_DOM15_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved140[28];
  AON_TRDC_MGR_MBC0_DOM15_MEM1_BLK_NSE_W0_tag MBC0_DOM15_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved141[4];
  AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_CFG_W0_tag MBC0_DOM15_MEM2_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved142[28];
  AON_TRDC_MGR_MBC0_DOM15_MEM2_BLK_NSE_W0_tag MBC0_DOM15_MEM2_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved143[52];
  AON_TRDC_MGR_MBC1_MEM_GLBCFG_tag MBC1_MEM_GLBCFG[4]; /* MBC Global Configuration Register */
  AON_TRDC_MGR_MBC1_NSE_BLK_INDEX_tag MBC1_NSE_BLK_INDEX; /* MBC NonSecure Enable Block Index */
  AON_TRDC_MGR_MBC1_NSE_BLK_SET_tag MBC1_NSE_BLK_SET; /* MBC NonSecure Enable Block Set */
  AON_TRDC_MGR_MBC1_NSE_BLK_CLR_tag MBC1_NSE_BLK_CLR; /* MBC NonSecure Enable Block Clear */
  AON_TRDC_MGR_MBC1_NSE_BLK_CLR_ALL_tag MBC1_NSE_BLK_CLR_ALL; /* MBC NonSecure Enable Block Clear All */
  AON_TRDC_MGR_MBC1_MEMN_GLBAC_tag MBC1_MEMN_GLBAC[8]; /* MBC Global Access Control */
  AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W0_tag MBC1_DOM0_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W1_tag MBC1_DOM0_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W2_tag MBC1_DOM0_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W3_tag MBC1_DOM0_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved144[240];
  AON_TRDC_MGR_MBC1_DOM0_MEM0_BLK_NSE_W0_tag MBC1_DOM0_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved145[60];
  AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W0_tag MBC1_DOM0_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W1_tag MBC1_DOM0_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W2_tag MBC1_DOM0_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W3_tag MBC1_DOM0_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved146[16];
  AON_TRDC_MGR_MBC1_DOM0_MEM1_BLK_NSE_W0_tag MBC1_DOM0_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved147[156];
  AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W0_tag MBC1_DOM1_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W1_tag MBC1_DOM1_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W2_tag MBC1_DOM1_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W3_tag MBC1_DOM1_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved148[240];
  AON_TRDC_MGR_MBC1_DOM1_MEM0_BLK_NSE_W0_tag MBC1_DOM1_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved149[60];
  AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W0_tag MBC1_DOM1_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W1_tag MBC1_DOM1_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W2_tag MBC1_DOM1_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W3_tag MBC1_DOM1_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved150[16];
  AON_TRDC_MGR_MBC1_DOM1_MEM1_BLK_NSE_W0_tag MBC1_DOM1_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved151[156];
  AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W0_tag MBC1_DOM2_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W1_tag MBC1_DOM2_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W2_tag MBC1_DOM2_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W3_tag MBC1_DOM2_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved152[240];
  AON_TRDC_MGR_MBC1_DOM2_MEM0_BLK_NSE_W0_tag MBC1_DOM2_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved153[60];
  AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W0_tag MBC1_DOM2_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W1_tag MBC1_DOM2_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W2_tag MBC1_DOM2_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W3_tag MBC1_DOM2_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved154[16];
  AON_TRDC_MGR_MBC1_DOM2_MEM1_BLK_NSE_W0_tag MBC1_DOM2_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved155[156];
  AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W0_tag MBC1_DOM3_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W1_tag MBC1_DOM3_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W2_tag MBC1_DOM3_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W3_tag MBC1_DOM3_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved156[240];
  AON_TRDC_MGR_MBC1_DOM3_MEM0_BLK_NSE_W0_tag MBC1_DOM3_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved157[60];
  AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W0_tag MBC1_DOM3_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W1_tag MBC1_DOM3_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W2_tag MBC1_DOM3_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W3_tag MBC1_DOM3_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved158[16];
  AON_TRDC_MGR_MBC1_DOM3_MEM1_BLK_NSE_W0_tag MBC1_DOM3_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved159[156];
  AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W0_tag MBC1_DOM4_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W1_tag MBC1_DOM4_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W2_tag MBC1_DOM4_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W3_tag MBC1_DOM4_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved160[240];
  AON_TRDC_MGR_MBC1_DOM4_MEM0_BLK_NSE_W0_tag MBC1_DOM4_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved161[60];
  AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W0_tag MBC1_DOM4_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W1_tag MBC1_DOM4_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W2_tag MBC1_DOM4_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W3_tag MBC1_DOM4_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved162[16];
  AON_TRDC_MGR_MBC1_DOM4_MEM1_BLK_NSE_W0_tag MBC1_DOM4_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved163[156];
  AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W0_tag MBC1_DOM5_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W1_tag MBC1_DOM5_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W2_tag MBC1_DOM5_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W3_tag MBC1_DOM5_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved164[240];
  AON_TRDC_MGR_MBC1_DOM5_MEM0_BLK_NSE_W0_tag MBC1_DOM5_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved165[60];
  AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W0_tag MBC1_DOM5_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W1_tag MBC1_DOM5_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W2_tag MBC1_DOM5_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W3_tag MBC1_DOM5_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved166[16];
  AON_TRDC_MGR_MBC1_DOM5_MEM1_BLK_NSE_W0_tag MBC1_DOM5_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved167[156];
  AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W0_tag MBC1_DOM6_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W1_tag MBC1_DOM6_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W2_tag MBC1_DOM6_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W3_tag MBC1_DOM6_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved168[240];
  AON_TRDC_MGR_MBC1_DOM6_MEM0_BLK_NSE_W0_tag MBC1_DOM6_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved169[60];
  AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W0_tag MBC1_DOM6_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W1_tag MBC1_DOM6_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W2_tag MBC1_DOM6_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W3_tag MBC1_DOM6_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved170[16];
  AON_TRDC_MGR_MBC1_DOM6_MEM1_BLK_NSE_W0_tag MBC1_DOM6_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved171[156];
  AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W0_tag MBC1_DOM7_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W1_tag MBC1_DOM7_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W2_tag MBC1_DOM7_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W3_tag MBC1_DOM7_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved172[240];
  AON_TRDC_MGR_MBC1_DOM7_MEM0_BLK_NSE_W0_tag MBC1_DOM7_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved173[60];
  AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W0_tag MBC1_DOM7_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W1_tag MBC1_DOM7_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W2_tag MBC1_DOM7_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W3_tag MBC1_DOM7_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved174[16];
  AON_TRDC_MGR_MBC1_DOM7_MEM1_BLK_NSE_W0_tag MBC1_DOM7_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved175[156];
  AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W0_tag MBC1_DOM8_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W1_tag MBC1_DOM8_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W2_tag MBC1_DOM8_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W3_tag MBC1_DOM8_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved176[240];
  AON_TRDC_MGR_MBC1_DOM8_MEM0_BLK_NSE_W0_tag MBC1_DOM8_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved177[60];
  AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W0_tag MBC1_DOM8_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W1_tag MBC1_DOM8_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W2_tag MBC1_DOM8_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W3_tag MBC1_DOM8_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved178[16];
  AON_TRDC_MGR_MBC1_DOM8_MEM1_BLK_NSE_W0_tag MBC1_DOM8_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved179[156];
  AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W0_tag MBC1_DOM9_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W1_tag MBC1_DOM9_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W2_tag MBC1_DOM9_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W3_tag MBC1_DOM9_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved180[240];
  AON_TRDC_MGR_MBC1_DOM9_MEM0_BLK_NSE_W0_tag MBC1_DOM9_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved181[60];
  AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W0_tag MBC1_DOM9_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W1_tag MBC1_DOM9_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W2_tag MBC1_DOM9_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W3_tag MBC1_DOM9_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved182[16];
  AON_TRDC_MGR_MBC1_DOM9_MEM1_BLK_NSE_W0_tag MBC1_DOM9_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved183[156];
  AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W0_tag MBC1_DOM10_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W1_tag MBC1_DOM10_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W2_tag MBC1_DOM10_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W3_tag MBC1_DOM10_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved184[240];
  AON_TRDC_MGR_MBC1_DOM10_MEM0_BLK_NSE_W0_tag MBC1_DOM10_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved185[60];
  AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W0_tag MBC1_DOM10_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W1_tag MBC1_DOM10_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W2_tag MBC1_DOM10_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W3_tag MBC1_DOM10_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved186[16];
  AON_TRDC_MGR_MBC1_DOM10_MEM1_BLK_NSE_W0_tag MBC1_DOM10_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved187[156];
  AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W0_tag MBC1_DOM11_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W1_tag MBC1_DOM11_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W2_tag MBC1_DOM11_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W3_tag MBC1_DOM11_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved188[240];
  AON_TRDC_MGR_MBC1_DOM11_MEM0_BLK_NSE_W0_tag MBC1_DOM11_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved189[60];
  AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W0_tag MBC1_DOM11_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W1_tag MBC1_DOM11_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W2_tag MBC1_DOM11_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W3_tag MBC1_DOM11_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved190[16];
  AON_TRDC_MGR_MBC1_DOM11_MEM1_BLK_NSE_W0_tag MBC1_DOM11_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved191[156];
  AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W0_tag MBC1_DOM12_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W1_tag MBC1_DOM12_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W2_tag MBC1_DOM12_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W3_tag MBC1_DOM12_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved192[240];
  AON_TRDC_MGR_MBC1_DOM12_MEM0_BLK_NSE_W0_tag MBC1_DOM12_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved193[60];
  AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W0_tag MBC1_DOM12_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W1_tag MBC1_DOM12_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W2_tag MBC1_DOM12_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W3_tag MBC1_DOM12_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved194[16];
  AON_TRDC_MGR_MBC1_DOM12_MEM1_BLK_NSE_W0_tag MBC1_DOM12_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved195[156];
  AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W0_tag MBC1_DOM13_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W1_tag MBC1_DOM13_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W2_tag MBC1_DOM13_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W3_tag MBC1_DOM13_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved196[240];
  AON_TRDC_MGR_MBC1_DOM13_MEM0_BLK_NSE_W0_tag MBC1_DOM13_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved197[60];
  AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W0_tag MBC1_DOM13_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W1_tag MBC1_DOM13_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W2_tag MBC1_DOM13_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W3_tag MBC1_DOM13_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved198[16];
  AON_TRDC_MGR_MBC1_DOM13_MEM1_BLK_NSE_W0_tag MBC1_DOM13_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved199[156];
  AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W0_tag MBC1_DOM14_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W1_tag MBC1_DOM14_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W2_tag MBC1_DOM14_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W3_tag MBC1_DOM14_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved200[240];
  AON_TRDC_MGR_MBC1_DOM14_MEM0_BLK_NSE_W0_tag MBC1_DOM14_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved201[60];
  AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W0_tag MBC1_DOM14_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W1_tag MBC1_DOM14_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W2_tag MBC1_DOM14_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W3_tag MBC1_DOM14_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved202[16];
  AON_TRDC_MGR_MBC1_DOM14_MEM1_BLK_NSE_W0_tag MBC1_DOM14_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved203[156];
  AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W0_tag MBC1_DOM15_MEM0_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W1_tag MBC1_DOM15_MEM0_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W2_tag MBC1_DOM15_MEM0_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W3_tag MBC1_DOM15_MEM0_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved204[240];
  AON_TRDC_MGR_MBC1_DOM15_MEM0_BLK_NSE_W0_tag MBC1_DOM15_MEM0_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved205[60];
  AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W0_tag MBC1_DOM15_MEM1_BLK_CFG_W0; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W1_tag MBC1_DOM15_MEM1_BLK_CFG_W1; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W2_tag MBC1_DOM15_MEM1_BLK_CFG_W2; /* MBC Memory Block Configuration Word */
  AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W3_tag MBC1_DOM15_MEM1_BLK_CFG_W3; /* MBC Memory Block Configuration Word */
  uint8_t AON_TRDC_MGR_reserved206[16];
  AON_TRDC_MGR_MBC1_DOM15_MEM1_BLK_NSE_W0_tag MBC1_DOM15_MEM1_BLK_NSE_W0; /* MBC Memory Block NonSecure Enable Word */
  uint8_t AON_TRDC_MGR_reserved207[92];
  AON_TRDC_MGR_MRC0_GLBCFG_tag MRC0_GLBCFG; /* MRC Global Configuration Register */
  uint8_t AON_TRDC_MGR_reserved208[12];
  AON_TRDC_MGR_MRC0_NSE_RGN_INDIRECT_tag MRC0_NSE_RGN_INDIRECT; /* MRC NonSecure Enable Region Indirect */
  AON_TRDC_MGR_MRC0_NSE_RGN_SET_tag MRC0_NSE_RGN_SET; /* MRC NonSecure Enable Region Set */
  AON_TRDC_MGR_MRC0_NSE_RGN_CLR_tag MRC0_NSE_RGN_CLR; /* MRC NonSecure Enable Region Clear */
  AON_TRDC_MGR_MRC0_NSE_RGN_CLR_ALL_tag MRC0_NSE_RGN_CLR_ALL; /* MRC NonSecure Enable Region Clear All */
  AON_TRDC_MGR_MRC0_GLBAC_tag MRC0_GLBAC[8]; /* MRC Global Access Control */
  AON_TRDC_MGR_MRC0_DOM0_RGD_tag MRC0_DOM0_RGD[8];
  uint8_t AON_TRDC_MGR_reserved209[64];
  AON_TRDC_MGR_MRC0_DOM0_RGD_NSE_tag MRC0_DOM0_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved210[124];
  AON_TRDC_MGR_MRC0_DOM1_RGD_tag MRC0_DOM1_RGD[8];
  uint8_t AON_TRDC_MGR_reserved211[64];
  AON_TRDC_MGR_MRC0_DOM1_RGD_NSE_tag MRC0_DOM1_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved212[124];
  AON_TRDC_MGR_MRC0_DOM2_RGD_tag MRC0_DOM2_RGD[8];
  uint8_t AON_TRDC_MGR_reserved213[64];
  AON_TRDC_MGR_MRC0_DOM2_RGD_NSE_tag MRC0_DOM2_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved214[124];
  AON_TRDC_MGR_MRC0_DOM3_RGD_tag MRC0_DOM3_RGD[8];
  uint8_t AON_TRDC_MGR_reserved215[64];
  AON_TRDC_MGR_MRC0_DOM3_RGD_NSE_tag MRC0_DOM3_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved216[124];
  AON_TRDC_MGR_MRC0_DOM4_RGD_tag MRC0_DOM4_RGD[8];
  uint8_t AON_TRDC_MGR_reserved217[64];
  AON_TRDC_MGR_MRC0_DOM4_RGD_NSE_tag MRC0_DOM4_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved218[124];
  AON_TRDC_MGR_MRC0_DOM5_RGD_tag MRC0_DOM5_RGD[8];
  uint8_t AON_TRDC_MGR_reserved219[64];
  AON_TRDC_MGR_MRC0_DOM5_RGD_NSE_tag MRC0_DOM5_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved220[124];
  AON_TRDC_MGR_MRC0_DOM6_RGD_tag MRC0_DOM6_RGD[8];
  uint8_t AON_TRDC_MGR_reserved221[64];
  AON_TRDC_MGR_MRC0_DOM6_RGD_NSE_tag MRC0_DOM6_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved222[124];
  AON_TRDC_MGR_MRC0_DOM7_RGD_tag MRC0_DOM7_RGD[8];
  uint8_t AON_TRDC_MGR_reserved223[64];
  AON_TRDC_MGR_MRC0_DOM7_RGD_NSE_tag MRC0_DOM7_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved224[124];
  AON_TRDC_MGR_MRC0_DOM8_RGD_tag MRC0_DOM8_RGD[8];
  uint8_t AON_TRDC_MGR_reserved225[64];
  AON_TRDC_MGR_MRC0_DOM8_RGD_NSE_tag MRC0_DOM8_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved226[124];
  AON_TRDC_MGR_MRC0_DOM9_RGD_tag MRC0_DOM9_RGD[8];
  uint8_t AON_TRDC_MGR_reserved227[64];
  AON_TRDC_MGR_MRC0_DOM9_RGD_NSE_tag MRC0_DOM9_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved228[124];
  AON_TRDC_MGR_MRC0_DOM10_RGD_tag MRC0_DOM10_RGD[8];
  uint8_t AON_TRDC_MGR_reserved229[64];
  AON_TRDC_MGR_MRC0_DOM10_RGD_NSE_tag MRC0_DOM10_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved230[124];
  AON_TRDC_MGR_MRC0_DOM11_RGD_tag MRC0_DOM11_RGD[8];
  uint8_t AON_TRDC_MGR_reserved231[64];
  AON_TRDC_MGR_MRC0_DOM11_RGD_NSE_tag MRC0_DOM11_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved232[124];
  AON_TRDC_MGR_MRC0_DOM12_RGD_tag MRC0_DOM12_RGD[8];
  uint8_t AON_TRDC_MGR_reserved233[64];
  AON_TRDC_MGR_MRC0_DOM12_RGD_NSE_tag MRC0_DOM12_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved234[124];
  AON_TRDC_MGR_MRC0_DOM13_RGD_tag MRC0_DOM13_RGD[8];
  uint8_t AON_TRDC_MGR_reserved235[64];
  AON_TRDC_MGR_MRC0_DOM13_RGD_NSE_tag MRC0_DOM13_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved236[124];
  AON_TRDC_MGR_MRC0_DOM14_RGD_tag MRC0_DOM14_RGD[8];
  uint8_t AON_TRDC_MGR_reserved237[64];
  AON_TRDC_MGR_MRC0_DOM14_RGD_NSE_tag MRC0_DOM14_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
  uint8_t AON_TRDC_MGR_reserved238[124];
  AON_TRDC_MGR_MRC0_DOM15_RGD_tag MRC0_DOM15_RGD[8];
  uint8_t AON_TRDC_MGR_reserved239[64];
  AON_TRDC_MGR_MRC0_DOM15_RGD_NSE_tag MRC0_DOM15_RGD_NSE; /* MRC Region Descriptor NonSecure Enable */
};

/* ============================================================================
   =============================== Module: AON_TSTMR ==========================
   ============================================================================ */

typedef union AON_TSTMR_LOW_union_tag { /* Timestamp Timer Low */
  vuint32_t R;
  struct {
    vuint32_t VALUE:32;                /* Timestamp Timer Low */
  } B;
} AON_TSTMR_LOW_tag;

typedef union AON_TSTMR_HIGH_union_tag { /* Timestamp Timer High */
  vuint32_t R;
  struct {
    vuint32_t VALUE:24;                /* Timestamp Timer High */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} AON_TSTMR_HIGH_tag;

struct AON_TSTMR_tag {
  AON_TSTMR_LOW_tag LOW;               /* Timestamp Timer Low */
  AON_TSTMR_HIGH_tag HIGH;             /* Timestamp Timer High */
};

/* ============================================================================
   =============================== Module: M7_A7_MCM ==========================
   ============================================================================ */

typedef union M7_A7_MCM_ERR_INFO_EN_union_tag { /* Error Info Enable */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;            /* Reserved */
    vuint32_t ITCM_ERRM_INFO_EN:1;     /* ITCM Access multi bit ECC Error Info Status Enable */
    vuint32_t ITCM_ERRS_INFO_EN:1;     /* ITCM Access single bit ECC Error Info Status Enable */
    vuint32_t D0TCM_ERRM_INFO_EN:1;    /* D0TCM Access multi bit ECC Error Info Status Enable */
    vuint32_t D0TCM_ERRS_INFO_EN:1;    /* D0TCM Access single bit ECC Error Info Status Enable */
    vuint32_t D1TCM_ERRM_INFO_EN:1;    /* D1TCM Access multi bit ECC Error Info Status Enable */
    vuint32_t D1TCM_ERRS_INFO_EN:1;    /* D1TCM Access single bit ECC Error Info Status Enable */
    vuint32_t _unused_0:18;            /* Reserved */
  } B;
} M7_A7_MCM_ERR_INFO_EN_tag;

typedef union M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_INFO_union_tag { /* ITCM single-bit ECC Error Information */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCS_EFW:1;         /* Read or write of the access */
    vuint32_t ITCM_ECCS_EFSIZ:3;       /* Size of the access */
    vuint32_t ITCM_ECCS_EFMST:4;       /* Encodes the requestor of the access */
    vuint32_t ITCM_ECCS_EFPRT:4;       /* Privilege level of access */
    vuint32_t _unused_12:8;
    vuint32_t RESERVED:12;             /* Reserved */
  } B;
} M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_INFO_tag;

typedef union M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_ADDR_union_tag { /* ITCM single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCS_ERRED_ADDR:32; /* ITCM single-bit ECC error address */
  } B;
} M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_ADDR_tag;

typedef union M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_LSB_union_tag { /* ITCM single-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCS_ERRED_DATA_LSB:32; /* ITCM single-bit ECC error data [31:0] */
  } B;
} M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_LSB_tag;

typedef union M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_MSB_union_tag { /* ITCM single-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCS_ERRED_DATA_MSB:32; /* ITCM single-bit ECC error data [63:32] */
  } B;
} M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_MSB_tag;

typedef union M7_A7_MCM_ITCM_ECC_MULTI_ERROR_INFO_union_tag { /* ITCM multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCM_EFW:1;         /* ITCM multi-bit ECC error corresponding tcm_wr value */
    vuint32_t ITCM_ECCM_EFSIZ:3;       /* ITCM multi-bit ECC error corresponding tcm access size */
    vuint32_t ITCM_ECCM_EFMST:4;       /* ITCM multi-bit ECC error corresponding tcm_master */
    vuint32_t ITCM_ECCM_EFPRT:4;       /* ITCM multi-bit ECC error corresponding tcm_priv */
    vuint32_t _unused_12:8;
    vuint32_t RESERVED:12;             /* Reserved */
  } B;
} M7_A7_MCM_ITCM_ECC_MULTI_ERROR_INFO_tag;

typedef union M7_A7_MCM_ITCM_ECC_MULTI_ERROR_ADDR_union_tag { /* ITCM multi-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCM_ERRED_ADDR:32; /* ITCM multi-bit ECC error address */
  } B;
} M7_A7_MCM_ITCM_ECC_MULTI_ERROR_ADDR_tag;

typedef union M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_LSB_union_tag { /* ITCM multi-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCM_ERRED_DATA_LSB:32; /* ITCM multi-bit ECC error data [31:0] */
  } B;
} M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_LSB_tag;

typedef union M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_MSB_union_tag { /* ITCM multi-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t ITCM_ECCM_ERRED_DATA_MSB:32; /* ITCM multi-bit ECC error data [63:32] */
  } B;
} M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_MSB_tag;

typedef union M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_INFO_union_tag { /* D0TCM single-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCS_EFW:1;        /* D0TCM single-bit ECC error corresponding tcm_wr value */
    vuint32_t D0TCM_ECCS_EFSIZ:3;      /* D0TCM single-bit ECC error corresponding tcm access size */
    vuint32_t D0TCM_ECCS_EFMST:4;      /* D0TCM single-bit ECC error corresponding tcm_master */
    vuint32_t D0TCM_ECCS_EFPRT:4;      /* D0TCM single-bit ECC error corresponding tcm_priv */
    vuint32_t _unused_13:7;
    vuint32_t RESERVED:13;             /* Reserved */
  } B;
} M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_INFO_tag;

typedef union M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_ADDR_union_tag { /* D0TCM single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCS_ERRED_ADDR:32; /* D0TCM single-bit ECC error address */
  } B;
} M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_ADDR_tag;

typedef union M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_DATA_union_tag { /* D0TCM single-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCS_ERRED_DATA:32; /* D0TCM single-bit ECC error data */
  } B;
} M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_DATA_tag;

typedef union M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_INFO_union_tag { /* D0TCM multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCM_EFW:1;        /* D0TCM multi-bit ECC error corresponding tcm_wr value */
    vuint32_t D0TCM_ECCM_EFSIZ:3;      /* D0TCM multi-bit ECC error corresponding tcm access size */
    vuint32_t D0TCM_ECCM_EFMST:4;      /* D0TCM multi-bit ECC error corresponding tcm_master */
    vuint32_t D0TCM_ECCM_EFPRT:4;      /* D0TCM multi-bit ECC error corresponding tcm_priv */
    vuint32_t _unused_13:7;
    vuint32_t RESERVED:13;             /* Reserved */
  } B;
} M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_INFO_tag;

typedef union M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_ADDR_union_tag { /* D0TCM multi-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCM_ERRED_ADDR:32; /* D0TCM multi-bit ECC error address */
  } B;
} M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_ADDR_tag;

typedef union M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_DATA_union_tag { /* D0TCM multi-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t D0TCM_ECCM_ERRED_DATA:32; /* D0TCM multi-bit ECC error data */
  } B;
} M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_DATA_tag;

typedef union M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_INFO_union_tag { /* D1TCM single-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCS_EFW:1;        /* D1TCM single-bit ECC error corresponding tcm_wr value */
    vuint32_t D1TCM_ECCS_EFSIZ:3;      /* D1TCM single-bit ECC error corresponding tcm access size */
    vuint32_t D1TCM_ECCS_EFMST:4;      /* D1TCM single-bit ECC error corresponding tcm_master */
    vuint32_t D1TCM_ECCS_EFPRT:4;      /* D1TCM single-bit ECC error corresponding tcm_priv */
    vuint32_t _unused_13:7;
    vuint32_t RESERVED:13;             /* Reserved */
  } B;
} M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_INFO_tag;

typedef union M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_ADDR_union_tag { /* D1TCM single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCS_ERRED_ADDR:32; /* D1TCM single-bit ECC error address */
  } B;
} M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_ADDR_tag;

typedef union M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_DATA_union_tag { /* D1TCM single-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCS_ERRED_DATA:32; /* D1TCM single-bit ECC error data */
  } B;
} M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_DATA_tag;

typedef union M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_INFO_union_tag { /* D1TCM multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCM_EFW:1;        /* D1TCM multi-bit ECC error corresponding tcm_wr value */
    vuint32_t D1TCM_ECCM_EFSIZ:3;      /* D1TCM multi-bit ECC error corresponding tcm access size */
    vuint32_t D1TCM_ECCM_EFMST:4;      /* D1TCM multi-bit ECC error corresponding tcm_master */
    vuint32_t D1TCM_ECCM_EFPRT:4;      /* D1TCM multi-bit ECC error corresponding tcm_priv */
    vuint32_t _unused_13:7;
    vuint32_t RESERVED:13;             /* Reserved */
  } B;
} M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_INFO_tag;

typedef union M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_ADDR_union_tag { /* D1TCM multi-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCM_ERRED_ADDR:32; /* D1TCM multi-bit ECC error address */
  } B;
} M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_ADDR_tag;

typedef union M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_DATA_union_tag { /* D1TCM multi-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t D1TCM_ECCM_ERRED_DATA:32; /* D1TCM multi-bit ECC error data */
  } B;
} M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_DATA_tag;

typedef union M7_A7_MCM_FCCU_SW_FAULTS_union_tag { /* FCCU Software Faults */
  vuint32_t R;
  struct {
    vuint32_t FCCU_SW_FAULTS:6;        /* FCCU Software Faults */
    vuint32_t _unused_0:26;
  } B;
} M7_A7_MCM_FCCU_SW_FAULTS_tag;

struct M7_A7_MCM_tag {
  uint8_t M7_A7_MCM_reserved0[36];
  M7_A7_MCM_ERR_INFO_EN_tag ERR_INFO_EN; /* Error Info Enable */
  uint8_t M7_A7_MCM_reserved1[20];
  M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_INFO_tag ITCM_ECC_SINGLE_ERROR_INFO; /* ITCM single-bit ECC Error Information */
  M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_ADDR_tag ITCM_ECC_SINGLE_ERROR_ADDR; /* ITCM single-bit ECC Error Address Register */
  M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_LSB_tag ITCM_ECC_SINGLE_ERROR_DATA_LSB; /* ITCM single-bit ECC Error Data Register */
  M7_A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_MSB_tag ITCM_ECC_SINGLE_ERROR_DATA_MSB; /* ITCM single-bit ECC Error Data Register */
  M7_A7_MCM_ITCM_ECC_MULTI_ERROR_INFO_tag ITCM_ECC_MULTI_ERROR_INFO; /* ITCM multi-bit ECC Error Information Register */
  M7_A7_MCM_ITCM_ECC_MULTI_ERROR_ADDR_tag ITCM_ECC_MULTI_ERROR_ADDR; /* ITCM multi-bit ECC Error Address Register */
  M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_LSB_tag ITCM_ECC_MULTI_ERROR_DATA_LSB; /* ITCM multi-bit ECC Error Data Register */
  M7_A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_MSB_tag ITCM_ECC_MULTI_ERROR_DATA_MSB; /* ITCM multi-bit ECC Error Data Register */
  M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_INFO_tag D0TCM_ECC_SINGLE_ERROR_INFO; /* D0TCM single-bit ECC Error Information Register */
  M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_ADDR_tag D0TCM_ECC_SINGLE_ERROR_ADDR; /* D0TCM single-bit ECC Error Address Register */
  M7_A7_MCM_D0TCM_ECC_SINGLE_ERROR_DATA_tag D0TCM_ECC_SINGLE_ERROR_DATA; /* D0TCM single-bit ECC Error Data Register */
  M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_INFO_tag D0TCM_ECC_MULTI_ERROR_INFO; /* D0TCM multi-bit ECC Error Information Register */
  M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_ADDR_tag D0TCM_ECC_MULTI_ERROR_ADDR; /* D0TCM multi-bit ECC Error Address Register */
  M7_A7_MCM_D0TCM_ECC_MULTI_ERROR_DATA_tag D0TCM_ECC_MULTI_ERROR_DATA; /* D0TCM multi-bit ECC Error Data Register */
  M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_INFO_tag D1TCM_ECC_SINGLE_ERROR_INFO; /* D1TCM single-bit ECC Error Information Register */
  M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_ADDR_tag D1TCM_ECC_SINGLE_ERROR_ADDR; /* D1TCM single-bit ECC Error Address Register */
  M7_A7_MCM_D1TCM_ECC_SINGLE_ERROR_DATA_tag D1TCM_ECC_SINGLE_ERROR_DATA; /* D1TCM single-bit ECC Error Data Register */
  M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_INFO_tag D1TCM_ECC_MULTI_ERROR_INFO; /* D1TCM multi-bit ECC Error Information Register */
  M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_ADDR_tag D1TCM_ECC_MULTI_ERROR_ADDR; /* D1TCM multi-bit ECC Error Address Register */
  M7_A7_MCM_D1TCM_ECC_MULTI_ERROR_DATA_tag D1TCM_ECC_MULTI_ERROR_DATA; /* D1TCM multi-bit ECC Error Data Register */
  uint8_t M7_A7_MCM_reserved2[16];
  M7_A7_MCM_FCCU_SW_FAULTS_tag FCCU_SW_FAULTS; /* FCCU Software Faults */
};

/* ============================================================================
   =============================== Module: CACHE_ECC_MCM ======================
   ============================================================================ */

typedef union CACHE_ECC_MCM_CACHE_ECCR_union_tag { /* CACHE ECC Control Register */
  vuint32_t R;
  struct {
    vuint32_t WECC_DIS:1;              /* Disable CACHE ECC Write Generation */
    vuint32_t RECC_DIS:1;              /* Disable Cache ECC Read Check */
    vuint32_t _unused_0:30;
  } B;
} CACHE_ECC_MCM_CACHE_ECCR_tag;

typedef union CACHE_ECC_MCM_INT_STATUS_union_tag { /* Interrupt Status Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t CODE_CACHE_ECC_ERRM_INT:1; /* CODE CACHE Access multi-bit ECC Error Interrupt Status */
    vuint32_t CODE_CACHE_ECC_ERRS_INT:1; /* CODE CACHE access single-bit ECC Error Interrupt Status */
    vuint32_t CODE_CACHE_ECC_ERRM_OVER_INT:1; /* CODE CACHE access more than one multi-bit ECC Error Interrupt Status */
    vuint32_t CODE_CACHE_ECC_ERRS_OVER_INT:1; /* CODE CACHE access more than one single-bit ECC Error Interrupt Status */
    vuint32_t SYSTEM_CACHE_ECC_ERRM_INT:1; /* SYSTEM CACHE access multi-bit ECC Error Interrupt Status */
    vuint32_t SYSTEM_CACHE_ECC_ERRS_INT:1; /* SYSTEM CACHE access single-bit ECC Error Interrupt Status */
    vuint32_t SYSTEM_CACHE_ECC_ERRM_OVER_INT:1; /* SYSTEM CACHE access more than one multi-bit ECC Error Interrupt Status */
    vuint32_t SYSTEM_CACHE_ECC_ERRS_OVER_INT:1; /* SYSTEM CACHE access more than one multi-bit ECC Error Interrupt Status */
    vuint32_t _unused_0:16;
  } B;
} CACHE_ECC_MCM_INT_STATUS_tag;

typedef union CACHE_ECC_MCM_INT_STAT_EN_union_tag { /* Interrupt Status Enable Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t CODE_CACHE_ERRM_INT_EN:1; /* CODE CACHE Access multi bit ECC Error Interrupt Status Enable */
    vuint32_t CODE_CACHE_ERRS_INT_EN:1; /* CODE CACHE Access single bit ECC Error Interrupt Status Enable */
    vuint32_t CODE_CACHE_ERRM_OVER_INT_EN:1; /* CODE CACHE Access more than multi bit ECC Error Interrupt Status Enable */
    vuint32_t CODE_CACHE_ERRS_OVER_INT_EN:1; /* CODE CACHE Access more than single bit ECC Error Interrupt Status Enable */
    vuint32_t SYSTEM_CACHE_ECC_ERRM_INT_EN:1; /* SYSTEM CACHE Access multi bit ECC Error Interrupt Status Enable */
    vuint32_t SYSTEM_CACHE_ECC_ERRS_INT_EN:1; /* SYSTEM CACHE Access single bit ECC Error Interrupt Status Enable */
    vuint32_t SYSTEM_CACHE_ECC_ERRM_OVER_INT_EN:1; /* SYSTEM CACHE Access more than one multi bit ECC Error Interrupt Status Enable */
    vuint32_t SYSTEM_CACHE_ECC_ERRS_OVER_INT_EN:1; /* SYSTEM CACHE Access more than one single bit ECC Error Interrupt Status Enable */
    vuint32_t _unused_0:16;
  } B;
} CACHE_ECC_MCM_INT_STAT_EN_tag;

typedef union CACHE_ECC_MCM_INT_SIG_EN_union_tag { /* Interrupt Enable Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t CODE_CACHE_ERRM_INT_SIG_EN:1; /* CODE CACHE Access multi bit ECC Error Interrupt Signal Enable */
    vuint32_t CODE_CACHE_ERRS_INT_SIG_EN:1; /* CODE CACHE Access single bit ECC Error Interrupt Signal Enable */
    vuint32_t CODE_CACHE_ERRM_OVER_INT_SIG_EN:1; /* CODE CACHE Access more than one multi bit ECC Error Interrupt Signal Enable */
    vuint32_t CODE_CACHE_ERRS_OVER_INT_SIG_EN:1; /* CODE CACHE Access more than one single bit ECC Error Interrupt Signal Enable */
    vuint32_t SYSTEM_CACHE_ERRM_INT_SIG_EN:1; /* SYSTEM CACHE Access multi bit ECC Error Interrupt Signal Enable */
    vuint32_t SYSTEM_CACHE_ERRS_INT_SIG_EN:1; /* SYSTEM CACHE Access single bit ECC Error Interrupt Signal Enable */
    vuint32_t SYSTEM_CACHE_ERRM_OVER_INT_SIG_EN:1; /* SYSTEM CACHE Access more than one multi bit ECC Error Interrupt Signal Enable */
    vuint32_t SYSTEM_CACHE_ERRS_OVER_INT_SIG_EN:1; /* SYSTEM CACHE Access single bit ECC Error Interrupt Signal Enable */
    vuint32_t _unused_0:16;
  } B;
} CACHE_ECC_MCM_INT_SIG_EN_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_INFO_union_tag { /* CODE CACHE single bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_ECCS_TAG:1;   /* CODE CACHE single bit ECC error */
    vuint32_t CODE_CACHE_ECCS_CMD:1;   /* CODE CACHE single bit ECC error on cache command */
    vuint32_t _unused_28:2;
    vuint32_t CODE_CACHE_ECCS_EFMST:4; /* CODE CACHE single bit ECC error master number */
    vuint32_t CODE_CACHE_ECCS_EFPRT:6; /* CODE CACHE single bit ECC error protection field */
    vuint32_t _unused_16:2;
    vuint32_t CODE_CACHE_ECCS_EFSYN:7; /* CODE CACHE single bit ECC error corresponding syndrome */
    vuint32_t _unused_0:9;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_INFO_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_ADDR_union_tag { /* CODE_CACHE single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_ECCS_ERRED_ADDR:32; /* CODE CACHE single-bit ECC error address */
  } B;
} CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_ADDR_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_ECC_MULTI_ERROR_INFO_union_tag { /* CODE CACHE multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_ECCM_TAG:1;   /* CODE CACHE multiple bit ECC error */
    vuint32_t CODE_CACHE_ECCM_CMD:1;   /* CODE CACHE multiple bit ECC error on code cache command */
    vuint32_t _unused_28:2;
    vuint32_t CODE_CACHE_ECCM_EFMST:4; /* CODE CACHE multi-bit ECC error master number */
    vuint32_t CODE_CACHE_ECCM_EFPRT:6; /* CODE CACHE multi-bit ECC error protection field */
    vuint32_t _unused_16:2;
    vuint32_t CODE_CACHE_ECCM_EFSYN:7; /* CODE CACHE multi-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:9;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_ECC_MULTI_ERROR_INFO_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO_union_tag { /* SYSTEM CACHE single bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_ECCS_TAG:1; /* SYSTEM CACHE single bit ECC error */
    vuint32_t SYSTEM_CACHE_ECCS_CMD:1; /* SYSTEM CACHE single bit ECC error on cache command */
    vuint32_t _unused_28:2;
    vuint32_t SYSTEM_CACHE_ECCS_EFMST:4; /* SYSTEM CACHE single bit ECC error master number */
    vuint32_t SYSTEM_CACHE_ECCS_EFPRT:6; /* SYSTEM CACHE single bit ECC error protection field */
    vuint32_t _unused_16:2;
    vuint32_t SYSTEM_CACHE_ECCS_EFSYN:7; /* SYSTEM CACHE single bit ECC error corresponding syndrome */
    vuint32_t _unused_0:9;
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR_union_tag { /* SYSTEM_CACHE single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_ECCS_ERRED_ADDR:32; /* SYSTEM CACHE single-bit ECC error address */
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_INFO_union_tag { /* SYSTEM CACHE multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_ECCM_TAG:1; /* SYSTEM CACHE multiple bit ECC error */
    vuint32_t SYSTEM_CACHE_ECCM_CMD:1; /* SYSTEM CACHE multiple bit ECC error on SYSTEM CACHE command */
    vuint32_t _unused_28:2;
    vuint32_t SYSTEM_CACHE_ECCM_EFMST:4; /* SYSTEM CACHE multi-bit ECC error master number */
    vuint32_t SYSTEM_CACHE_ECCM_EFPRT:6; /* SYSTEM CACHE multi-bit ECC error protection field */
    vuint32_t _unused_16:2;
    vuint32_t SYSTEM_CACHE_ECCM_EFSYN:7; /* SYSTEM CACHE multi-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:9;
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_INFO_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_DATA_union_tag { /* SYSTEM CACHE multi-bit ECC Error Data Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_ECCM_ERRED_DATA:32; /* SYSTEM CACHE multi-bit ECC error data */
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_DATA_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_TAG0_ECC_ERROR_INJEC_union_tag { /* CODE CACHE TAG0 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_TAG0_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t CODE_CACHE_TAG0_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error. */
    vuint32_t _unused_16:1;
    vuint32_t CODE_CACHE_TAG0_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t CODE_CACHE_TAG0_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t CODE_CACHE_TAG0_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t CODE_CACHE_TAG0_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_TAG0_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_TAG1_ECC_ERROR_INJEC_union_tag { /* CODE CACHE TAG1 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_TAG1_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t CODE_CACHE_TAG1_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error. */
    vuint32_t _unused_16:1;
    vuint32_t CODE_CACHE_TAG1_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on CODE CACHE TAG1 write access */
    vuint32_t CODE_CACHE_TAG1_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on CODE CACHE TAG1 write access */
    vuint32_t CODE_CACHE_TAG1_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE_CACHE_TAG1 write access */
    vuint32_t CODE_CACHE_TAG1_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE CACHE TAG1 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_TAG1_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_DATA0_ECC_ERROR_INJEC_union_tag { /* CODE CACHE DATA0 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_DATA0_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t CODE_CACHE_DATA0_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t _unused_16:1;
    vuint32_t CODE_CACHE_DATA0_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on CODE CACHE DATA0 write access */
    vuint32_t CODE_CACHE_DATA0_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on CODE CACHE DATA0 write access */
    vuint32_t CODE_CACHE_DATA0_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE CACHE DATA0 write access */
    vuint32_t CODE_CACHE_DATA0_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE_CACHE_DATA0 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_DATA0_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_CODE_CACHE_DATA1_ECC_ERROR_INJEC_union_tag { /* CODE CACHE DATA1 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_CACHE_DATA1_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection */
    vuint32_t _unused_24:1;
    vuint32_t CODE_CACHE_DATA1_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t _unused_16:1;
    vuint32_t CODE_CACHE_DATA1_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on CODE CACHE DATA1 write access */
    vuint32_t CODE_CACHE_DATA1_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on CODE CACHE DATA1 write access */
    vuint32_t CODE_CACHE_DATA1_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE CACHE DATA1 write access */
    vuint32_t CODE_CACHE_DATA1_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE CACHE DATA1 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_CODE_CACHE_DATA1_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_SYTEM_CACHE_TAG0_ECC_ERROR_INJEC_union_tag { /* SYSTEM CACHE TAG0 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_TAG0_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t SYSTEM_CACHE_TAG0_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error. */
    vuint32_t _unused_16:1;
    vuint32_t SYSTEM_CACHE_TAG0_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on SYSTEM CACHE TAG0 write access */
    vuint32_t SYSTEM_CACHE_TAG0_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on SYSTEM CACHE TAG0 write access */
    vuint32_t SYSTEM_CACHE_TAG0_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t SYSTEM_CACHE_TAG0_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE CACHE TAG0 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_SYTEM_CACHE_TAG0_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC_union_tag { /* SYSTEM CACHE TAG1 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_TAG1_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t SYSTEMCACHE_TAG1_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error. */
    vuint32_t _unused_16:1;
    vuint32_t SYSTEM_CACHE_TAG1_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on SYSTEM CACHE TAG1 write access */
    vuint32_t SYSTEM_CACHE_TAG1_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on SYSTEM CACHE TAG1 write access */
    vuint32_t SYSTEM_CACHE_TAG1_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on SYSTEM_CACHE_TAG1 write access */
    vuint32_t SYSTEM_CACHE_TAG1_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on SYSTEM CACHE TAG1 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC_union_tag { /* SYSTEM CACHE DATA0 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_DATA0_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t _unused_24:1;
    vuint32_t SYSTEM_CACHE_DATA0_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t _unused_16:1;
    vuint32_t SYSTEM_CACHE_DATA0_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on SYSTEM CACHE DATA0 write access */
    vuint32_t SYSTEM_CACHE_DATA0_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on SYSTEM CACHE DATA0 write access */
    vuint32_t SYSTEM_CACHE_DATA0_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on SYSTEM CACHE DATA0 write access */
    vuint32_t SYSTEM_CACHE_DATA0_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on SYSTEM CACHE DATA0 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_STSTEM_CACHE_DATA1_ECC_ERROR_INJEC_union_tag { /* SYSTEM CACHE DATA1 ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t SYSTEM_CACHE_DATA1_ERR1BIT:7; /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection */
    vuint32_t _unused_24:1;
    vuint32_t SYSTEM_CACHE_DATA1_ERR2BIT:7; /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t _unused_16:1;
    vuint32_t SYSTEM_CACHE_DATA1_FR11BI:1; /* Force One 1-Bit Data Inversion(single-bit ECC error) on SYSTEM CACHE DATA1 write access */
    vuint32_t SYSTEM_CACHE_DATA1_FR1NCI:1; /* Force One Non-correctable Data Inversion(multi-bit ECC error) on SYSTEM CACHE DATA1 write access */
    vuint32_t SYSTEM_CACHE_DATA1_FRC1BI:1; /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on SYSTEM CACHE DATA1 write access */
    vuint32_t SYSTEM_CACHE_DATA1_FRCNCI:1; /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on SYSTEM CACHE DATA1 write access */
    vuint32_t _unused_0:12;
  } B;
} CACHE_ECC_MCM_STSTEM_CACHE_DATA1_ECC_ERROR_INJEC_tag;

typedef union CACHE_ECC_MCM_FCCU_SW_FAULTS_union_tag { /* FCCU Software Faults */
  vuint32_t R;
  struct {
    vuint32_t FCCU_SW_FAULTS:6;        /* The software can write these bits when it encounters an internal software error. Whenever software writes to this register, FCCU alarm is generated. The value of this bitfield is retained until reset or software writes to this register. */
    vuint32_t _unused_0:26;
  } B;
} CACHE_ECC_MCM_FCCU_SW_FAULTS_tag;

struct CACHE_ECC_MCM_tag {
  CACHE_ECC_MCM_CACHE_ECCR_tag CACHE_ECCR; /* CACHE ECC Control Register */
  uint8_t CACHE_ECC_MCM_reserved0[28];
  CACHE_ECC_MCM_INT_STATUS_tag INT_STATUS; /* Interrupt Status Register */
  CACHE_ECC_MCM_INT_STAT_EN_tag INT_STAT_EN; /* Interrupt Status Enable Register */
  CACHE_ECC_MCM_INT_SIG_EN_tag INT_SIG_EN; /* Interrupt Enable Register */
  uint8_t CACHE_ECC_MCM_reserved1[48];
  CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_INFO_tag CODE_CACHE_ECC_SINGLE_ERROR_INFO; /* CODE CACHE single bit ECC Error Information Register */
  CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_ADDR_tag CODE_CACHE_ECC_SINGLE_ERROR_ADDR; /* CODE_CACHE single-bit ECC Error Address Register */
  uint8_t CACHE_ECC_MCM_reserved2[4];
  CACHE_ECC_MCM_CODE_CACHE_ECC_MULTI_ERROR_INFO_tag CODE_CACHE_ECC_MULTI_ERROR_INFO; /* CODE CACHE multi-bit ECC Error Information Register */
  uint8_t CACHE_ECC_MCM_reserved3[8];
  CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO_tag SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO; /* SYSTEM CACHE single bit ECC Error Information Register */
  CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR_tag SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR; /* SYSTEM_CACHE single-bit ECC Error Address Register */
  uint8_t CACHE_ECC_MCM_reserved4[4];
  CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_INFO_tag SYSTEM_CACHE_ECC_MULTI_ERROR_INFO; /* SYSTEM CACHE multi-bit ECC Error Information Register */
  CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_DATA_tag SYSTEM_CACHE_ECC_MULTI_ERROR_DATA; /* SYSTEM CACHE multi-bit ECC Error Data Register */
  uint8_t CACHE_ECC_MCM_reserved5[4];
  CACHE_ECC_MCM_CODE_CACHE_TAG0_ECC_ERROR_INJEC_tag CODE_CACHE_TAG0_ECC_ERROR_INJEC; /* CODE CACHE TAG0 ECC Error Injection Register */
  CACHE_ECC_MCM_CODE_CACHE_TAG1_ECC_ERROR_INJEC_tag CODE_CACHE_TAG1_ECC_ERROR_INJEC; /* CODE CACHE TAG1 ECC Error Injection Register */
  CACHE_ECC_MCM_CODE_CACHE_DATA0_ECC_ERROR_INJEC_tag CODE_CACHE_DATA0_ECC_ERROR_INJEC; /* CODE CACHE DATA0 ECC Error Injection Register */
  CACHE_ECC_MCM_CODE_CACHE_DATA1_ECC_ERROR_INJEC_tag CODE_CACHE_DATA1_ECC_ERROR_INJEC; /* CODE CACHE DATA1 ECC Error Injection Register */
  CACHE_ECC_MCM_SYTEM_CACHE_TAG0_ECC_ERROR_INJEC_tag SYTEM_CACHE_TAG0_ECC_ERROR_INJEC; /* SYSTEM CACHE TAG0 ECC Error Injection Register */
  CACHE_ECC_MCM_SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC_tag SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC; /* SYSTEM CACHE TAG1 ECC Error Injection Register */
  CACHE_ECC_MCM_SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC_tag SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC; /* SYSTEM CACHE DATA0 ECC Error Injection Register */
  CACHE_ECC_MCM_STSTEM_CACHE_DATA1_ECC_ERROR_INJEC_tag STSTEM_CACHE_DATA1_ECC_ERROR_INJEC; /* SYSTEM CACHE DATA1 ECC Error Injection Register */
  CACHE_ECC_MCM_FCCU_SW_FAULTS_tag FCCU_SW_FAULTS; /* FCCU Software Faults */
};

/* ============================================================================
   =============================== Module: TCM_ECC_MCM ========================
   ============================================================================ */

typedef union TCM_ECC_MCM_TCMECCR_union_tag { /* TCM ECC Control Register */
  vuint32_t R;
  struct {
    vuint32_t WECC_DIS:1;              /* Disable TCM ECC Write Generation */
    vuint32_t RECC_DIS:1;              /* Disable TCM ECC Read Check */
    vuint32_t _unused_0:30;
  } B;
} TCM_ECC_MCM_TCMECCR_tag;

typedef union TCM_ECC_MCM_INT_STATUS_union_tag { /* Interrupt Status Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t _unused_22:2;
    vuint32_t CODE_TCM_ECC_ERRM_INT:1; /* CODE_TCM access multi-bit ECC Error Interrupt Status */
    vuint32_t CODE_TCM_ECC_ERRS_INT:1; /* CODE_TCM access single-bit ECC Error Interrupt Status */
    vuint32_t SYS_TCM_ECC_ERRM_INT:1;  /* SYS_TCM access multi-bit ECC Error Interrupt Status */
    vuint32_t SYS_TCM_ECC_ERRS_INT:1;  /* SYS_TCM access single-bit ECC Error Interrupt Status */
    vuint32_t _unused_0:18;
  } B;
} TCM_ECC_MCM_INT_STATUS_tag;

typedef union TCM_ECC_MCM_INT_STAT_EN_union_tag { /* Interrupt Status Enable Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t _unused_22:2;
    vuint32_t CODE_TCM_ERRM_INT_EN:1;  /* CODE_TCM Access multi bit ECC Error Interrupt Status Enable */
    vuint32_t CODE_TCM_ERRS_INT_EN:1;  /* CODE_TCM Access single bit ECC Error Interrupt Status Enable */
    vuint32_t SYS_TCM_ERRM_INT_EN:1;   /* SYS_TCM Access multi bit ECC Error Interrupt Status Enable */
    vuint32_t SYS_TCM_ERRS_INT_EN:1;   /* SYS_TCM Access single bit ECC Error Interrupt Status Enable */
    vuint32_t _unused_0:18;
  } B;
} TCM_ECC_MCM_INT_STAT_EN_tag;

typedef union TCM_ECC_MCM_INT_SIG_EN_union_tag { /* Interrupt Enable Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t _unused_22:2;
    vuint32_t CODE_TCM_ERRM_INT_SIG_EN:1; /* CODE_TCM Access multi bit ECC Error Interrupt Signal Enable */
    vuint32_t CODE_TCM_ERRS_INT_SIG_EN:1; /* CODE_TCM Access single bit ECC Error Interrupt Signal Enable */
    vuint32_t SYS_TCM_ERRM_INT_SIG_EN:1; /* SYS_TCM Access multi bit ECC Error Interrupt Signal Enable */
    vuint32_t SYS_TCM_ERRS_INT_SIG_EN:1; /* SYS_TCM Access single bit ECC Error Interrupt Signal Enable */
    vuint32_t _unused_0:18;
  } B;
} TCM_ECC_MCM_INT_SIG_EN_tag;

typedef union TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_INFO_union_tag { /* CODE_TCM single-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t CODE_TCM_ECCS_EFSIZ:3;   /* CODE_TCM single-bit ECC error corresponding TCM access size */
    vuint32_t CODE_TCM_ECCS_EFMST:4;   /* CODE_TCM single-bit ECC error corresponding tcm_master */
    vuint32_t CODE_TCM_ECCS_EFPRT:4;   /* CODE_TCM single-bit ECC error corresponding tcm_priv */
    vuint32_t CODE_TCM_ECCS_EFSYN:7;   /* CODE_TCM single-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:13;
  } B;
} TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_INFO_tag;

typedef union TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_ADDR_union_tag { /* CODE_TCM single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_TCM_ECCS_ERRED_ADDR:32; /* CODE_TCM single-bit ECC error address */
  } B;
} TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_ADDR_tag;

typedef union TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_INFO_union_tag { /* CODE_TCM multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t CODE_TCM_ECCM_EFSIZ:3;   /* CODE_TCM multi-bit ECC error corresponding TCM access size */
    vuint32_t CODE_TCM_ECCM_EFMST:4;   /* CODE_TCM multi-bit ECC error corresponding tcm_master */
    vuint32_t CODE_TCM_ECCM_EFPRT:4;   /* CODE_TCM multi-bit ECC error corresponding tcm_priv */
    vuint32_t CODE_TCM_ECCM_EFSYN:7;   /* CODE_TCM multi-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:13;
  } B;
} TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_INFO_tag;

typedef union TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_ADDR_union_tag { /* CODE_TCM multi-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_TCM_ECCM_ERRED_ADDR:32; /* CODE_TCM multi-bit ECC error address */
  } B;
} TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_ADDR_tag;

typedef union TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_INFO_union_tag { /* SYS_TCM single-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t SYS_TCM_ECCS_EFSIZ:3;    /* SYS_TCM single-bit ECC error corresponding TCM access size */
    vuint32_t SYS_TCM_ECCS_EFMST:4;    /* SYS_TCM single-bit ECC error corresponding tcm_master */
    vuint32_t SYS_TCM_ECCS_EFPRT:4;    /* SYS_TCM single-bit ECC error corresponding tcm_priv */
    vuint32_t SYS_TCM_ECCS_EFSYN:7;    /* SYS_TCM single-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:13;
  } B;
} TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_INFO_tag;

typedef union TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_ADDR_union_tag { /* SYS_TCM single-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t SYS_TCM_ECCS_ERRED_ADDR:32; /* SYS_TCM single-bit ECC error address */
  } B;
} TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_ADDR_tag;

typedef union TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_INFO_union_tag { /* SYS_TCM multi-bit ECC Error Information Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t SYS_TCM_ECCM_EFSIZ:3;    /* SYS_TCM multi-bit ECC error corresponding TCM access size */
    vuint32_t SYS_TCM_ECCM_EFMST:4;    /* SYS_TCM multi-bit ECC error corresponding tcm_master */
    vuint32_t SYS_TCM_ECCM_EFPRT:4;    /* SYS_TCM multi-bit ECC error corresponding tcm_priv */
    vuint32_t SYS_TCM_ECCM_EFSYN:7;    /* SYS_TCM multi-bit ECC error corresponding syndrome */
    vuint32_t _unused_0:13;
  } B;
} TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_INFO_tag;

typedef union TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_ADDR_union_tag { /* SYS_TCM multi-bit ECC Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t SYS_TCM_ECCM_ERRED_ADDR:32; /* SYS_TCM multi-bit ECC error address */
  } B;
} TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_ADDR_tag;

typedef union TCM_ECC_MCM_CODE_TCM_ECC_ERROR_INJEC_union_tag { /* CODE_TCM ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t CODE_TCM_ERR1BIT:8;      /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection. */
    vuint32_t CODE_TCM_ERR2BIT:8;      /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t CODE_TCM_FR11BI:1;       /* Force One 1-Bit Data Inversion(single-bit ECC error) on CODE_TCM write access */
    vuint32_t CODE_TCM_FR1NCI:1;       /* Force One Non-correctable Data Inversion(multi-bit ECC error) on CODE_TCM write access */
    vuint32_t CODE_TCM_FRC1BI:1;       /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on CODE_TCM write access */
    vuint32_t CODE_TCM_FRCNCI:1;       /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on CODE_TCM write access */
    vuint32_t _unused_0:12;
  } B;
} TCM_ECC_MCM_CODE_TCM_ECC_ERROR_INJEC_tag;

typedef union TCM_ECC_MCM_SYS_TCM_ECC_ERROR_INJEC_union_tag { /* SYS_TCM ECC Error Injection Register */
  vuint32_t R;
  struct {
    vuint32_t SYS_TCM_ERR1BIT:8;       /* Bit position of the bit to inject ECC Error. Can be used for single-bit and multi-bit ECC Error injection */
    vuint32_t SYS_TCM_ERR2BIT:8;       /* Bit position of the second bit to inject multi-bit ECC Error */
    vuint32_t SYS_TCM_FR11BI:1;        /* Force One 1-Bit Data Inversion(single-bit ECC error) on SYS_TCM write access */
    vuint32_t SYS_TCM_FR1NCI:1;        /* Force One Non-correctable Data Inversion(multi-bit ECC error) on SYS_TCM write access */
    vuint32_t SYS_TCM_FRC1BI:1;        /* Force Continuous 1-Bit Data Inversions (single-bit ECC error) on SYS_TCM write access */
    vuint32_t SYS_TCM_FRCNCI:1;        /* Force Continuous Non-correctable Data Inversions (multi-bit ECC error) on SYS_TCM write access */
    vuint32_t _unused_0:12;
  } B;
} TCM_ECC_MCM_SYS_TCM_ECC_ERROR_INJEC_tag;

struct TCM_ECC_MCM_tag {
  uint8_t TCM_ECC_MCM_reserved0[4];
  TCM_ECC_MCM_TCMECCR_tag TCMECCR;     /* TCM ECC Control Register */
  uint8_t TCM_ECC_MCM_reserved1[24];
  TCM_ECC_MCM_INT_STATUS_tag INT_STATUS; /* Interrupt Status Register */
  TCM_ECC_MCM_INT_STAT_EN_tag INT_STAT_EN; /* Interrupt Status Enable Register */
  TCM_ECC_MCM_INT_SIG_EN_tag INT_SIG_EN; /* Interrupt Enable Register */
  uint8_t TCM_ECC_MCM_reserved2[48];
  TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_INFO_tag CODE_TCM_ECC_SINGLE_ERROR_INFO; /* CODE_TCM single-bit ECC Error Information Register */
  TCM_ECC_MCM_CODE_TCM_ECC_SINGLE_ERROR_ADDR_tag CODE_TCM_ECC_SINGLE_ERROR_ADDR; /* CODE_TCM single-bit ECC Error Address Register */
  uint8_t TCM_ECC_MCM_reserved3[4];
  TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_INFO_tag CODE_TCM_ECC_MULTI_ERROR_INFO; /* CODE_TCM multi-bit ECC Error Information Register */
  TCM_ECC_MCM_CODE_TCM_ECC_MULTI_ERROR_ADDR_tag CODE_TCM_ECC_MULTI_ERROR_ADDR; /* CODE_TCM multi-bit ECC Error Address Register */
  uint8_t TCM_ECC_MCM_reserved4[4];
  TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_INFO_tag SYS_TCM_ECC_SINGLE_ERROR_INFO; /* SYS_TCM single-bit ECC Error Information Register */
  TCM_ECC_MCM_SYS_TCM_ECC_SINGLE_ERROR_ADDR_tag SYS_TCM_ECC_SINGLE_ERROR_ADDR; /* SYS_TCM single-bit ECC Error Address Register */
  uint8_t TCM_ECC_MCM_reserved5[4];
  TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_INFO_tag SYS_TCM_ECC_MULTI_ERROR_INFO; /* SYS_TCM multi-bit ECC Error Information Register */
  TCM_ECC_MCM_SYS_TCM_ECC_MULTI_ERROR_ADDR_tag SYS_TCM_ECC_MULTI_ERROR_ADDR; /* SYS_TCM multi-bit ECC Error Address Register */
  uint8_t TCM_ECC_MCM_reserved6[12];
  TCM_ECC_MCM_CODE_TCM_ECC_ERROR_INJEC_tag CODE_TCM_ECC_ERROR_INJEC; /* CODE_TCM ECC Error Injection Register */
  TCM_ECC_MCM_SYS_TCM_ECC_ERROR_INJEC_tag SYS_TCM_ECC_ERROR_INJEC; /* SYS_TCM ECC Error Injection Register */
};

/* ============================================================================
   =============================== Module: SCB ================================
   ============================================================================
   * @usage: sCheck
*/
#define SCB_BFSR_PRECISERR_MASK     (0x02U)
#define SCB_BFSR_IMPRECISERR_MASK   (0x04U)
#define SCB_BFSR_BFARVALID_MASK     (0x80U)
#define SCB (*(volatile struct SCB_tag *) 0xE000E000UL)

typedef union SCB_CM7_IEBR_union_tag
{
    vuint32_t R;
    struct
    {
        vuint32_t VALID:1;
        vuint32_t LOCKED:1;
        vuint32_t LINE_DWORD_OFFSET:2;
        vuint32_t INDEX:9;
        vuint32_t _reserved_13:1;
        vuint32_t WAY:1;
        vuint32_t _reserved_15:1;
        vuint32_t RAM_BANK:1;
        vuint32_t ERR_TYPE:1;
        vuint32_t _reserved_18:12;
        vuint32_t USER_DEF:2;
    } B;
} SCB_CM7_IEBR_tag;

typedef union SCB_CM7_DEBR_union_tag
{
    vuint32_t R;
    struct
    {
        vuint32_t VALID:1;
        vuint32_t LOCKED:1;
        vuint32_t LINE_WORD_OFFSET:3;
        vuint32_t INDEX:8;
        vuint32_t _reserved_13:1;
        vuint32_t WAY:2;
        vuint32_t RAM_BANK:1;
        vuint32_t ERR_TYPE:1;
        vuint32_t _reserved_18:12;
        vuint32_t USER_DEF:2;
    } B;
} SCB_CM7_DEBR_tag;

struct SCB_tag
{
    uint8_t   RESERVED_0[8];
    vuint32_t ACTLR;                             /**< Auxiliary Control Register,, offset: 0x8 */
    uint8_t   RESERVED_1[3316];
    vuint32_t CPUID;                             /**< CPUID Base Register, offset: 0xD00 */
    vuint32_t ICSR;                              /**< Interrupt Control and State Register, offset: 0xD04 */
    vuint32_t VTOR;                              /**< Vector Table Offset Register, offset: 0xD08 */
    vuint32_t AIRCR;                             /**< Application Interrupt and Reset Control Register, offset: 0xD0C */
    vuint32_t SCR;                               /**< System Control Register, offset: 0xD10 */
    vuint32_t CCR;                               /**< Configuration and Control Register, offset: 0xD14 */
    vuint32_t SHPR1;                             /**< System Handler Priority Register 1, offset: 0xD18 */
    vuint32_t SHPR2;                             /**< System Handler Priority Register 2, offset: 0xD1C */
    vuint32_t SHPR3;                             /**< System Handler Priority Register 3, offset: 0xD20 */
    vuint32_t SHCSR;                             /**< System Handler Control and State Register, offset: 0xD24 */
    union
    {
        vuint32_t R;
        struct
        {
            vuint32_t MMFSR : 8;                 /**< MemManage Fault Status Register, offset: 0xD28 */
            vuint32_t BFSR  : 8;                 /**< BusFault Status Register, offset 0xD29 */
            vuint32_t UFSR  : 16;                /**< UsageFault Status Register, offset 0xD2A */
        } B;
    } CFSR;                                    /**< Configurable Fault Status Registers, offset: 0xD28 */
    vuint32_t HFSR;                              /**< HardFault Status register, offset: 0xD2C */
    vuint32_t DFSR;                              /**< Debug Fault Status Register, offset: 0xD30 */
    vuint32_t MMFAR;                             /**< MemManage Address Register, offset: 0xD34 */
    vuint32_t BFAR;                              /**< BusFault Address Register, offset: 0xD38 */
    vuint32_t AFSR;                              /**< Auxiliary Fault Status Register, offset: 0xD3C */
    uint8_t   RESERVED_2[72];
    vuint32_t CPACR;                             /**< Coprocessor Access Control Register, offset: 0xD88 */
    uint8_t   RESERVED_3[424];
    vuint32_t FPCCR;                             /**< Floating-point Context Control Register, offset: 0xF34 */
    vuint32_t FPCAR;                             /**< Floating-point Context Address Register, offset: 0xF38 */
    vuint32_t FPDSCR;                            /**< Floating-point Default Status Control Register, offset: 0xF3C */
    uint8_t   RESERVED_4[80];
    vuint32_t CM7_ITCMCR;                        /**< Instruction Tightly-Coupled Memory Control Register, offset: 0xF90 */
    vuint32_t CM7_DTCMCR;                        /**< Data Tightly-Coupled Memory Control Register, offset: 0xF94 */
    uint8_t   RESERVED_5[4];
    vuint32_t CM7_CACR;                          /**< L1 Cache Control Register, offset: 0xF9C */
    uint8_t   RESERVED_6[16];
    SCB_CM7_IEBR_tag CM7_IEBR0;                /**< Instruction Error bank Register 0, offset 0xFB0 */
    SCB_CM7_IEBR_tag CM7_IEBR1;                /**< Instruction Error bank Register 1, offset 0xFB4 */
    SCB_CM7_DEBR_tag CM7_DEBR0;                /**< Data Error bank Register 0, offset 0xFB8 */
    SCB_CM7_DEBR_tag CM7_DEBR1;                /**< Data Error bank Register 1, offset 0xFBC */
};

/* ============================================================================
   =============================== Module: SYS_TICK ===========================
   ============================================================================ */
#define SYS_TICK (*(volatile struct SYS_TICK_tag *) 0xE000E010UL)

typedef union SYS_TICK_CSR_union_tag { /* SysTick control and status register */
  vuint32_t R;
  struct {
    vuint32_t ENABLE:1;                /* Enable Counting */
    vuint32_t TICKINT:1;               /* Enable Debug Halt */
    vuint32_t CLKSOURCE:1;             /* Frequency Change Request, ID 0 */
    vuint32_t _unused_24:13;           /* Reserved */
    vuint32_t COUNTFLAG:1;             /* Frequency Change Request, ID 0 */
    vuint32_t _unused_0:15;            /* Reserved */
  } B;
} SYS_TICK_CSR_tag;

typedef union SYS_TICK_RVR_union_tag { /* SysTick reload value register */
  vuint32_t R;
  struct {
    vuint32_t RELOAD:24;               /* Value to load into SYST_CVR */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} SYS_TICK_RVR_tag;

typedef union SYS_TICK_CVR_union_tag { /* SysTick current value register */
  vuint32_t R;
  struct {
    vuint32_t CURRENT:24;              /* Reads the current value of SysTick */
    vuint32_t _unused_0:8;             /* Reserved */
  } B;
} SYS_TICK_CVR_tag;

typedef union SYS_TICK_CALIB_union_tag { /* SysTick calibration value register */
  vuint32_t R;
  struct {
    vuint32_t TENMS:24;                /* Reload value for 10ms timing */
    vuint32_t _unused_24:6;            /* Reserved */
    vuint32_t SKEW:1;                  /* Indicates if TENMS is exact */
    vuint32_t NOREF:1;                 /* Indicates whether the device provides a refclk to the CPU */
  } B;
} SYS_TICK_CALIB_tag;

struct SYS_TICK_tag {
  SYS_TICK_CSR_tag SYST_CSR;           /* SysTick control and status register */
  SYS_TICK_RVR_tag SYST_RVR;           /* SysTick reload value register */
  SYS_TICK_CVR_tag SYST_CVR;           /* SysTick current value register */
  SYS_TICK_CALIB_tag SYST_CALIB;       /* SysTick calibration value register */
};

/* ============================================================================
   =========================== Module: SAFETYBASE_VFCCU =======================
   ============================================================================
*/
typedef union SAFETYBASE_VFCCU_GFLTRC_union_tag { /* Global Fault Recovery */
  vuint32_t R;
  struct {
    vuint32_t RHWSW0:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW1:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW2:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW3:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW4:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW5:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW6:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW7:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW8:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW9:1;                /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW10:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW11:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW12:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW13:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW14:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW15:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW16:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW17:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW18:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW19:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW20:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW21:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW22:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW23:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW24:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW25:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW26:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW27:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW28:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW29:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW30:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
    vuint32_t RHWSW31:1;               /* Recovery/Clearing Mechanism Hardware Or Software */
  } B;
} SAFETYBASE_VFCCU_GFLTRC_tag;

typedef union SAFETYBASE_VFCCU_GFLTOVDC_union_tag { /* Global Fault Overflow Detection */
  vuint32_t R;
  struct {
    vuint32_t OVF_DIS0:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS1:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS2:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS3:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS4:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS5:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS6:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS7:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS8:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS9:1;              /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS10:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS11:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS12:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS13:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS14:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS15:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS16:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS17:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS18:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS19:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS20:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS21:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS22:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS23:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS24:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS25:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS26:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS27:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS28:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS29:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS30:1;             /* Fault Overflow Detection Disable */
    vuint32_t OVF_DIS31:1;             /* Fault Overflow Detection Disable */
  } B;
} SAFETYBASE_VFCCU_GFLTOVDC_tag;

typedef union AON_FCCU_FHFLTENC_union_tag { /* Fault Enable */
  vuint32_t R;
  struct {
    vuint32_t EN0:1;                   /* Fault Enable */
    vuint32_t EN1:1;                   /* Fault Enable */
    vuint32_t EN2:1;                   /* Fault Enable */
    vuint32_t EN3:1;                   /* Fault Enable */
    vuint32_t EN4:1;                   /* Fault Enable */
    vuint32_t EN5:1;                   /* Fault Enable */
    vuint32_t EN6:1;                   /* Fault Enable */
    vuint32_t EN7:1;                   /* Fault Enable */
    vuint32_t EN8:1;                   /* Fault Enable */
    vuint32_t EN9:1;                   /* Fault Enable */
    vuint32_t EN10:1;                  /* Fault Enable */
    vuint32_t EN11:1;                  /* Fault Enable */
    vuint32_t EN12:1;                  /* Fault Enable */
    vuint32_t EN13:1;                  /* Fault Enable */
    vuint32_t EN14:1;                  /* Fault Enable */
    vuint32_t EN15:1;                  /* Fault Enable */
    vuint32_t EN16:1;                  /* Fault Enable */
    vuint32_t EN17:1;                  /* Fault Enable */
    vuint32_t EN18:1;                  /* Fault Enable */
    vuint32_t EN19:1;                  /* Fault Enable */
    vuint32_t EN20:1;                  /* Fault Enable */
    vuint32_t EN21:1;                  /* Fault Enable */
    vuint32_t EN22:1;                  /* Fault Enable */
    vuint32_t EN23:1;                  /* Fault Enable */
    vuint32_t EN24:1;                  /* Fault Enable */
    vuint32_t EN25:1;                  /* Fault Enable */
    vuint32_t EN26:1;                  /* Fault Enable */
    vuint32_t EN27:1;                  /* Fault Enable */
    vuint32_t EN28:1;                  /* Fault Enable */
    vuint32_t EN29:1;                  /* Fault Enable */
    vuint32_t EN30:1;                  /* Fault Enable */
    vuint32_t EN31:1;                  /* Fault Enable */
  } B;
} SAFETYBASE_VFCCU_FHFLTENC_tag;

typedef union SAFETYBASE_VFCCU_FHFLTS_union_tag { /* Fault Status */
  vuint32_t R;
  struct {
    vuint32_t STAT0:1;                 /* Fault Status */
    vuint32_t STAT1:1;                 /* Fault Status */
    vuint32_t STAT2:1;                 /* Fault Status */
    vuint32_t STAT3:1;                 /* Fault Status */
    vuint32_t STAT4:1;                 /* Fault Status */
    vuint32_t STAT5:1;                 /* Fault Status */
    vuint32_t STAT6:1;                 /* Fault Status */
    vuint32_t STAT7:1;                 /* Fault Status */
    vuint32_t STAT8:1;                 /* Fault Status */
    vuint32_t STAT9:1;                 /* Fault Status */
    vuint32_t STAT10:1;                /* Fault Status */
    vuint32_t STAT11:1;                /* Fault Status */
    vuint32_t STAT12:1;                /* Fault Status */
    vuint32_t STAT13:1;                /* Fault Status */
    vuint32_t STAT14:1;                /* Fault Status */
    vuint32_t STAT15:1;                /* Fault Status */
    vuint32_t STAT16:1;                /* Fault Status */
    vuint32_t STAT17:1;                /* Fault Status */
    vuint32_t STAT18:1;                /* Fault Status */
    vuint32_t STAT19:1;                /* Fault Status */
    vuint32_t STAT20:1;                /* Fault Status */
    vuint32_t STAT21:1;                /* Fault Status */
    vuint32_t STAT22:1;                /* Fault Status */
    vuint32_t STAT23:1;                /* Fault Status */
    vuint32_t STAT24:1;                /* Fault Status */
    vuint32_t STAT25:1;                /* Fault Status */
    vuint32_t STAT26:1;                /* Fault Status */
    vuint32_t STAT27:1;                /* Fault Status */
    vuint32_t STAT28:1;                /* Fault Status */
    vuint32_t STAT29:1;                /* Fault Status */
    vuint32_t STAT30:1;                /* Fault Status */
    vuint32_t STAT31:1;                /* Fault Status */
  } B;
} SAFETYBASE_VFCCU_FHFLTS_tag;

typedef union SAFETYBASE_VFCCU_FHFLTRKC_union_tag { /* Fault Reaction Set Configuration */
  vuint32_t R;
  struct {
    vuint32_t RKNSEL0:3;               /* Reaction Selection */
    vuint32_t _unused_24:5;
    vuint32_t RKNSEL1:3;               /* Reaction Selection */
    vuint32_t _unused_16:5;
    vuint32_t RKNSEL2:3;               /* Reaction Selection */
    vuint32_t _unused_8:5;
    vuint32_t RKNSEL3:3;               /* Reaction Selection */
    vuint32_t _unused_0:5;
  } B;
} SAFETYBASE_VFCCU_FHFLTRKC_tag;

typedef union SAFETYBASE_VFCCU_FHIMRKC_union_tag { /* Immediate Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} SAFETYBASE_VFCCU_FHIMRKC_tag;

typedef union SAFETYBASE_VFCCU_FHDLRKC_union_tag { /* Delayed Reaction Configuration */
  vuint32_t R;
  struct {
    vuint32_t EOUTEN0:1;               /* EOUT Enable */
    vuint32_t EOUTEN1:1;               /* EOUT Enable */
    vuint32_t RKNEN0:1;                /* Reaction Line Enable */
    vuint32_t RKNEN1:1;                /* Reaction Line Enable */
    vuint32_t RKNEN2:1;                /* Reaction Line Enable */
    vuint32_t RKNEN3:1;                /* Reaction Line Enable */
    vuint32_t RKNEN4:1;                /* Reaction Line Enable */
    vuint32_t RKNEN5:1;                /* Reaction Line Enable */
    vuint32_t RKNEN6:1;                /* Reaction Line Enable */
    vuint32_t _unused_0:23;
  } B;
} SAFETYBASE_VFCCU_FHDLRKC_tag;

typedef struct { /* Reaction Configuration */
    SAFETYBASE_VFCCU_FHIMRKC_tag FHIMRKC; /* Immediate Reaction Configuration */
    uint8_t SAFETYBASE_VFCCU_reserved0[12];
    SAFETYBASE_VFCCU_FHDLRKC_tag FHDLRKC; /* Delayed Reaction Configuration */
    uint8_t SAFETYBASE_VFCCU_reserved1[12];
} SAFETYBASE_VFCCU_FHRKC_tag;

struct SAFETYBASE_VFCCU_tag {
  uint8_t AON_FCCU_reserved0[768];
  AON_FCCU_GRKNTIMC_tag GRKNTIMC[1];   /* Global Reaction Timer Period */
  uint8_t AON_FCCU_reserved1[316];
  SAFETYBASE_VFCCU_GFLTRC_tag GFLTRC[3];    /* Global Fault Recovery */
  uint8_t AON_FCCU_reserved2[2100];
  SAFETYBASE_VFCCU_GFLTOVDC_tag GFLTOVDC[3];    /* Global Fault Overflow Detection */
  uint8_t AON_FCCU_reserved3[116];
  AON_FCCU_GRKNTIMS_tag GRKNTIMS;      /* Global Reaction Timer Status */
  AON_FCCU_GCTRL_tag GCTRL;            /* Global Space Control */
  AON_FCCU_GINTOVFS_tag GINTOVFS;      /* Global DID FSM Status */
  uint8_t AON_FCCU_reserved4[4];
  AON_FCCU_GOVFRKC_tag GOVFRKC[1];     /* Global Overflow Reaction */
  uint8_t AON_FCCU_reserved5[12];
  AON_FCCU_GMEOUTDC_tag GMEOUTDC;      /* Global Minimum EOUT Duration */
  AON_FCCU_GEOUTTCT_tag GEOUTTCT;      /* Global EOUT Timer Disable */
  uint8_t AON_FCCU_reserved6[8];
  AON_FCCU_GLB_EOUT_tag GLB_EOUT[2];
  uint8_t AON_FCCU_reserved7[600];
  AON_FCCU_GDBGCFG_tag GDBGCFG;        /* Global Debug */
  AON_FCCU_GDBGSTAT_tag GDBGSTAT;      /* Global Debug Status */
  AON_FCCU_GDPFSTAT_tag GDPFSTAT;      /* Global Debug Pending Fault Status */
  AON_FCCU_GDALTRLD_tag GDALTRLD;      /* Global Debug Alternate Reload Status */
  uint8_t AON_FCCU_reserved8[1306688];
  AON_FCCU_FHCFG0_tag FHCFG0;          /* Fault Handler */
  AON_FCCU_FHSRVDS0_tag FHSRVDS0;      /* Fault Handler Status */
  uint8_t AON_FCCU_reserved9[8];
  SAFETYBASE_VFCCU_FHFLTENC_tag FHFLTENC[3]; /* Fault Enable */
  uint8_t AON_FCCU_reserved10[52];
  SAFETYBASE_VFCCU_FHFLTS_tag FHFLTS[3];    /* Fault Status */
  uint8_t AON_FCCU_reserved11[52];
  SAFETYBASE_VFCCU_FHFLTRKC_tag FHFLTRKC[20]; /* Fault Reaction Set Configuration */
  uint8_t AON_FCCU_reserved12[432];
  SAFETYBASE_VFCCU_FHRKC_tag FHRKC[8]; /* Reaction Configuration */
};

/* ============================================================================
   =============================== Module: EIM ============================
   ============================================================================ */

#define EIM_EICHD_WORDS_PER_CHANNEL (9U)                /* Maximum number ofWords per Error Injection Channel */
#define EIM_CHANNELS_COUNT          (32U)               /* Number of Error Injection Channels */

typedef union EIM_EIMCR_union_tag { /* Error Injection Module Configuration Register */
  vuint32_t R;
  struct {
    vuint32_t GEIEN:1;                 /* Global Error Injection Enable */
    vuint32_t _unused_0:31;            /* Reserved */
  } B;
} EIM_EIMCR_tag;

typedef union EIM_EICHEN_union_tag { /* Error Injection Channel Enable register */
  vuint32_t R;
  struct {
    vuint32_t EICH31EN:1;              /* Error Injection Channel 31 Enable */
    vuint32_t EICH30EN:1;              /* Error Injection Channel 30 Enable */
    vuint32_t EICH29EN:1;              /* Error Injection Channel 29 Enable */
    vuint32_t EICH28EN:1;              /* Error Injection Channel 28 Enable */
    vuint32_t EICH27EN:1;              /* Error Injection Channel 27 Enable */
    vuint32_t EICH26EN:1;              /* Error Injection Channel 26 Enable */
    vuint32_t EICH25EN:1;              /* Error Injection Channel 25 Enable */
    vuint32_t EICH24EN:1;              /* Error Injection Channel 24 Enable */
    vuint32_t EICH23EN:1;              /* Error Injection Channel 23 Enable */
    vuint32_t EICH22EN:1;              /* Error Injection Channel 22 Enable */
    vuint32_t EICH21EN:1;              /* Error Injection Channel 21 Enable */
    vuint32_t EICH20EN:1;              /* Error Injection Channel 20 Enable */
    vuint32_t EICH19EN:1;              /* Error Injection Channel 19 Enable */
    vuint32_t EICH18EN:1;              /* Error Injection Channel 18 Enable */
    vuint32_t EICH17EN:1;              /* Error Injection Channel 17 Enable */
    vuint32_t EICH16EN:1;              /* Error Injection Channel 16 Enable */
    vuint32_t EICH15EN:1;              /* Error Injection Channel 15 Enable */
    vuint32_t EICH14EN:1;              /* Error Injection Channel 14 Enable */
    vuint32_t EICH13EN:1;              /* Error Injection Channel 13 Enable */
    vuint32_t EICH12EN:1;              /* Error Injection Channel 12 Enable */
    vuint32_t EICH11EN:1;              /* Error Injection Channel 11 Enable */
    vuint32_t EICH10EN:1;              /* Error Injection Channel 10 Enable */
    vuint32_t EICH9EN:1;               /* Error Injection Channel 9 Enable */
    vuint32_t EICH8EN:1;               /* Error Injection Channel 8 Enable */
    vuint32_t EICH7EN:1;               /* Error Injection Channel 7 Enable */
    vuint32_t EICH6EN:1;               /* Error Injection Channel 6 Enable */
    vuint32_t EICH5EN:1;               /* Error Injection Channel 5 Enable */
    vuint32_t EICH4EN:1;               /* Error Injection Channel 4 Enable */
    vuint32_t EICH3EN:1;               /* Error Injection Channel 3 Enable */
    vuint32_t EICH2EN:1;               /* Error Injection Channel 2 Enable */
    vuint32_t EICH1EN:1;               /* Error Injection Channel 1 Enable */
    vuint32_t EICH0EN:1;               /* Error Injection Channel 0 Enable */
  } B;
} EIM_EICHEN_tag;

typedef struct EIM_EICHD_union_tag {
  vuint32_t WORD[EIM_EICHD_WORDS_PER_CHANNEL];    /* Error Injection Words */
  vuint8_t  EICHD_reserved0[28];
} EIM_EICHD_tag;

struct EIM_tag {
  EIM_EIMCR_tag EIMCR;             /* Error Injection Module Configuration Register */
  EIM_EICHEN_tag EICHEN;           /* Error Injection Channel Enable register */
  vuint8_t EIM_reserved0[248];
  EIM_EICHD_tag EICHD[EIM_CHANNELS_COUNT];
};

/* ============================================================================
   =============================== Module: SRAMCTL ============================
   ============================================================================
   * @usage: sCheck
*/

typedef union SRAMCTL_RAMCR_union_tag { /* RAM Control */
  vuint32_t R;
  struct {
    vuint32_t INIT:1;                  /* Initialization Request */
    vuint32_t IWS:2;                   /* Initialization Wait States */
    vuint32_t _unused_3:5;             /* Reserved */
    vuint32_t INIT_SYSA:1;             /* Initialize With System Address */
    vuint32_t _unused_9:23;            /* Reserved */
  } B;
} SRAMCTL_RAMCR_tag;

typedef union SRAMCTL_RAMIAS_union_tag { /* RAM Initialization Address Start */
  vuint32_t R;
  struct {
    vuint32_t IAS:32;                  /* Initialization Address Start */
  } B;
} SRAMCTL_RAMIAS_tag;

typedef union SRAMCTL_RAMIAE_union_tag { /* RAM Initialization Address End */
  vuint32_t R;
  struct {
    vuint32_t IAE:32;                  /* Initialization Address End */
  } B;
} SRAMCTL_RAMIAE_tag;

typedef union SRAMCTL_RAMSR_union_tag { /* RAM Status */
  vuint32_t R;
  struct {
    vuint32_t IDONE:1;                 /* Initialization Done */
    vuint32_t BUSERR:1;                /* Bus Error */
    vuint32_t IPEND:1;                 /* Initialization Pending */
    vuint32_t AVALID:1;                /* Addresses Valid */
    vuint32_t _unused_4:1;             /* Reserved */
    vuint32_t AERR:1;                  /* ECC Address Error */
    vuint32_t MLTERR:1;                /* ECC Multi-Bit Error */
    vuint32_t SGLERR:1;                /* ECC Single-Bit Error */
    vuint32_t SYND:8;                  /* ECC Syndrome Value */
    vuint32_t EINFO:8;                 /* Event Information */
    vuint32_t _unused_24:8;            /* Reserved */
  } B;
} SRAMCTL_RAMSR_tag;

typedef union SRAMCTL_RAMMEMA_union_tag { /* RAM ECC Address */
  vuint32_t R;
  struct {
    vuint32_t MEMA:17;                 /* RAM Bank Address */
    vuint32_t _unused_17:3;            /* Reserved */
    vuint32_t BANK:5;                  /* RAM Bank ID */
    vuint32_t _unused_25:7;            /* Reserved */
  } B;
} SRAMCTL_RAMMEMA_tag;

typedef union SRAMCTL_RAMSYSA_union_tag { /* RAM System Address */
  vuint32_t R;
  struct {
    vuint32_t SYSA:32;                 /* System Address */
  } B;
} SRAMCTL_RAMSYSA_tag;

typedef union SRAMCTL_RAMECCNT_union_tag { /* RAM Correctable Error Count */
  vuint32_t R;
  struct {
    vuint32_t ECCNT:8;                 /* ECC Correctable Error Count */
    vuint32_t _unused_8:24;            /* Reserved */
  } B;
} SRAMCTL_RAMECCNT_tag;

typedef union SRAMCTL_RAMEID0_union_tag { /* RAM Error Injection Data 0 */
  vuint32_t R;
  struct {
    vuint32_t EID_W0:32;               /* Error Injection Data Word 0 */
  } B;
} SRAMCTL_RAMEID0_tag;

typedef union SRAMCTL_RAMEID1_union_tag { /* RAM Error Injection Data 1 */
  vuint32_t R;
  struct {
    vuint32_t EID_W1:32;               /* Error Injection Data Word 1 */
  } B;
} SRAMCTL_RAMEID1_tag;

typedef union SRAMCTL_RAMEIDC_union_tag { /* RAM Error Injection Data Control */
  vuint32_t R;
  struct {
    vuint32_t EID_CKB:8;               /* Error Injection Data Checkbits */
    vuint32_t _unused_8:16;            /* Reserved */
    vuint32_t EIP_EN:1;                /* Error Injection Into Pipeline Enable */
    vuint32_t _unused_25:5;            /* Reserved */
    vuint32_t EIA_EN:1;                /* Error Injection Address Enable */
    vuint32_t EID_EN:1;                /* Error Injection Data Enable */
  } B;
} SRAMCTL_RAMEIDC_tag;

typedef union SRAMCTL_RAMEIA_union_tag { /* RAM Error Injection Base Address */
  vuint32_t R;
  struct {
    vuint32_t EIA:32;                  /* Error Injection Base Address */
  } B;
} SRAMCTL_RAMEIA_tag;

typedef union SRAMCTL_RAMEIAM_union_tag { /* RAM Error Injection Address Mask */
  vuint32_t R;
  struct {
    vuint32_t EIAM:32;                 /* Error Injection Address Mask */
  } B;
} SRAMCTL_RAMEIAM_tag;

typedef union SRAMCTL_RAMMAXA_union_tag { /* RAM Maximum-Value Address */
  vuint32_t R;
  struct {
    vuint32_t MAXA:32;                 /* Maximum Address */
  } B;
} SRAMCTL_RAMMAXA_tag;

typedef union SRAMCTL_RAMCR2_union_tag { /* RAM Control 2 */
  vuint32_t R;
  struct {
    vuint32_t PREF:1;                  /* Prefetch for Read Bursts */
    vuint32_t WBUF:2;                  /* Write Buffer Control */
    vuint32_t DEM:1;                   /* Disable Exclusive Monitor */
    vuint32_t _unused_4:28;            /* Reserved */
  } B;
} SRAMCTL_RAMCR2_tag;

struct SRAMCTL_tag {
  SRAMCTL_RAMCR_tag RAMCR;             /* RAM Control */
  SRAMCTL_RAMIAS_tag RAMIAS;           /* RAM Initialization Address Start */
  SRAMCTL_RAMIAE_tag RAMIAE;           /* RAM Initialization Address End */
  SRAMCTL_RAMSR_tag RAMSR;             /* RAM Status */
  SRAMCTL_RAMMEMA_tag RAMMEMA;         /* RAM ECC Address */
  uint8 SRAMCTL_reserved0[4];
  SRAMCTL_RAMSYSA_tag RAMSYSA;         /* RAM System Address */
  SRAMCTL_RAMECCNT_tag RAMECCNT;       /* RAM Correctable Error Count */
  SRAMCTL_RAMEID0_tag RAMEID0;         /* RAM Error Injection Data 0 */
  SRAMCTL_RAMEID1_tag RAMEID1;         /* RAM Error Injection Data 1 */
  SRAMCTL_RAMEIDC_tag RAMEIDC;         /* RAM Error Injection Data Control */
  uint8 SRAMCTL_reserved1[4];
  SRAMCTL_RAMEIA_tag RAMEIA;           /* RAM Error Injection Base Address */
  SRAMCTL_RAMEIAM_tag RAMEIAM;         /* RAM Error Injection Address Mask */
  uint8 SRAMCTL_reserved2[8];
  SRAMCTL_RAMMAXA_tag RAMMAXA;         /* RAM Maximum-Value Address */
  uint8 SRAMCTL_reserved3[60];
  SRAMCTL_RAMCR2_tag RAMCR2;           /* RAM Control 2 */
};

/* ============================================================================
   =============================== Module: DDR_DDRC ===========================
   ============================================================================ */

typedef union DDR_DDRC_CS_BNDS_CS_BNDS_union_tag { /* Rank 0 Memory Bounds */
  vuint32_t R;
  struct {
    vuint32_t EA:16;                   /* Ending Address */
    vuint32_t SA:16;                   /* Starting Address */
  } B;
} DDR_DDRC_CS_BNDS_CS_BNDS_tag;

typedef struct DDR_DDRC_CS_BNDS_struct_tag {
  DDR_DDRC_CS_BNDS_CS_BNDS_tag CS_BNDS; /* Rank 0 Memory Bounds */
  uint8_t CS_BNDS_reserved0[4];
} DDR_DDRC_CS_BNDS_tag;

typedef union DDR_DDRC_REMAP_EXT_0_union_tag { /* Remap Extended Region 0 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_0_EA:8;          /* Region 0 Extended Ending Address */
    vuint32_t EXT_REG_0_SA:8;          /* Region 0 Extended Starting Address */
    vuint32_t REG_0_EXT_REMAP_ADDR:8;  /* Region 0 Extended Remap Starting Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_REMAP_EXT_0_tag;

typedef union DDR_DDRC_REMAP_EXT_1_union_tag { /* Remap Extended Region 1 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_1_EA:8;          /* Region 1 Extended Ending Address */
    vuint32_t EXT_REG_1_SA:8;          /* Region 1 Extended Starting Address */
    vuint32_t REG_1_EXT_REMAP_ADDR:8;  /* Region 1 Extended Remap Starting Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_REMAP_EXT_1_tag;

typedef union DDR_DDRC_REMAP_EXT_2_union_tag { /* Remap Extended Region 2 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_2_EA:8;          /* Region 2 Extended Ending Address */
    vuint32_t EXT_REG_2_SA:8;          /* Region 2 Extended Starting Address */
    vuint32_t REG_2_EXT_REMAP_ADDR:8;  /* Region 2 Extended Remap Starting Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_REMAP_EXT_2_tag;

typedef union DDR_DDRC_REMAP_EXT_3_union_tag { /* Remap Extended Region 3 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_3_EA:8;          /* Region 3 Extended Ending Address */
    vuint32_t EXT_REG_3_SA:8;          /* Region 3 Extended Starting Address */
    vuint32_t REG_3_EXT_REMAP_ADDR:8;  /* Region 3 Extended Remap Starting Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_REMAP_EXT_3_tag;

typedef union DDR_DDRC_REMAP_0A_union_tag { /* Remap Region 0A Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_0_REMAP_ADDR:12;     /* Region 0 Remap Starting Address */
    vuint32_t _unused_1:19;
    vuint32_t REG_0_REMAP_EN:1;        /* Region 0 Remap Enable */
  } B;
} DDR_DDRC_REMAP_0A_tag;

typedef union DDR_DDRC_REMAP_0B_union_tag { /* Remap Region 0B Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_0_EA:12;             /* Region 0 Ending Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_0_SA:12;             /* Region 0 Starting Address */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_REMAP_0B_tag;

typedef union DDR_DDRC_REMAP_1A_union_tag { /* Remap Region 1A Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_1_REMAP_ADDR:12;     /* Region 1 Remap Starting Address */
    vuint32_t _unused_1:19;
    vuint32_t REG_1_REMAP_EN:1;        /* Region 1 Remap Enable */
  } B;
} DDR_DDRC_REMAP_1A_tag;

typedef union DDR_DDRC_REMAP_1B_union_tag { /* Remap Region 1B Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_1_EA:12;             /* Region 1 Ending Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_1_SA:12;             /* Region 1 Starting Address */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_REMAP_1B_tag;

typedef union DDR_DDRC_REMAP_2A_union_tag { /* Remap Region 2A Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_2_REMAP_ADDR:12;     /* Region 2 Remap Starting Address */
    vuint32_t _unused_1:19;
    vuint32_t REG_2_REMAP_EN:1;        /* Region 2 Remap Enable */
  } B;
} DDR_DDRC_REMAP_2A_tag;

typedef union DDR_DDRC_REMAP_2B_union_tag { /* Remap Region 2B Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_2_EA:12;             /* Region 2 Ending Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_2_SA:12;             /* Region 2 Starting Address */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_REMAP_2B_tag;

typedef union DDR_DDRC_REMAP_3A_union_tag { /* Remap Region 3A Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_3_REMAP_ADDR:12;     /* Region 3 Remap Starting Address */
    vuint32_t _unused_1:19;
    vuint32_t REG_3_REMAP_EN:1;        /* Region 3 Remap Enable */
  } B;
} DDR_DDRC_REMAP_3A_tag;

typedef union DDR_DDRC_REMAP_3B_union_tag { /* Remap Region 3B Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_3_EA:12;             /* Region 3 Ending Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_3_SA:12;             /* Region 3 Starting Address */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_REMAP_3B_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_0_union_tag { /* DDRC Address Decode 0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t ROW14_OVRD:6;            /* Row 14 Override */
    vuint32_t _unused_22:2;
    vuint32_t ROW15_OVRD:6;            /* Row 15 Override */
    vuint32_t _unused_14:2;
    vuint32_t ROW16_OVRD:6;            /* Row 16 Override */
    vuint32_t _unused_6:2;
    vuint32_t ROW17_OVRD:6;            /* Row 17 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_0_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_1_union_tag { /* DDRC Address Decode 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t ROW10_OVRD:6;            /* Row 10 Override */
    vuint32_t _unused_22:2;
    vuint32_t ROW11_OVRD:6;            /* Row 11 Override */
    vuint32_t _unused_14:2;
    vuint32_t ROW12_OVRD:6;            /* Row 12 Override */
    vuint32_t _unused_6:2;
    vuint32_t ROW13_OVRD:6;            /* Row 13 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_1_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_2_union_tag { /* DDRC Address Decode 2 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t ROW6_OVRD:6;             /* Row 6 Override */
    vuint32_t _unused_22:2;
    vuint32_t ROW7_OVRD:6;             /* Row 7 Override */
    vuint32_t _unused_14:2;
    vuint32_t ROW8_OVRD:6;             /* Row 8 Override */
    vuint32_t _unused_6:2;
    vuint32_t ROW9_OVRD:6;             /* Row 9 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_2_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_3_union_tag { /* DDRC Address Decode 3 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t ROW2_OVRD:6;             /* Row 2 Override */
    vuint32_t _unused_22:2;
    vuint32_t ROW3_OVRD:6;             /* Row 3 Override */
    vuint32_t _unused_14:2;
    vuint32_t ROW4_OVRD:6;             /* Row 4 Override */
    vuint32_t _unused_6:2;
    vuint32_t ROW5_OVRD:6;             /* Row 5 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_3_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_4_union_tag { /* DDRC Address Decode 4 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t COL9_OVRD:6;             /* Col 9 Override */
    vuint32_t _unused_22:2;
    vuint32_t COL10_OVRD:6;            /* Col 10 Override */
    vuint32_t _unused_14:2;
    vuint32_t ROW0_OVRD:6;             /* Row 0 Override */
    vuint32_t _unused_6:2;
    vuint32_t ROW1_OVRD:6;             /* Row 1 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_4_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_5_union_tag { /* DDRC Address Decode 5 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t COL5_OVRD:6;             /* Col 5 Override */
    vuint32_t _unused_22:2;
    vuint32_t COL6_OVRD:6;             /* Col 6 Override */
    vuint32_t _unused_14:2;
    vuint32_t COL7_OVRD:6;             /* Col 7 Override */
    vuint32_t _unused_6:2;
    vuint32_t COL8_OVRD:6;             /* Col 8 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_5_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_6_union_tag { /* DDRC Address Decode 6 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t COL1_OVRD:6;             /* Col 1 Override */
    vuint32_t _unused_22:2;
    vuint32_t COL2_OVRD:6;             /* Col 2 Override */
    vuint32_t _unused_14:2;
    vuint32_t COL3_OVRD:6;             /* Col 3 Override */
    vuint32_t _unused_6:2;
    vuint32_t COL4_OVRD:6;             /* Col 4 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_6_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_7_union_tag { /* DDRC Address Decode 7 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t CID1_OVRD:6;             /* CID 1 Override */
    vuint32_t _unused_22:2;
    vuint32_t BA0_OVRD:6;              /* Bank 0 Override */
    vuint32_t _unused_14:2;
    vuint32_t BA1_OVRD:6;              /* Bank 1 Override */
    vuint32_t _unused_6:2;
    vuint32_t COL0_OVRD:6;             /* Col 0 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_7_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_8_union_tag { /* DDRC Address Decode 8 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t BG1_OVRD:6;              /* Bank Group 1 Override */
    vuint32_t _unused_22:2;
    vuint32_t CS0_OVRD:6;              /* Interleaved Rank 0 Override */
    vuint32_t _unused_14:2;
    vuint32_t CS1_OVRD:6;              /* Interleaved Rank 1 Override */
    vuint32_t _unused_6:2;
    vuint32_t CID0_OVRD:6;             /* CID 0 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_8_tag;

typedef union DDR_DDRC_DDR_ADDR_DEC_9_union_tag { /* DDRC Address Decode 9 */
  vuint32_t R;
  struct {
    vuint32_t ADDR_DEC_OVRD:1;         /* Address Decode Override */
    vuint32_t _unused_6:25;
    vuint32_t BG0_OVRD:6;              /* Bank Group 0 Override */
  } B;
} DDR_DDRC_DDR_ADDR_DEC_9_tag;

typedef union DDR_DDRC_CS_CONFIG_union_tag { /* Rank 0 Configuration */
  vuint32_t R;
  struct {
    vuint32_t COL_BITS_CS:3;           /* Column Bits */
    vuint32_t _unused_28:1;
    vuint32_t BG_BITS_CS:2;            /* Bank Group Bits */
    vuint32_t _unused_24:2;
    vuint32_t ROW_BITS_CS:3;           /* Row Bits */
    vuint32_t _unused_16:5;
    vuint32_t ODT_WR_CFG:3;            /* ODT Write Configuration */
    vuint32_t _unused_12:1;
    vuint32_t ODT_RD_CFG:3;            /* ODT Read Configuration */
    vuint32_t AP_EN:1;                 /* Auto-Precharge Enable */
    vuint32_t INTLV_CTL:4;             /* Interleaving Control */
    vuint32_t _unused_3:1;
    vuint32_t INTLV_EN:2;              /* Interleaving Enable */
    vuint32_t CS_EN:1;                 /* Rank Enable */
  } B;
} DDR_DDRC_CS_CONFIG_tag;

typedef union DDR_DDRC_TIMING_CFG_3_union_tag { /* DDR SDRAM Timing Configuration 3 */
  vuint32_t R;
  struct {
    vuint32_t EXT_WRTORD:1;            /* Extended Write-To-Read Time */
    vuint32_t EXT_ACTTOACT:1;          /* Extended Activate-To-Activate Time */
    vuint32_t SPARE_CNFG:1;            /* Spare Config */
    vuint32_t EXT_FOUR_ACT:1;          /* Extended Four Activate */
    vuint32_t EXT_CKE_PLS:2;           /* Extended MCKE Pulse */
    vuint32_t _unused_24:2;
    vuint32_t EXT_WRREC:2;             /* Extended Write Recovery */
    vuint32_t SPARE_CNFG2:1;           /* Spare Config */
    vuint32_t EXT_WR_LAT_2:1;          /* Extended Write Latency 2 */
    vuint32_t EXT_CASLAT:3;            /* Extended CAS Latency */
    vuint32_t _unused_16:1;
    vuint32_t EXT_REFREC:6;            /* Extended Refresh Recovery */
    vuint32_t EXT_ACTTORW:2;           /* Extended Activate To Read Or Write Time */
    vuint32_t EXT_ACTTOPRE:3;          /* Extended Activate-To-Precharge Time */
    vuint32_t _unused_4:1;
    vuint32_t EXT_PRETOACT:2;          /* Extended Precharge-To-Activate Time */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_TIMING_CFG_3_tag;

typedef union DDR_DDRC_TIMING_CFG_0_union_tag { /* DDR SDRAM Timing Configuration 0 */
  vuint32_t R;
  struct {
    vuint32_t MRS_CYC:6;               /* MRW Cycle Time */
    vuint32_t _unused_20:6;
    vuint32_t EXT_ACT_PD_EXIT:1;       /* Extended Active Power-Down Exit */
    vuint32_t _unused_18:1;
    vuint32_t EXT_PRE_PD_EXIT:2;       /* Extended Precharge Power-Down Exit */
    vuint32_t PRE_PD_EXIT:4;           /* Precharge Power-Down Exit */
    vuint32_t ACT_PD_EXIT:4;           /* Active Powerdown Exit */
    vuint32_t WWT:2;                   /* Write-To-Write Turnaround To Different Ranks */
    vuint32_t RRT:2;                   /* Read-To-Read Turnaround To Different Ranks */
    vuint32_t WRT:2;                   /* Write-To-Read Turnaround To Different Ranks */
    vuint32_t RWT:2;                   /* Read-To-Write Turnaround To Different Ranks */
  } B;
} DDR_DDRC_TIMING_CFG_0_tag;

typedef union DDR_DDRC_TIMING_CFG_1_union_tag { /* DDR SDRAM Timing Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t WRTORD:4;                /* Write-To-Read Interval */
    vuint32_t ACTTOACT:4;              /* Activate-To-Activate Interval */
    vuint32_t WRREC:4;                 /* Write Recovery */
    vuint32_t REFREC:4;                /* Refresh Recovery */
    vuint32_t _unused_15:1;
    vuint32_t CASLAT:3;                /* CAS Latency */
    vuint32_t ACTTORW:4;               /* Activate To Read Or Write */
    vuint32_t ACTTOPRE:4;              /* Activate-To-Precharge Time */
    vuint32_t PRETOACT:4;              /* Precharge-To-Activate Time */
  } B;
} DDR_DDRC_TIMING_CFG_1_tag;

typedef union DDR_DDRC_TIMING_CFG_2_union_tag { /* DDR SDRAM Timing Configuration 2 */
  vuint32_t R;
  struct {
    vuint32_t FOUR_ACT:6;              /* Four Activate */
    vuint32_t CKE_PLS:3;               /* MCKE Pulse */
    vuint32_t _unused_19:4;
    vuint32_t RD_TO_PRE:5;             /* Read-To-Precharge Time */
    vuint32_t EXT_WR_LAT:1;            /* Extended Write Latency */
    vuint32_t WR_LAT:4;                /* Write Latency */
    vuint32_t _unused_4:5;
    vuint32_t DERATE_VAL:4;            /* Derate Value */
  } B;
} DDR_DDRC_TIMING_CFG_2_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_union_tag { /* DDR SDRAM Control Configuration */
  vuint32_t R;
  struct {
    vuint32_t BI:1;                    /* Bypass Initialization */
    vuint32_t MEM_HALT:1;              /* DDRC Halt */
    vuint32_t RSRVD:1;                 /* Reserved. Should be written to 0. */
    vuint32_t _unused_28:1;
    vuint32_t _unused_24:4;
    vuint32_t BA_INTLV_CTL:7;          /* Rank interleaving control. */
    vuint32_t _unused_16:1;
    vuint32_t DC_EN:1;                 /* Dual Channel Enable */
    vuint32_t _unused_14:1;
    vuint32_t _unused_13:1;
    vuint32_t DBW:2;                   /* DDR SDRAM Data Bus Width */
    vuint32_t DYN_PWR:1;               /* Dynamic Power Management */
    vuint32_t _unused_8:2;
    vuint32_t SDRAM_TYPE:3;            /* DDR SDRAM Type */
    vuint32_t _unused_4:1;
    vuint32_t RD_EN:1;                 /* Registered DIMM Enable */
    vuint32_t _unused_2:1;
    vuint32_t SREN:1;                  /* Self-Refresh Enable */
    vuint32_t MEM_EN:1;                /* DDRC Enable */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_2_union_tag { /* DDR SDRAM Control Configuration 2 */
  vuint32_t R;
  struct {
    vuint32_t SPARE_CNFG:1;            /* Spare Config */
    vuint32_t _unused_30:1;
    vuint32_t _unused_29:1;
    vuint32_t SPARE_CNFG2:1;           /* Spare Config */
    vuint32_t D_INIT:1;                /* DDR SDRAM Data Initialization */
    vuint32_t SPARE_CNFG3:2;           /* Spare Config */
    vuint32_t _unused_24:1;
    vuint32_t RSRVD:1;                 /* Reserved. Must be written to 0. */
    vuint32_t QD_EN:1;                 /* Quad-Rank Enable */
    vuint32_t _unused_21:1;
    vuint32_t _unused_20:1;
    vuint32_t NUM_PR:4;                /* Number Of Posted Refreshes */
    vuint32_t _unused_11:5;
    vuint32_t _unused_10:1;
    vuint32_t MT_RR_EN:1;              /* Memory Test Round-Robin Enable */
    vuint32_t _unused_8:1;
    vuint32_t MCK_DIS:4;               /* MCK Disable */
    vuint32_t _unused_2:2;
    vuint32_t _unused_1:1;
    vuint32_t FRC_SR:1;                /* Force Self-Refresh */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_2_tag;

typedef union DDR_DDRC_DDR_SDRAM_MD_CNTL_union_tag { /* DDR SDRAM Mode Control */
  vuint32_t R;
  struct {
    vuint32_t MD_VALUE:18;             /* Mode Register Value */
    vuint32_t _unused_13:1;
    vuint32_t _unused_12:1;
    vuint32_t CKE_CNTL:2;              /* Clock Enable Control */
    vuint32_t START_OSC:1;             /* Start Oscillator */
    vuint32_t START_OSC2:1;            /* Start Oscillator 2 */
    vuint32_t MD_SEL:4;                /* Mode Register Select */
    vuint32_t CS_SEL:3;                /* Select Rank */
    vuint32_t MD_EN:1;                 /* Mode Enable */
  } B;
} DDR_DDRC_DDR_SDRAM_MD_CNTL_tag;

typedef union DDR_DDRC_DDR_SDRAM_INTERVAL_union_tag { /* DDR SDRAM Interval Configuration */
  vuint32_t R;
  struct {
    vuint32_t BSTOPRE:14;              /* Precharge Interval */
    vuint32_t _unused_16:2;
    vuint32_t REFINT:16;               /* Refresh Interval */
  } B;
} DDR_DDRC_DDR_SDRAM_INTERVAL_tag;

typedef union DDR_DDRC_DDR_DATA_INIT_union_tag { /* DDR SDRAM Data Initialization */
  vuint32_t R;
  struct {
    vuint32_t INIT_VALUE:32;           /* Initialization Value */
  } B;
} DDR_DDRC_DDR_DATA_INIT_tag;

typedef union DDR_DDRC_TIMING_CFG_4_union_tag { /* DDR SDRAM Timing Configuration 4 */
  vuint32_t R;
  struct {
    vuint32_t DLL_LOCK:2;              /* DDR SDRAM DLL Lock Time */
    vuint32_t _unused_28:2;
    vuint32_t EXT_REFINT:1;            /* Extended Refresh Interval */
    vuint32_t _unused_24:3;
    vuint32_t EXT_WWT:2;               /* Extended Write-To-Write Turnaround */
    vuint32_t EXT_RRT:2;               /* Extended Read-To-Read Turnaround */
    vuint32_t EXT_WRT:2;               /* Extended Write-To-Read Turnaround */
    vuint32_t EXT_RWT:2;               /* Extended Read-To-Write Turnaround */
    vuint32_t WWT:4;                   /* Write-To-Write Turnaround For Same Rank */
    vuint32_t RRT:4;                   /* Read-To-Read Turnaround For Same Rank */
    vuint32_t WRT:4;                   /* Write-To-Read Turnaround For Same Rank */
    vuint32_t RWT:4;                   /* Read-To-Write Turnaround For Same Rank */
  } B;
} DDR_DDRC_TIMING_CFG_4_tag;

typedef union DDR_DDRC_TIMING_CFG_5_union_tag { /* DDR SDRAM Timing Configuration 5 */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t _unused_21:3;
    vuint32_t _unused_20:1;
    vuint32_t _unused_15:5;
    vuint32_t _unused_12:3;
    vuint32_t _unused_9:3;
    vuint32_t _unused_8:1;
    vuint32_t _unused_3:5;
    vuint32_t _unused_0:3;
  } B;
} DDR_DDRC_TIMING_CFG_5_tag;

typedef union DDR_DDRC_TIMING_CFG_7_union_tag { /* DDR SDRAM Timing Configuration 7 */
  vuint32_t R;
  struct {
    vuint32_t _unused_28:4;
    vuint32_t WR_ADJ:3;                /* Write Adjustment */
    vuint32_t RSRVD_1:1;               /* Reserved. */
    vuint32_t _unused_16:8;
    vuint32_t RD_ADJ:3;                /* Read Adjustment */
    vuint32_t RSRVD:1;                 /* Reserved. */
    vuint32_t CKSRX:4;                 /* Clock After Self-Refresh Exit */
    vuint32_t CKSRE:4;                 /* Clock After Self-Refresh Entry */
    vuint32_t CKE_RST:2;               /* MCKE Reset Time */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_TIMING_CFG_7_tag;

typedef union DDR_DDRC_DDR_ZQ_CNTL_union_tag { /* DDR SDRAM ZQ Calibration Control */
  vuint32_t R;
  struct {
    vuint32_t ZQCS_INT:4;              /* ZQCS Interval */
    vuint32_t _unused_24:4;
    vuint32_t ZQCS:4;                  /* ZQ Calibration Short Time */
    vuint32_t _unused_16:4;
    vuint32_t ZQOPER:4;                /* ZQ Calibration Operation Time */
    vuint32_t _unused_8:4;
    vuint32_t ZQINIT:4;                /* ZQ Calibration Initialization Time */
    vuint32_t _unused_1:3;
    vuint32_t ZQ_EN:1;                 /* ZQ Calibration Enable */
  } B;
} DDR_DDRC_DDR_ZQ_CNTL_tag;

typedef union DDR_DDRC_DDR_SR_CNTR_union_tag { /* DDR SDRAM Self-Refresh Counter */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t SR_IT:4;                 /* Self-Refresh Idle Threshold */
    vuint32_t _unused_0:12;
  } B;
} DDR_DDRC_DDR_SR_CNTR_tag;

typedef union DDR_DDRC_TIMING_CFG_8_union_tag { /* DDR SDRAM Timing Configuration 8 */
  vuint32_t R;
  struct {
    vuint32_t PRE_ALL_REC:6;           /* Precharge All-To-Activate Interval */
    vuint32_t _unused_25:1;
    vuint32_t EXT_WRTORD_BG:1;         /* Extended Write-To-Read Same Bank Group */
    vuint32_t WRTORD_BG:4;             /* Write-To-Read Same Bank Group */
    vuint32_t ACTTOACT_BG:4;           /* Activate-To-Activate Same Bank Group */
    vuint32_t WWT_BG:4;                /* Write-To-Write Turnaround For Same CS And Bank Group */
    vuint32_t RRT_BG:4;                /* Read-To-Read Turnaround For Same Rank And Bank Group */
    vuint32_t WRT_BG:4;                /* Write-To-Read Turnaround For Same Rank And Bank Group */
    vuint32_t RWT_BG:4;                /* Read-To-Write Turnaround For Same Rank And Bank Group */
  } B;
} DDR_DDRC_TIMING_CFG_8_tag;

typedef union DDR_DDRC_TIMING_CFG_9_union_tag { /* DDR SDRAM timing configuration 9 */
  vuint32_t R;
  struct {
    vuint32_t REFTOREF_PB:10;          /* Refresh-to-refresh interval for per-bank refresh. */
    vuint32_t SPARE_CNFG:2;            /* Spare Config */
    vuint32_t _unused_16:4;
    vuint32_t REFREC_PB:10;            /* Refresh Recovery Per-Bank Refresh */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_TIMING_CFG_9_tag;

typedef union DDR_DDRC_TIMING_CFG_10_union_tag { /* DDR SDRAM Timing Configuration 10 */
  vuint32_t R;
  struct {
    vuint32_t T_STAB:15;               /* Stabilization Wait Time */
    vuint32_t _unused_9:8;
    vuint32_t PBRTOACT:5;              /* Per-Bank Refresh to Activate */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_TIMING_CFG_10_tag;

typedef union DDR_DDRC_TIMING_CFG_11_union_tag { /* DDR SDRAM Timing Configuration 11 */
  vuint32_t R;
  struct {
    vuint32_t MWWT:4;                  /* Masked Write-To-Write Turnaround (tCCDMW) */
    vuint32_t _unused_24:4;
    vuint32_t PRE_TO_PRE:4;            /* Precharge-To-Precharge Time */
    vuint32_t _unused_16:4;
    vuint32_t WCKEN_FS:4;              /* WCKEN FS Time */
    vuint32_t WCK_STOP:4;              /* WCK Stop Time */
    vuint32_t WS_OFF:3;                /* WS_OFF Wait Time */
    vuint32_t RSRVD:1;                 /* Reserved. Should be written to 0. */
    vuint32_t WCKPRE_STATIC:4;         /* WCKPRE Static Time */
  } B;
} DDR_DDRC_TIMING_CFG_11_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_3_union_tag { /* DDR SDRAM Control Configuration 3 */
  vuint32_t R;
  struct {
    vuint32_t DIS_MR13:1;              /* Disable MR13 Write for Self Refresh */
    vuint32_t SR_FAST_WK_EN:1;         /* Self Refresh Fast Wakeup Enable */
    vuint32_t RSRVD:1;                 /* Reserved. Should be written to 0. */
    vuint32_t NON_PWR_2:1;             /* Non Power of 2 Enable */
    vuint32_t SR_PD_EN:1;              /* Self Refresh Powerdown Enable */
    vuint32_t DIS_MR28:1;              /* Disable MR28 Write for Self Refresh */
    vuint32_t _unused_25:1;
    vuint32_t DYN_REF_RATE_EN:1;       /* Dynamic Refresh Rate Enable */
    vuint32_t REF_MODE:2;              /* Refresh Mode */
    vuint32_t _unused_21:1;
    vuint32_t DRAIN_FOR_SR:1;          /* Drain Queues For Self-Refresh */
    vuint32_t DM_CFG:3;                /* Data Mask Configuration */
    vuint32_t _unused_16:1;
    vuint32_t CHB_SWP_EN:1;            /* Channel B Swap Enable */
    vuint32_t CHA_SWP_EN:1;            /* Channel A Swap Enable */
    vuint32_t TRM_EN:1;                /* Targeted Refresh Management */
    vuint32_t HP_EN:1;                 /* High Performance Enable */
    vuint32_t CMD_QUEUE_DPTH:2;        /* Command Queue Depth. */
    vuint32_t _unused_8:2;
    vuint32_t ECC_SCRUB_INT:4;         /* ECC Scrubbing Interval */
    vuint32_t _unused_2:2;
    vuint32_t ECC_FIX_EN:1;            /* ECC Fixing Enable */
    vuint32_t DDRC_RST:1;              /* DDRC Reset */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_3_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_4_union_tag { /* DDR SDRAM Control Configuration 4 */
  vuint32_t R;
  struct {
    vuint32_t BLK_RD_WR:3;             /* Block Read-To-Write. */
    vuint32_t BLK_WR_RD:3;             /* Block Write-To-Read. */
    vuint32_t BLK_RD_RD:3;             /* Block Read-To-Read. */
    vuint32_t BLK_WR_WR:3;             /* Block Write-To-Write. */
    vuint32_t DFI_FREQ:5;              /* DFI Frequency. */
    vuint32_t DFI_FREQ_HS:5;           /* DFI Frequency */
    vuint32_t _unused_8:2;
    vuint32_t PWROK_OVRD_VAL:1;        /* PwrOkIn Override Value. */
    vuint32_t PWROK_OVRD_EN:1;         /* PwrOkIn Override Enable. */
    vuint32_t RESET_OVRD_VAL:1;        /* Reset Override Value. */
    vuint32_t RESET_OVRD_EN:1;         /* Reset Override Enable. */
    vuint32_t DFI_WAKEUP:4;            /* DFI Wakeup. */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_4_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_5_union_tag { /* DDR SDRAM Control Configuration 5 */
  vuint32_t R;
  struct {
    vuint32_t LNK_ECC_EN:1;            /* Link ECC enable. */
    vuint32_t DSLP_EN:1;               /* Deep sleep enable. */
    vuint32_t _unused_24:6;
    vuint32_t WCK_DYN:1;               /* WCK Dynamic Mode. */
    vuint32_t _unused_8:15;
    vuint32_t MED_PRIO:4;              /* Medium Priority Level. */
    vuint32_t HIGH_PRIO:4;             /* High Priority Level. */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_5_tag;

typedef union DDR_DDRC_DDR_SDRAM_CFG_6_union_tag { /* DDR SDRAM Control Configuration 6 */
  vuint32_t R;
  struct {
    vuint32_t MR28_VAL:6;              /* MR28 Value. */
    vuint32_t RRO:1;                   /* Refresh rate option. */
    vuint32_t FRC_DFI_INIT:1;          /* Force dfi_init_start low. */
    vuint32_t ALT_TRN_INT:4;           /* Force dfi_init_start low. */
    vuint32_t ADDR_SZL_EN:1;           /* Address swizzle enable. */
    vuint32_t RD_SPLT_EN:1;            /* Read split enable. */
    vuint32_t SRE_DIS:1;               /* Self refresh entry disable. */
    vuint32_t _unused_16:1;
    vuint32_t RH_REF_SUB:3;            /* Row hammer refresh subtract value. */
    vuint32_t RH_THRSHLD3:3;           /* Row hammer threshold 3 value. */
    vuint32_t RH_THRSHLD2:3;           /* Row hammer threshold 2 value. */
    vuint32_t RH_THRSHLD1:3;           /* Row hammer threshold 1 value. */
    vuint32_t RH_CYC_RST:3;            /* Row hammer cycle reset value. */
    vuint32_t LP5_RFM_EN:1;            /* LPDDR5 refresh management enable. */
  } B;
} DDR_DDRC_DDR_SDRAM_CFG_6_tag;

typedef union DDR_DDRC_DDR_SDRAM_MD_CNTL2_union_tag { /* DDR SDRAM mode control 2 */
  vuint32_t R;
  struct {
    vuint32_t DQ_CNTL:18;              /* Data control. */
    vuint32_t MPRR_RD_SEL:2;           /* MPRR read select. */
    vuint32_t PDA_EN:1;                /* Per DDR SDRAM Addressability Enable. */
    vuint32_t _unused_3:8;
    vuint32_t NOP_EN:1;                /* NOP Enable. */
    vuint32_t MPRW:1;                  /* Multi-purpose register write. */
    vuint32_t MPRR:1;                  /* Multi-purpose register read. */
  } B;
} DDR_DDRC_DDR_SDRAM_MD_CNTL2_tag;

typedef union DDR_DDRC_DDR_SDRAM_MPR1_union_tag { /* DDR SDRAM multi-purpose register 1 */
  vuint32_t R;
  struct {
    vuint32_t MPR_READ:32;             /* MPR Read Value. */
  } B;
} DDR_DDRC_DDR_SDRAM_MPR1_tag;

typedef union DDR_DDRC_DDR_SDRAM_MPR2_union_tag { /* DDR SDRAM multi-purpose register 2 */
  vuint32_t R;
  struct {
    vuint32_t MPR_READ:32;             /* MPR Read Value. */
  } B;
} DDR_DDRC_DDR_SDRAM_MPR2_tag;

typedef union DDR_DDRC_DDR_SDRAM_MPR3_union_tag { /* DDR SDRAM multi-purpose register 3 */
  vuint32_t R;
  struct {
    vuint32_t MPR_READ:32;             /* MPR Read Value. */
  } B;
} DDR_DDRC_DDR_SDRAM_MPR3_tag;

typedef union DDR_DDRC_DDR_SDRAM_MPR4_union_tag { /* DDR SDRAM multi-purpose register 4 */
  vuint32_t R;
  struct {
    vuint32_t MPR_READ:32;             /* MPR Read Value. */
  } B;
} DDR_DDRC_DDR_SDRAM_MPR4_tag;

typedef union DDR_DDRC_DDR_SDRAM_MPR5_union_tag { /* DDR SDRAM multi-purpose register 5 */
  vuint32_t R;
  struct {
    vuint32_t MPR_VLD:1;               /* MPR Valid. */
    vuint32_t _unused_16:15;
    vuint32_t MPR_READ:16;             /* MPR Read Value. */
  } B;
} DDR_DDRC_DDR_SDRAM_MPR5_tag;

typedef union DDR_DDRC_DDR_SDRAM_REF_RATE_union_tag { /* DDR Refresh Rate */
  vuint32_t R;
  struct {
    vuint32_t REF_RATE_CS1:8;          /* Refresh Rate Rank 1 */
    vuint32_t REF_RATE_CS0:8;          /* Refresh Rate Rank 0 */
    vuint32_t REF_RATE_CS1_CHB:8;      /* Refresh Rate Rank 1 */
    vuint32_t REF_RATE_CS0_CHB:8;      /* Refresh Rate Rank 0 */
  } B;
} DDR_DDRC_DDR_SDRAM_REF_RATE_tag;

typedef union DDR_DDRC_TIMING_CFG_12_union_tag { /* DDR SDRAM Timing Configuration 12 */
  vuint32_t R;
  struct {
    vuint32_t CASLAT_HS:6;             /* CAS Latency For Half Speed */
    vuint32_t _unused_24:2;
    vuint32_t ACTTORW_HS:6;            /* Activate To Read Or Write For Half Speed */
    vuint32_t _unused_16:2;
    vuint32_t ACTTOPRE_HS:7;           /* Activate-To-Precharge Time For Half Speed */
    vuint32_t _unused_8:1;
    vuint32_t PRETOACT_HS:6;           /* Precharge-To-Activate Time For Half Speed */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_TIMING_CFG_12_tag;

typedef union DDR_DDRC_TIMING_CFG_13_union_tag { /* DDR SDRAM Timing Configuration 13 */
  vuint32_t R;
  struct {
    vuint32_t ACTTOACT_HS:5;           /* Activate-To-Activate Interval For Half Speed */
    vuint32_t _unused_24:3;
    vuint32_t WRREC_HS:6;              /* Write Recovery For Half Speed */
    vuint32_t _unused_16:2;
    vuint32_t REFREC_HS:10;            /* Refresh Recovery For Half Speed */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_TIMING_CFG_13_tag;

typedef union DDR_DDRC_TIMING_CFG_14_union_tag { /* DDR SDRAM Timing Configuration 14 */
  vuint32_t R;
  struct {
    vuint32_t REFINT_HS:17;            /* Refresh Interval For Half Speed */
    vuint32_t _unused_14:1;
    vuint32_t RD_TO_PRE_HS:5;          /* Read-To-Precharge Time For Half Speed */
    vuint32_t _unused_8:1;
    vuint32_t WRLAT_HS:6;              /* Write Latency For Half Speed */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_TIMING_CFG_14_tag;

typedef union DDR_DDRC_TIMING_CFG_15_union_tag { /* DDR SDRAM Timing Configuration 15 */
  vuint32_t R;
  struct {
    vuint32_t REFTOREF_PB_HS:10;       /* Refresh-to-refresh interval for per-bank refresh. */
    vuint32_t _unused_20:2;
    vuint32_t _unused_16:4;
    vuint32_t REFREC_PB_HS:10;         /* Refresh Recovery During Per-Bank Refresh. */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_TIMING_CFG_15_tag;

typedef union DDR_DDRC_TIMING_CFG_16_union_tag { /* DDR SDRAM Timing Configuration 16 */
  vuint32_t R;
  struct {
    vuint32_t T_STAB_HS:15;            /* Stabilization Wait Time at Half Speed */
    vuint32_t _unused_16:1;
    vuint32_t WCK_CNFGS_HS:16;         /* WCK Configuration Settings at Half Speed */
  } B;
} DDR_DDRC_TIMING_CFG_16_tag;

typedef union DDR_DDRC_TIMING_CFG_17_union_tag { /* DDR SDRAM Timing Configuration 17 */
  vuint32_t R;
  struct {
    vuint32_t ZQCS_INT_HS:4;           /* ZQCS Interval */
    vuint32_t _unused_24:4;
    vuint32_t ZQCS_HS:4;               /* ZQ Calibration Short Time */
    vuint32_t _unused_16:4;
    vuint32_t ZQOPER_HS:4;             /* ZQ Calibration Operation Time */
    vuint32_t _unused_8:4;
    vuint32_t ZQINIT_HS:4;             /* ZQ Calibration Initialization Time */
    vuint32_t _unused_0:4;
  } B;
} DDR_DDRC_TIMING_CFG_17_tag;

typedef union DDR_DDRC_TX_CFG_1_union_tag { /* Transaction Configuration Register 1 */
  vuint32_t R;
  struct {
    vuint32_t WWATER:4;                /* Write Watermark. */
    vuint32_t REAP_BLOCK_DIS:1;        /* Read Estimated Activate to Precharge Block Disable. */
    vuint32_t WEAP_BLOCK_DIS:1;        /* Write Estimated Activate to Precharge Block Disable. */
    vuint32_t NO_COS:1;                /* No Quality of Service. This field allows you to ignore the QOS value received by the DDR controller such that only one priority is used. */
    vuint32_t TS_DEPTH:5;              /* Transaction Scheduler Depth */
    vuint32_t _unused_19:1;            /* Disable read urgent mode capability */
    vuint32_t _unused_18:1;            /* Disable write urgent mode capability */
    vuint32_t _unused_17:1;
    vuint32_t RSRV_RDWR:1;             /* Reserve Read and Write Entries. */
    vuint32_t _unused_15:1;
    vuint32_t RDFC_DIS:1;              /* Read Data Flow Control Disabled. */
    vuint32_t NRM_OCC:2;               /* Normal Occupancy. */
    vuint32_t BAD_DD:1;                /* Bad Dropdown. */
    vuint32_t HPR:1;                   /* High Priority Read. */
    vuint32_t _unused_8:2;
    vuint32_t INF_WR_CNT:1;            /* Infinite Write Count. */
    vuint32_t INF_RD_CNT:1;            /* Infinite Read Count. */
    vuint32_t LT_REOD_DIS:1;           /* Large Transaction Reorder Disable. */
    vuint32_t _unused_4:1;
    vuint32_t SER:1;                   /* Serialize. */
    vuint32_t _unused_2:1;
    vuint32_t HWA_EN:1;                /* Hardware Assert Enable. */
    vuint32_t _unused_0:1;
  } B;
} DDR_DDRC_TX_CFG_1_tag;

typedef union DDR_DDRC_TX_CFG_2_union_tag { /* Transaction Configuration Register 2 */
  vuint32_t R;
  struct {
    vuint32_t WR_BONUS:5;              /* Write Bandwidth Bonus Count. */
    vuint32_t RSRVD_4:3;               /* Reserved. */
    vuint32_t WR_CNT:5;                /* Write Bandwidth Count. */
    vuint32_t RSRVD_3:3;               /* Reserved. */
    vuint32_t RD_BONUS:5;              /* Read Bandwidth Bonus Count. */
    vuint32_t RSRVD_2:3;               /* Reserved. */
    vuint32_t RD_CNT:5;                /* Read Bandwidth Count. */
    vuint32_t RT_OPT_DIS:1;            /* Real Time Traffic Optimizaiton Disable. */
    vuint32_t RD_EPA_DIS:1;            /* Read Precharge to Activate Disable. */
    vuint32_t WR_EPA_DIS:1;            /* Write Precharge to Activate Disable. */
  } B;
} DDR_DDRC_TX_CFG_2_tag;

typedef union DDR_DDRC_TX_CFG_3_union_tag { /* Transaction Configuration Register 3. */
  vuint32_t R;
  struct {
    vuint32_t RSRVD_4:3;               /* Reserved. */
    vuint32_t RMED_BDD:5;              /* Read Medium Bonus Dropdown. */
    vuint32_t RSRVD_3:3;               /* Reserved. */
    vuint32_t RHI_BDD:5;               /* Read High Bonus Dropdown. */
    vuint32_t RSRVD_2:3;               /* Reserved. */
    vuint32_t RMED_DD:5;               /* Read Medium Dropdown. */
    vuint32_t RSRVD_1:3;               /* Reserved. */
    vuint32_t RHI_DD:5;                /* Read High Dropdown. */
  } B;
} DDR_DDRC_TX_CFG_3_tag;

typedef union DDR_DDRC_TX_CFG_4_union_tag { /* Transaction Configuration Register 4. */
  vuint32_t R;
  struct {
    vuint32_t RSRVD_4:3;               /* Reserved. */
    vuint32_t RMED_BDDD:5;             /* Read Medium Bonus Dropdown Duration. */
    vuint32_t RSRVD_3:3;               /* Reserved. */
    vuint32_t RHI_BDDD:5;              /* Read High Bonus Dropdown Duration. */
    vuint32_t RSRVD_2:3;               /* Reserved. */
    vuint32_t RMED_DDD:5;              /* Read Medium Dropdown Duration. */
    vuint32_t RSRVD_1:3;               /* Reserved. */
    vuint32_t RHI_DDD:5;               /* Read High Dropdown Duration. */
  } B;
} DDR_DDRC_TX_CFG_4_tag;

typedef union DDR_DDRC_DDRDSR_2_union_tag { /* DDR SDRAM Debug Status 2 */
  vuint32_t R;
  struct {
    vuint32_t RPD_END:1;               /* Rapid Clear Of Memory End */
    vuint32_t RPD_ST:1;                /* Rapid Clear Of Memory Start */
    vuint32_t PHY_INIT_CMPLT:1;        /* DDR PHY Initialization Complete */
    vuint32_t _unused_2:27;
    vuint32_t NML:1;                   /* No Modified Lines */
    vuint32_t IDLE:1;                  /* Memory controller idle (read only). */
  } B;
} DDR_DDRC_DDRDSR_2_tag;

typedef union DDR_DDRC_DDR_IP_REV1_union_tag { /* DDRC Revision 1 */
  vuint32_t R;
  struct {
    vuint32_t IP_MN:8;                 /* Minor Revision */
    vuint32_t IP_MJ:8;                 /* Major Revision */
    vuint32_t IP_ID:16;                /* IP Block ID */
  } B;
} DDR_DDRC_DDR_IP_REV1_tag;

typedef union DDR_DDRC_DDR_IP_REV2_union_tag { /* DDRC Revision 2 */
  vuint32_t R;
  struct {
    vuint32_t IP_CFG:8;                /* IP Block Configuration Options */
    vuint32_t IP_ERRATA:8;             /* IP Errata Version. */
    vuint32_t IP_INT:8;                /* IP Block Integration Options */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_DDR_IP_REV2_tag;

typedef union DDR_DDRC_DDR_EOR_union_tag { /* DDR Enhanced Optimization Register */
  vuint32_t R;
  struct {
    vuint32_t DYN_BSTOPRE_THRSHLD:6;   /* Dynamic BSTOPRE threshold. */
    vuint32_t _unused_24:2;
    vuint32_t DYN_BSTOPRE_EN:1;        /* Dynamic BSTOPRE enable. */
    vuint32_t _unused_12:11;
    vuint32_t WR_REOD_DIS:2;           /* Write reorder disable. */
    vuint32_t _unused_8:2;
    vuint32_t RD_REOD_DIS:3;           /* Read reorder disable. */
    vuint32_t _unused_2:3;
    vuint32_t ADDR_HASH_EN:1;          /* Address hash enabled. */
    vuint32_t RD_BDW_OPT_DIS:1;        /* Read bandwidth optimization disable. */
  } B;
} DDR_DDRC_DDR_EOR_tag;

typedef union DDR_DDRC_DDR_MTCR_union_tag { /* DDR SDRAM Memory Test Control */
  vuint32_t R;
  struct {
    vuint32_t MT_STAT:1;               /* Memory Test Status */
    vuint32_t _unused_25:6;
    vuint32_t _unused_24:1;
    vuint32_t MT_ADDR2_EN:1;           /* Memory Test Address Range 2 Enable. */
    vuint32_t MT_ADDR_EN:1;            /* Memory Test Address Range Enable */
    vuint32_t _unused_20:2;
    vuint32_t MT_TSIZ:3;               /* Memory Test Transaction Size. */
    vuint32_t _unused_16:1;
    vuint32_t MT_TRNARND:4;            /* Memory Test Turnaround */
    vuint32_t _unused_8:4;
    vuint32_t MT_TYP:2;                /* Memory Test Type */
    vuint32_t _unused_1:5;
    vuint32_t MT_EN:1;                 /* Memory Test Enable */
  } B;
} DDR_DDRC_DDR_MTCR_tag;

typedef union DDR_DDRC_DDR_MTP_union_tag { /* DDR SDRAM Memory Test Pattern n */
  vuint32_t R;
  struct {
    vuint32_t DDR_PATT:32;             /* DDR SDRAM Pattern */
  } B;
} DDR_DDRC_DDR_MTP_tag;

typedef union DDR_DDRC_DDR_MT_ST_EXT_ADDR_union_tag { /* DDR SDRAM Memory Test Start Extended Address */
  vuint32_t R;
  struct {
    vuint32_t MT_ST_EXT_ADDR:8;        /* Memory Test Start Extended Address */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_DDR_MT_ST_EXT_ADDR_tag;

typedef union DDR_DDRC_DDR_MT_ST_ADDR_union_tag { /* DDR SDRAM Memory Test Start Address */
  vuint32_t R;
  struct {
    vuint32_t MT_ST_ADDR:32;           /* Memory Test Start Address */
  } B;
} DDR_DDRC_DDR_MT_ST_ADDR_tag;

typedef union DDR_DDRC_DDR_MT_END_EXT_ADDR_union_tag { /* DDR SDRAM Memory Test End Extended Address */
  vuint32_t R;
  struct {
    vuint32_t MT_END_EXT_ADDR:8;       /* Memory Test End Extended Address */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_DDR_MT_END_EXT_ADDR_tag;

typedef union DDR_DDRC_DDR_MT_END_ADDR_union_tag { /* DDR SDRAM Memory Test End Address */
  vuint32_t R;
  struct {
    vuint32_t MT_END_ADDR:32;          /* Memory Test End Address */
  } B;
} DDR_DDRC_DDR_MT_END_ADDR_tag;

typedef union DDR_DDRC_DDR_MT_ST_EXT_ADDR2_union_tag { /* DDR Memory Test Start Extended Address 2 */
  vuint32_t R;
  struct {
    vuint32_t MT_ST_EXT_ADDR2:8;       /* Memory Test Start Extended Address 2 */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_DDR_MT_ST_EXT_ADDR2_tag;

typedef union DDR_DDRC_DDR_MT_ST_ADDR2_union_tag { /* DDR Memory Test Start Address 2 */
  vuint32_t R;
  struct {
    vuint32_t MT_ST_ADDR2:32;          /* Memory Test Start Address 2 */
  } B;
} DDR_DDRC_DDR_MT_ST_ADDR2_tag;

typedef union DDR_DDRC_DDR_MT_END_EXT_ADDR2_union_tag { /* DDR Memory Test End Extended Address 2 */
  vuint32_t R;
  struct {
    vuint32_t MT_END_EXT_ADDR2:8;      /* Memory Test End Extended Address 2 */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_DDR_MT_END_EXT_ADDR2_tag;

typedef union DDR_DDRC_DDR_MT_END_ADDR2_union_tag { /* DDR Memory Test End Address 2 */
  vuint32_t R;
  struct {
    vuint32_t MT_END_ADDR2:32;         /* Memory Test End Address 2 */
  } B;
} DDR_DDRC_DDR_MT_END_ADDR2_tag;

typedef union DDR_DDRC_DEBUG_1_union_tag { /* Debug 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_29:3;
    vuint32_t MAPD:1;                  /* Transaction scheduler auto-precharge disable. */
    vuint32_t _unused_17:11;
    vuint32_t CM:1;                    /* Crawl mode. */
    vuint32_t _unused_3:13;
    vuint32_t FRC_ZQCS:1;              /* Force ZQCS command. */
    vuint32_t FRC_ZQCL:1;              /* Force ZQCL command. */
    vuint32_t UZQO:1;                  /* Update ZQ Calibration Once. */
  } B;
} DDR_DDRC_DEBUG_1_tag;

typedef union DDR_DDRC_DEBUG_2_union_tag { /* Debug 2 */
  vuint32_t R;
  struct {
    vuint32_t NML:1;                   /* No Modified Lines */
    vuint32_t IDLE:1;                  /* Memory controller idle (read only). */
    vuint32_t SR_I:1;                  /* Memory controller is in self refresh due to idle (read only). */
    vuint32_t SR:1;                    /* Memory controller is in self refresh and clocks can be gated (read only). */
    vuint32_t _unused_26:2;
    vuint32_t IR:1;                    /* Issue refresh. */
    vuint32_t WRCD:1;                  /* Write Cancel Disable */
    vuint32_t _unused_21:3;
    vuint32_t BYTE_MODE:1;             /* Byte Mode. */
    vuint32_t _unused_0:20;
  } B;
} DDR_DDRC_DEBUG_2_tag;

typedef union DDR_DDRC_DEBUG_4_union_tag { /* Debug 4 */
  vuint32_t R;
  struct {
    vuint32_t EDDRTQ_CFG_5:32;         /* eDDRTQ_CFG_5 used by the eDDRTQ. */
  } B;
} DDR_DDRC_DEBUG_4_tag;

typedef union DDR_DDRC_DEBUG_19_union_tag { /* Debug 19 */
  vuint32_t R;
  struct {
    vuint32_t _unused_30:2;
    vuint32_t CNTR_OVRD_VAL:3;         /* Counter Override Value. */
    vuint32_t CNTR_OVRD:1;             /* Counter Override Enable. */
    vuint32_t _unused_16:10;
    vuint32_t MCK_DIS:1;               /* MCK Gating Disable. */
    vuint32_t _unused_11:4;
    vuint32_t ALT_TRAIN_EN:1;          /* Alternate Train Enable. */
    vuint32_t _unused_8:2;
    vuint32_t REF_READ_RATE:4;         /* Refresh Read Rate. */
    vuint32_t _unused_2:2;
    vuint32_t FRC_1X_REF_RATE:1;       /* Force 1x refresh rate. */
    vuint32_t MCSR:1;                  /* DDRC Soft Reset. */
  } B;
} DDR_DDRC_DEBUG_19_tag;

typedef union DDR_DDRC_DEBUG_20_union_tag { /* Debug 20 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t DISM_CS:5;               /* DISM Current State. */
    vuint32_t SPARE_CNFG:1;            /* Spare config bits. */
    vuint32_t _unused_1:1;
    vuint32_t INIT_DONE:1;             /* Initialization Done. */
  } B;
} DDR_DDRC_DEBUG_20_tag;

typedef union DDR_DDRC_DEBUG_26_union_tag { /* Debug 26 */
  vuint32_t R;
  struct {
    vuint32_t DDRC_WEOD_DIS:1;         /* Command Queue Write Reordering Disable. */
    vuint32_t _unused_30:1;
    vuint32_t DIS_CTRLUPD_REQ:1;       /* Disable Controller Update Request. */
    vuint32_t FRC_WRDATA_CS0:1;        /* Force Write Data Timing to rank 0 */
    vuint32_t DIS_WR_COMB:1;           /* Disable Write Combining for ECC */
    vuint32_t SPARE_CNFG2:1;           /* Spare config bits. This must be set to 0. */
    vuint32_t RESET_RAM:1;             /* Reset RAM. */
    vuint32_t IDLE_FLUSH_DIS:1;        /* Idle Flush Disable. */
    vuint32_t WCK_CS:2;                /* WCK_CS Debug. */
    vuint32_t LEGACY_ROQ:1;            /* Legacy ROQ mode. */
    vuint32_t DDRC_REOD_DIS:1;         /* Command Queue Read Reordering Disable. */
    vuint32_t DFI_FREQ:5;              /* DFI Frequency. */
    vuint32_t DFI_FREQ_HS:5;           /* DFI Frequency. */
    vuint32_t EXT_DFI_WAKEUP:1;        /* Extended DFI Wakeup. */
    vuint32_t DFI_RSTN:1;              /* DFI Reset_N. */
    vuint32_t DFI_FREQ_FSP_HS:2;       /* DFI Frequency FSP Half-Speed. */
    vuint32_t DFI_FREQ_FSP:2;          /* DFI Frequency FSP. */
    vuint32_t DFI_WAKEUP:4;            /* DFI Wakeup. */
  } B;
} DDR_DDRC_DEBUG_26_tag;

typedef union DDR_DDRC_DEBUG_27_union_tag { /* Debug 27 */
  vuint32_t R;
  struct {
    vuint32_t _unused_8:24;
    vuint32_t INVC:1;                  /* Invalidate Cache */
    vuint32_t PRE_TO_ACT_4X:1;         /* Precharge-To-Activate x4. */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_DEBUG_27_tag;

typedef union DDR_DDRC_DEBUG_28_union_tag { /* Debug 28 */
  vuint32_t R;
  struct {
    vuint32_t PLL_LCK:1;               /* DDR PHY PLL Lock. */
    vuint32_t _unused_16:15;
    vuint32_t WLAST_ERR:1;             /* WLAST error bit. */
    vuint32_t _unused_0:15;
  } B;
} DDR_DDRC_DEBUG_28_tag;

typedef union DDR_DDRC_ERR_EN_union_tag { /* Error Enable */
  vuint32_t R;
  struct {
    vuint32_t WTE_EN:1;                /* Write Tag Error Enable */
    vuint32_t RTE_EN:1;                /* Read Tag Error Enable */
    vuint32_t LKSTP_2_EN:1;            /* Lockstep 2 Enable */
    vuint32_t LKSTP_1_EN:1;            /* Lockstep 1 Enable */
    vuint32_t _unused_27:1;
    vuint32_t PAR_1_EN:1;              /* Parity Enable For Internal Errors */
    vuint32_t ECC_EN_RAM_2:1;          /* ECC Enable For On-Chip RAM 2 */
    vuint32_t ECC_EN_RAM_1:1;          /* ECC Enable For On-Chip RAM 1 */
    vuint32_t CRC_2_EN:1;              /* CRC Enable For Group 2 Registers */
    vuint32_t CRC_1_EN:1;              /* CRC Enable For Group 1 Registers */
    vuint32_t _unused_8:14;
    vuint32_t DRAM_SF1_EN:1;           /* DRAM Safety Feature 1 Enable */
    vuint32_t DRAM_SF2_EN:1;           /* DRAM Safety Feature 2 Enable */
    vuint32_t DRAM_SF3_EN:1;           /* DRAM Safety Feature 3 Enable */
    vuint32_t _unused_2:3;
    vuint32_t INLINE_ECC_EN:1;         /* Inline ECC Enable */
    vuint32_t ECC_EN:1;                /* ECC Enable */
  } B;
} DDR_DDRC_ERR_EN_tag;

typedef union DDR_DDRC_DATA_ERR_INJECT_HI_union_tag { /* Memory Data Path Error Injection Mask High */
  vuint32_t R;
  struct {
    vuint32_t EIMH:32;                 /* Error Injection Mask High Data Path */
  } B;
} DDR_DDRC_DATA_ERR_INJECT_HI_tag;

typedef union DDR_DDRC_DATA_ERR_INJECT_LO_union_tag { /* Memory Data Path Error Injection Mask Low */
  vuint32_t R;
  struct {
    vuint32_t EIML:32;                 /* Error Injection Mask Low Data Bit */
  } B;
} DDR_DDRC_DATA_ERR_INJECT_LO_tag;

typedef union DDR_DDRC_ERR_INJECT_union_tag { /* Memory Data Path Error Injection Mask ECC */
  vuint32_t R;
  struct {
    vuint32_t EEIM:8;                  /* ECC Error Injection Mask */
    vuint32_t EIEN:1;                  /* Error Injection Enable */
    vuint32_t _unused_22:1;
    vuint32_t _unused_20:2;
    vuint32_t NUM_ECC_INJ:4;           /* Number Of ECC Errors Injected */
    vuint32_t PIEN:1;                  /* Parity Error Injection Enable */
    vuint32_t INTEIN:1;                /* Internal Error Injection Enable */
    vuint32_t INTIES:3;                /* Internal Error Injection Source */
    vuint32_t ECC_INJ_SRC:2;           /* ECC Injection Source */
    vuint32_t FRC2B:1;                 /* Force 2-Bit Error */
    vuint32_t PAR_INJ_SRC:2;           /* Parity Error Injection Source */
    vuint32_t _unused_1:5;
    vuint32_t ADDR_TEN:1;              /* Address Trigger Enable */
  } B;
} DDR_DDRC_ERR_INJECT_tag;

typedef union DDR_DDRC_ADDR_ERR_INJ_union_tag { /* Address Error Inject */
  vuint32_t R;
  struct {
    vuint32_t ADDR:32;                 /* Address */
  } B;
} DDR_DDRC_ADDR_ERR_INJ_tag;

typedef union DDR_DDRC_EXT_ADDR_ERR_INJ_union_tag { /* Extended Address Error Inject */
  vuint32_t R;
  struct {
    vuint32_t EADDR:8;                 /* Extended Address */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_EXT_ADDR_ERR_INJ_tag;

typedef union DDR_DDRC_CAPTURE_EXT_DATA_HI_union_tag { /* Memory Extended Data Path Read Capture High */
  vuint32_t R;
  struct {
    vuint32_t ECEHD:32;                /* Error Capture Extended High Data Path */
  } B;
} DDR_DDRC_CAPTURE_EXT_DATA_HI_tag;

typedef union DDR_DDRC_CAPTURE_EXT_DATA_LO_union_tag { /* Memory Extended Data Path Read Capture Low */
  vuint32_t R;
  struct {
    vuint32_t ECELD:32;                /* Error Capture Extended Low Data Path */
  } B;
} DDR_DDRC_CAPTURE_EXT_DATA_LO_tag;

typedef union DDR_DDRC_CAPTURE_DATA_HI_union_tag { /* Memory Data Path Read Capture High */
  vuint32_t R;
  struct {
    vuint32_t ECHD:32;                 /* Error Capture High Data Path */
  } B;
} DDR_DDRC_CAPTURE_DATA_HI_tag;

typedef union DDR_DDRC_CAPTURE_DATA_LO_union_tag { /* Memory Data Path Read Capture Low */
  vuint32_t R;
  struct {
    vuint32_t ECLD:32;                 /* Error Capture Low Data Path */
  } B;
} DDR_DDRC_CAPTURE_DATA_LO_tag;

typedef union DDR_DDRC_CAPTURE_ECC_union_tag { /* Memory Data Path Read Capture ECC */
  vuint32_t R;
  struct {
    vuint32_t ECE:32;                  /* Error Capture ECC */
  } B;
} DDR_DDRC_CAPTURE_ECC_tag;

typedef union DDR_DDRC_ERR_DETECT_union_tag { /* Memory Error Detect */
  vuint32_t R;
  struct {
    vuint32_t MSE:1;                   /* Memory-Select Error */
    vuint32_t _unused_30:1;
    vuint32_t SBE:1;                   /* Single-Bit ECC Errors */
    vuint32_t MBE:1;                   /* Multiple-Bit Error */
    vuint32_t _unused_27:1;
    vuint32_t _unused_25:2;
    vuint32_t REFRATEE:1;              /* Refresh rate error. */
    vuint32_t _unused_22:2;
    vuint32_t _unused_21:1;
    vuint32_t _unused_20:1;
    vuint32_t SSBE:1;                  /* Scrubbed Single-Bit ECC Error */
    vuint32_t LNKE:1;                  /* Link ECC Error */
    vuint32_t DRAM1E:1;                /* DRAM 1 error. */
    vuint32_t DRAM2E:1;                /* DRAM 2 error. */
    vuint32_t PHYE:1;                  /* PHY error. */
    vuint32_t CFGE:1;                  /* Configuration read error. */
    vuint32_t REGE:1;                  /* Region error. */
    vuint32_t IPE:1;                   /* Internal Parity Error */
    vuint32_t UPDTMTE:1;               /* Update Timeout Error */
    vuint32_t CRCE:1;                  /* Configuration CRC Error */
    vuint32_t SMBE2:1;                 /* SRAM Multi-Bit Error 2 */
    vuint32_t SMBE1:1;                 /* SRAM Multi-Bit Error 1 */
    vuint32_t SSBE2:1;                 /* SRAM SBE 2 */
    vuint32_t SSBE1:1;                 /* SRAM SBE 1 */
    vuint32_t WTAGE:1;                 /* Write Tag Error */
    vuint32_t RTAGE:1;                 /* Read Tag Error */
    vuint32_t WTTE:1;                  /* Write Tag Timeout Error */
    vuint32_t RTTE:1;                  /* Read Tag Timeout Error */
    vuint32_t RTMTE:1;                 /* Read Timeout Error */
    vuint32_t MME:1;                   /* Multiple Memory Errors */
  } B;
} DDR_DDRC_ERR_DETECT_tag;

typedef union DDR_DDRC_ERR_DISABLE_union_tag { /* Memory Error Disable */
  vuint32_t R;
  struct {
    vuint32_t MSED:1;                  /* Memory-Select Error Disable */
    vuint32_t _unused_30:1;
    vuint32_t SBED:1;                  /* Single-Bit ECC Error Disable */
    vuint32_t MBED:1;                  /* Multiple-Bit ECC Error Disable */
    vuint32_t ILLTXNED:1;              /* Illegal Transaction Error Disable */
    vuint32_t _unused_25:2;
    vuint32_t REFRATEED:1;             /* Refresh Rate Error Disable */
    vuint32_t LNKED:1;                 /* Link ECC Error Disable */
    vuint32_t SPARE:1;                 /* Spare config bit. */
    vuint32_t _unused_20:2;
    vuint32_t SSBED:1;                 /* Scrubbed Single-Bit ECC Error Disable */
    vuint32_t _unused_16:3;
    vuint32_t PHYED:1;                 /* PHY Error Disable */
    vuint32_t _unused_12:3;
    vuint32_t UPDTMTED:1;              /* Update Timeout Error Disable */
    vuint32_t _unused_0:11;
  } B;
} DDR_DDRC_ERR_DISABLE_tag;

typedef union DDR_DDRC_ERR_INT_EN_union_tag { /* Memory Error Interrupt Enable */
  vuint32_t R;
  struct {
    vuint32_t MSEE:1;                  /* Memory-Select Error Interrupt Enable */
    vuint32_t _unused_30:1;
    vuint32_t SBEE:1;                  /* Single-Bit ECC Error Interrupt Enable */
    vuint32_t MBEE:1;                  /* Multiple-Bit ECC Error Interrupt Enable */
    vuint32_t SSBE12E:1;               /* SRAM Single-Bit Error Interrupt Enable */
    vuint32_t _unused_25:2;
    vuint32_t REFRATEEE:1;             /* Refresh Rate Interrupt Enable */
    vuint32_t ILLTXNEE:1;              /* Illegal Transaction Interrupt Enable */
    vuint32_t LNKEE:1;                 /* Link ECC Error Interrupt Enable */
    vuint32_t _unused_20:2;
    vuint32_t SSBEE:1;                 /* Scrubbed Single-Bit ECC Error Interrupt Enable */
    vuint32_t _unused_16:3;
    vuint32_t PHYEE:1;                 /* PHY error interrupt enable. */
    vuint32_t _unused_12:3;
    vuint32_t UPDTMTEE:1;              /* Update Timeout Interrupt Enable */
    vuint32_t _unused_0:11;
  } B;
} DDR_DDRC_ERR_INT_EN_tag;

typedef union DDR_DDRC_CAPTURE_ATTRIBUTES_union_tag { /* Memory Error Attributes Capture */
  vuint32_t R;
  struct {
    vuint32_t VLD:1;                   /* Valid */
    vuint32_t _unused_28:3;
    vuint32_t _unused_24:4;
    vuint32_t _unused_20:4;
    vuint32_t TTYP:2;                  /* Error Transaction Type */
    vuint32_t _unused_16:2;
    vuint32_t TSRC:8;                  /* Error Transaction Source */
    vuint32_t TSIZ:3;                  /* Error Transaction Size */
    vuint32_t _unused_4:1;
    vuint32_t BNUM:3;                  /* Data Beat Number */
    vuint32_t _unused_0:1;
  } B;
} DDR_DDRC_CAPTURE_ATTRIBUTES_tag;

typedef union DDR_DDRC_CAPTURE_ADDRESS_union_tag { /* Memory Error Address Capture */
  vuint32_t R;
  struct {
    vuint32_t CADDR:32;                /* Captured Address */
  } B;
} DDR_DDRC_CAPTURE_ADDRESS_tag;

typedef union DDR_DDRC_CAPTURE_EXT_ADDRESS_union_tag { /* Memory Error Extended Address Capture */
  vuint32_t R;
  struct {
    vuint32_t CEADDR:8;                /* Captured Extended Address */
    vuint32_t _unused_0:24;
  } B;
} DDR_DDRC_CAPTURE_EXT_ADDRESS_tag;

typedef union DDR_DDRC_ERR_SBE_union_tag { /* Single-Bit ECC Memory Error Management */
  vuint32_t R;
  struct {
    vuint32_t SBEC:8;                  /* SBE Counter */
    vuint32_t SSBEC:8;                 /* Scrubbed SBE Counter */
    vuint32_t SBET:8;                  /* SBE Threshold */
    vuint32_t SSBET:8;                 /* Scrubbed SBE Threshold */
  } B;
} DDR_DDRC_ERR_SBE_tag;

typedef union DDR_DDRC_REG_CRC_GRP_1_union_tag { /* Register CRC Code For Group 1 */
  vuint32_t R;
  struct {
    vuint32_t CRC_1:32;                /* Programmed CRC Code */
  } B;
} DDR_DDRC_REG_CRC_GRP_1_tag;

typedef union DDR_DDRC_REG_CRC_GRP_2_union_tag { /* Register CRC Code For Group 2 */
  vuint32_t R;
  struct {
    vuint32_t CRC_2:32;                /* Programmed CRC Code */
  } B;
} DDR_DDRC_REG_CRC_GRP_2_tag;

typedef union DDR_DDRC_ECC_EXT_REG_0_union_tag { /* ECC Extended Region 0 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_0_EA:8;          /* Extended Region 0 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_0_SA:8;          /* Extended Region 0 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_0_tag;

typedef union DDR_DDRC_ECC_EXT_REG_1_union_tag { /* ECC Extended Region 1 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_1_EA:8;          /* Extended Region 1 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_1_SA:8;          /* Extended Region 1 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_1_tag;

typedef union DDR_DDRC_ECC_EXT_REG_2_union_tag { /* ECC Extended Region 2 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_2_EA:8;          /* Extended Region 2 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_2_SA:8;          /* Extended Region 2 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_2_tag;

typedef union DDR_DDRC_ECC_EXT_REG_3_union_tag { /* ECC Extended Region 3 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_3_EA:8;          /* Extended Region 3 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_3_SA:8;          /* Extended Region 3 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_3_tag;

typedef union DDR_DDRC_ECC_EXT_REG_4_union_tag { /* ECC Extended Region 4 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_4_EA:8;          /* Extended Region 4 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_4_SA:8;          /* Extended Region 4 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_4_tag;

typedef union DDR_DDRC_ECC_EXT_REG_5_union_tag { /* ECC Extended Region 5 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_5_EA:8;          /* Extended Region 5 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_5_SA:8;          /* Extended Region 5 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_5_tag;

typedef union DDR_DDRC_ECC_EXT_REG_6_union_tag { /* ECC Extended Region 6 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_6_EA:8;          /* Extended Region 6 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_6_SA:8;          /* Extended Region 6 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_6_tag;

typedef union DDR_DDRC_ECC_EXT_REG_7_union_tag { /* ECC Extended Region 7 Configuration */
  vuint32_t R;
  struct {
    vuint32_t EXT_REG_7_EA:8;          /* Extended Region 7 End Address */
    vuint32_t _unused_16:8;
    vuint32_t EXT_REG_7_SA:8;          /* Extended Region 7 Start Address */
    vuint32_t _unused_0:8;
  } B;
} DDR_DDRC_ECC_EXT_REG_7_tag;

typedef union DDR_DDRC_ECC_REG_0_union_tag { /* ECC Region 0 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_0_EA:12;             /* Region 0 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_0_SA:12;             /* Region 0 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_0_EN:1;              /* Region 0 Enable */
  } B;
} DDR_DDRC_ECC_REG_0_tag;

typedef union DDR_DDRC_ECC_REG_1_union_tag { /* ECC Region 1 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_1_EA:12;             /* Region 1 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_1_SA:12;             /* Region 1 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_1_EN:1;              /* Region 1 Enable */
  } B;
} DDR_DDRC_ECC_REG_1_tag;

typedef union DDR_DDRC_ECC_REG_2_union_tag { /* ECC Region 2 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_2_EA:12;             /* Region 2 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_2_SA:12;             /* Region 2 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_2_EN:1;              /* Region 2 Enable */
  } B;
} DDR_DDRC_ECC_REG_2_tag;

typedef union DDR_DDRC_ECC_REG_3_union_tag { /* ECC Region 3 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_3_EA:12;             /* Region 3 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_3_SA:12;             /* Region 3 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_3_EN:1;              /* Region 3 Enable */
  } B;
} DDR_DDRC_ECC_REG_3_tag;

typedef union DDR_DDRC_ECC_REG_4_union_tag { /* ECC Region 4 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_4_EA:12;             /* Region 4 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_4_SA:12;             /* Region 4 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_4_EN:1;              /* Region 4 Enable */
  } B;
} DDR_DDRC_ECC_REG_4_tag;

typedef union DDR_DDRC_ECC_REG_5_union_tag { /* ECC Region 5 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_5_EA:12;             /* Region 5 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_5_SA:12;             /* Region 5 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_5_EN:1;              /* Region 5 Enable */
  } B;
} DDR_DDRC_ECC_REG_5_tag;

typedef union DDR_DDRC_ECC_REG_6_union_tag { /* ECC Region 6 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_6_EA:12;             /* Region 6 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_6_SA:12;             /* Region 6 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_6_EN:1;              /* Region 6 Enable */
  } B;
} DDR_DDRC_ECC_REG_6_tag;

typedef union DDR_DDRC_ECC_REG_7_union_tag { /* ECC Region 7 Configuration */
  vuint32_t R;
  struct {
    vuint32_t REG_7_EA:12;             /* Region 7 End Address */
    vuint32_t _unused_16:4;
    vuint32_t REG_7_SA:12;             /* Region 7 Start Address */
    vuint32_t _unused_1:3;
    vuint32_t REG_7_EN:1;              /* Region 7 Enable */
  } B;
} DDR_DDRC_ECC_REG_7_tag;

typedef union DDR_DDRC_PMCFG_1_union_tag { /* Performance Monitor Configuration 1 */
  vuint32_t R;
  struct {
    vuint32_t _unused_14:18;
    vuint32_t _unused_3:11;
    vuint32_t _unused_2:1;
    vuint32_t RD_BT_FILT_EN:1;         /* Read Beat Filter Enable */
    vuint32_t WR_BEAT_FILT_EN:1;       /* Write Beat Filter Enable */
  } B;
} DDR_DDRC_PMCFG_1_tag;

typedef union DDR_DDRC_PMCFG_2_union_tag { /* Performance Monitor Configuration 2 */
  vuint32_t R;
  struct {
    vuint32_t _unused_14:18;
    vuint32_t _unused_0:14;
  } B;
} DDR_DDRC_PMCFG_2_tag;

typedef union DDR_DDRC_PMCFG_3_union_tag { /* Performance Monitor Configuration 3 */
  vuint32_t R;
  struct {
    vuint32_t MSTR_ID_MSK_3:10;        /* Master ID Mask 3 */
    vuint32_t _unused_16:6;
    vuint32_t MSTR_ID_3:10;            /* Master ID 3 */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_PMCFG_3_tag;

typedef union DDR_DDRC_PMCFG_4_union_tag { /* Performance Monitor Configuration 4 */
  vuint32_t R;
  struct {
    vuint32_t MSTR_ID_MSK_2:10;        /* Master ID Mask 2 */
    vuint32_t _unused_16:6;
    vuint32_t MSTR_ID_2:10;            /* Master ID 2 */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_PMCFG_4_tag;

typedef union DDR_DDRC_PMCFG_5_union_tag { /* Performance Monitor Configuration 5 */
  vuint32_t R;
  struct {
    vuint32_t MSTR_ID_MSK_1:10;        /* Master ID Mask 1 */
    vuint32_t _unused_16:6;
    vuint32_t MSTR_ID_1:10;            /* Master ID 1 */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_PMCFG_5_tag;

typedef union DDR_DDRC_PMCFG_6_union_tag { /* Performance Monitor Configuration 6 */
  vuint32_t R;
  struct {
    vuint32_t MSTR_ID_MSK_0:10;        /* Master ID Mask 0 */
    vuint32_t _unused_16:6;
    vuint32_t MSTR_ID_0:10;            /* Master ID 0 */
    vuint32_t _unused_0:6;
  } B;
} DDR_DDRC_PMCFG_6_tag;

typedef union DDR_DDRC_PMGC0_union_tag { /* Performance Monitor Global Control */
  vuint32_t R;
  struct {
    vuint32_t _unused_3:29;
    vuint32_t FCECE:1;                 /* Freeze Counters On Enabled Condition Or Event */
    vuint32_t PMIE:1;                  /* Performance Monitor Interrupt Enable */
    vuint32_t FAC:1;                   /* Freeze All Counters */
  } B;
} DDR_DDRC_PMGC0_tag;

typedef union DDR_DDRC_PMLCA0_union_tag { /* Performance Monitor Local Control A0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_6:26;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA0_tag;

typedef union DDR_DDRC_PMLCB0_union_tag { /* Performance Monitor Local Control B0 */
  vuint32_t R;
  struct {
    vuint32_t _unused_16:16;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB0_tag;

typedef union DDR_DDRC_PMC0A_union_tag { /* PMC 0a */
  vuint32_t R;
  struct {
    vuint32_t PMC0:32;                 /* Counter 0 */
  } B;
} DDR_DDRC_PMC0A_tag;

typedef union DDR_DDRC_PMC0B_union_tag { /* PMC 0b */
  vuint32_t R;
  struct {
    vuint32_t PMC0:32;                 /* Counter 0 */
  } B;
} DDR_DDRC_PMC0B_tag;

typedef union DDR_DDRC_PMLCA1_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA1_tag;

typedef union DDR_DDRC_PMLCB1_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB1_tag;

typedef union DDR_DDRC_PMC1_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC1:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC1_tag;

typedef union DDR_DDRC_PMLCA2_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA2_tag;

typedef union DDR_DDRC_PMLCB2_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB2_tag;

typedef union DDR_DDRC_PMC2_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC2:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC2_tag;

typedef union DDR_DDRC_PMLCA3_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA3_tag;

typedef union DDR_DDRC_PMLCB3_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB3_tag;

typedef union DDR_DDRC_PMC3_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC3:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC3_tag;

typedef union DDR_DDRC_PMLCA4_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA4_tag;

typedef union DDR_DDRC_PMLCB4_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB4_tag;

typedef union DDR_DDRC_PMC4_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC4:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC4_tag;

typedef union DDR_DDRC_PMLCA5_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA5_tag;

typedef union DDR_DDRC_PMLCB5_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB5_tag;

typedef union DDR_DDRC_PMC5_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC5:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC5_tag;

typedef union DDR_DDRC_PMLCA6_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA6_tag;

typedef union DDR_DDRC_PMLCB6_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB6_tag;

typedef union DDR_DDRC_PMC6_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC6:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC6_tag;

typedef union DDR_DDRC_PMLCA7_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA7_tag;

typedef union DDR_DDRC_PMLCB7_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB7_tag;

typedef union DDR_DDRC_PMC7_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC7:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC7_tag;

typedef union DDR_DDRC_PMLCA8_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA8_tag;

typedef union DDR_DDRC_PMLCB8_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB8_tag;

typedef union DDR_DDRC_PMC8_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC8:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC8_tag;

typedef union DDR_DDRC_PMLCA9_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA9_tag;

typedef union DDR_DDRC_PMLCB9_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB9_tag;

typedef union DDR_DDRC_PMC9_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC9:32;                 /* Event Count */
  } B;
} DDR_DDRC_PMC9_tag;

typedef union DDR_DDRC_PMLCA10_union_tag { /* Performance Monitor Local Control A */
  vuint32_t R;
  struct {
    vuint32_t BDIST:6;                 /* Burst Distance */
    vuint32_t BGRAN:5;                 /* Burst Granularity */
    vuint32_t BSIZE:5;                 /* Burst Size */
    vuint32_t EVENT:7;                 /* Event Selector */
    vuint32_t _unused_6:3;
    vuint32_t CE:1;                    /* Condition Enable */
    vuint32_t _unused_1:4;
    vuint32_t FC:1;                    /* Freeze Counter */
  } B;
} DDR_DDRC_PMLCA10_tag;

typedef union DDR_DDRC_PMLCB10_union_tag { /* Performance Monitor Local Control B */
  vuint32_t R;
  struct {
    vuint32_t THRESHOLD:6;             /* Threshold */
    vuint32_t _unused_24:2;
    vuint32_t TBMULT:3;                /* Threshold And Burstiness Multiplier */
    vuint32_t _unused_16:5;
    vuint32_t TRIGOFFCNTL:2;           /* Trigger-Off Control */
    vuint32_t TRIGONCNTL:2;            /* Trigger-On Control */
    vuint32_t TRIGOFFSEL:4;            /* Trigger-Off Select */
    vuint32_t _unused_6:2;
    vuint32_t TRIGONSEL:4;             /* Trigger-On Select */
    vuint32_t _unused_0:2;
  } B;
} DDR_DDRC_PMLCB10_tag;

typedef union DDR_DDRC_PMC10_union_tag { /* Performance Monitor Counter */
  vuint32_t R;
  struct {
    vuint32_t PMC10:32;                /* Event Count */
  } B;
} DDR_DDRC_PMC10_tag;

struct DDR_DDRC_tag {
  DDR_DDRC_CS_BNDS_tag CS_BNDS[2];
  DDR_DDRC_REMAP_EXT_0_tag REMAP_EXT_0; /* Remap Extended Region 0 Configuration */
  DDR_DDRC_REMAP_EXT_1_tag REMAP_EXT_1; /* Remap Extended Region 1 Configuration */
  DDR_DDRC_REMAP_EXT_2_tag REMAP_EXT_2; /* Remap Extended Region 2 Configuration */
  DDR_DDRC_REMAP_EXT_3_tag REMAP_EXT_3; /* Remap Extended Region 3 Configuration */
  DDR_DDRC_REMAP_0A_tag REMAP_0A;      /* Remap Region 0A Configuration */
  DDR_DDRC_REMAP_0B_tag REMAP_0B;      /* Remap Region 0B Configuration */
  DDR_DDRC_REMAP_1A_tag REMAP_1A;      /* Remap Region 1A Configuration */
  DDR_DDRC_REMAP_1B_tag REMAP_1B;      /* Remap Region 1B Configuration */
  DDR_DDRC_REMAP_2A_tag REMAP_2A;      /* Remap Region 2A Configuration */
  DDR_DDRC_REMAP_2B_tag REMAP_2B;      /* Remap Region 2B Configuration */
  DDR_DDRC_REMAP_3A_tag REMAP_3A;      /* Remap Region 3A Configuration */
  DDR_DDRC_REMAP_3B_tag REMAP_3B;      /* Remap Region 3B Configuration */
  DDR_DDRC_DDR_ADDR_DEC_0_tag DDR_ADDR_DEC_0; /* DDRC Address Decode 0 */
  DDR_DDRC_DDR_ADDR_DEC_1_tag DDR_ADDR_DEC_1; /* DDRC Address Decode 1 */
  DDR_DDRC_DDR_ADDR_DEC_2_tag DDR_ADDR_DEC_2; /* DDRC Address Decode 2 */
  DDR_DDRC_DDR_ADDR_DEC_3_tag DDR_ADDR_DEC_3; /* DDRC Address Decode 3 */
  DDR_DDRC_DDR_ADDR_DEC_4_tag DDR_ADDR_DEC_4; /* DDRC Address Decode 4 */
  DDR_DDRC_DDR_ADDR_DEC_5_tag DDR_ADDR_DEC_5; /* DDRC Address Decode 5 */
  DDR_DDRC_DDR_ADDR_DEC_6_tag DDR_ADDR_DEC_6; /* DDRC Address Decode 6 */
  DDR_DDRC_DDR_ADDR_DEC_7_tag DDR_ADDR_DEC_7; /* DDRC Address Decode 7 */
  DDR_DDRC_DDR_ADDR_DEC_8_tag DDR_ADDR_DEC_8; /* DDRC Address Decode 8 */
  DDR_DDRC_DDR_ADDR_DEC_9_tag DDR_ADDR_DEC_9; /* DDRC Address Decode 9 */
  uint8_t DDR_DDRC_reserved0[24];
  DDR_DDRC_CS_CONFIG_tag CS_CONFIG[2]; /* Rank 0 Configuration */
  uint8_t DDR_DDRC_reserved1[120];
  DDR_DDRC_TIMING_CFG_3_tag TIMING_CFG_3; /* DDR SDRAM Timing Configuration 3 */
  DDR_DDRC_TIMING_CFG_0_tag TIMING_CFG_0; /* DDR SDRAM Timing Configuration 0 */
  DDR_DDRC_TIMING_CFG_1_tag TIMING_CFG_1; /* DDR SDRAM Timing Configuration 1 */
  DDR_DDRC_TIMING_CFG_2_tag TIMING_CFG_2; /* DDR SDRAM Timing Configuration 2 */
  DDR_DDRC_DDR_SDRAM_CFG_tag DDR_SDRAM_CFG; /* DDR SDRAM Control Configuration */
  DDR_DDRC_DDR_SDRAM_CFG_2_tag DDR_SDRAM_CFG_2; /* DDR SDRAM Control Configuration 2 */
  uint8_t DDR_DDRC_reserved2[8];
  DDR_DDRC_DDR_SDRAM_MD_CNTL_tag DDR_SDRAM_MD_CNTL; /* DDR SDRAM Mode Control */
  DDR_DDRC_DDR_SDRAM_INTERVAL_tag DDR_SDRAM_INTERVAL; /* DDR SDRAM Interval Configuration */
  DDR_DDRC_DDR_DATA_INIT_tag DDR_DATA_INIT; /* DDR SDRAM Data Initialization */
  uint8_t DDR_DDRC_reserved3[52];
  DDR_DDRC_TIMING_CFG_4_tag TIMING_CFG_4; /* DDR SDRAM Timing Configuration 4 */
  DDR_DDRC_TIMING_CFG_5_tag TIMING_CFG_5; /* DDR SDRAM Timing Configuration 5 */
  uint8_t DDR_DDRC_reserved4[4];
  DDR_DDRC_TIMING_CFG_7_tag TIMING_CFG_7; /* DDR SDRAM Timing Configuration 7 */
  DDR_DDRC_DDR_ZQ_CNTL_tag DDR_ZQ_CNTL; /* DDR SDRAM ZQ Calibration Control */
  uint8_t DDR_DDRC_reserved5[8];
  DDR_DDRC_DDR_SR_CNTR_tag DDR_SR_CNTR; /* DDR SDRAM Self-Refresh Counter */
  uint8_t DDR_DDRC_reserved6[208];
  DDR_DDRC_TIMING_CFG_8_tag TIMING_CFG_8; /* DDR SDRAM Timing Configuration 8 */
  DDR_DDRC_TIMING_CFG_9_tag TIMING_CFG_9; /* DDR SDRAM timing configuration 9 */
  DDR_DDRC_TIMING_CFG_10_tag TIMING_CFG_10; /* DDR SDRAM Timing Configuration 10 */
  DDR_DDRC_TIMING_CFG_11_tag TIMING_CFG_11; /* DDR SDRAM Timing Configuration 11 */
  DDR_DDRC_DDR_SDRAM_CFG_3_tag DDR_SDRAM_CFG_3; /* DDR SDRAM Control Configuration 3 */
  DDR_DDRC_DDR_SDRAM_CFG_4_tag DDR_SDRAM_CFG_4; /* DDR SDRAM Control Configuration 4 */
  DDR_DDRC_DDR_SDRAM_CFG_5_tag DDR_SDRAM_CFG_5; /* DDR SDRAM Control Configuration 5 */
  DDR_DDRC_DDR_SDRAM_CFG_6_tag DDR_SDRAM_CFG_6; /* DDR SDRAM Control Configuration 6 */
  DDR_DDRC_DDR_SDRAM_MD_CNTL2_tag DDR_SDRAM_MD_CNTL2; /* DDR SDRAM mode control 2 */
  uint8_t DDR_DDRC_reserved7[12];
  DDR_DDRC_DDR_SDRAM_MPR1_tag DDR_SDRAM_MPR1; /* DDR SDRAM multi-purpose register 1 */
  DDR_DDRC_DDR_SDRAM_MPR2_tag DDR_SDRAM_MPR2; /* DDR SDRAM multi-purpose register 2 */
  DDR_DDRC_DDR_SDRAM_MPR3_tag DDR_SDRAM_MPR3; /* DDR SDRAM multi-purpose register 3 */
  DDR_DDRC_DDR_SDRAM_MPR4_tag DDR_SDRAM_MPR4; /* DDR SDRAM multi-purpose register 4 */
  DDR_DDRC_DDR_SDRAM_MPR5_tag DDR_SDRAM_MPR5; /* DDR SDRAM multi-purpose register 5 */
  uint8_t DDR_DDRC_reserved8[44];
  DDR_DDRC_DDR_SDRAM_REF_RATE_tag DDR_SDRAM_REF_RATE; /* DDR Refresh Rate */
  uint8_t DDR_DDRC_reserved9[60];
  DDR_DDRC_TIMING_CFG_12_tag TIMING_CFG_12; /* DDR SDRAM Timing Configuration 12 */
  DDR_DDRC_TIMING_CFG_13_tag TIMING_CFG_13; /* DDR SDRAM Timing Configuration 13 */
  DDR_DDRC_TIMING_CFG_14_tag TIMING_CFG_14; /* DDR SDRAM Timing Configuration 14 */
  DDR_DDRC_TIMING_CFG_15_tag TIMING_CFG_15; /* DDR SDRAM Timing Configuration 15 */
  DDR_DDRC_TIMING_CFG_16_tag TIMING_CFG_16; /* DDR SDRAM Timing Configuration 16 */
  DDR_DDRC_TIMING_CFG_17_tag TIMING_CFG_17; /* DDR SDRAM Timing Configuration 17 */
  uint8_t DDR_DDRC_reserved10[1256];
  DDR_DDRC_TX_CFG_1_tag TX_CFG_1;      /* Transaction Configuration Register 1 */
  DDR_DDRC_TX_CFG_2_tag TX_CFG_2;      /* Transaction Configuration Register 2 */
  DDR_DDRC_TX_CFG_3_tag TX_CFG_3;      /* Transaction Configuration Register 3. */
  DDR_DDRC_TX_CFG_4_tag TX_CFG_4;      /* Transaction Configuration Register 4. */
  uint8_t DDR_DDRC_reserved11[788];
  DDR_DDRC_DDRDSR_2_tag DDRDSR_2;      /* DDR SDRAM Debug Status 2 */
  uint8_t DDR_DDRC_reserved12[208];
  DDR_DDRC_DDR_IP_REV1_tag DDR_IP_REV1; /* DDRC Revision 1 */
  DDR_DDRC_DDR_IP_REV2_tag DDR_IP_REV2; /* DDRC Revision 2 */
  DDR_DDRC_DDR_EOR_tag DDR_EOR;        /* DDR Enhanced Optimization Register */
  uint8_t DDR_DDRC_reserved13[252];
  DDR_DDRC_DDR_MTCR_tag DDR_MTCR;      /* DDR SDRAM Memory Test Control */
  uint8_t DDR_DDRC_reserved14[28];
  DDR_DDRC_DDR_MTP_tag DDR_MTP[10];    /* DDR SDRAM Memory Test Pattern n */
  uint8_t DDR_DDRC_reserved15[24];
  DDR_DDRC_DDR_MT_ST_EXT_ADDR_tag DDR_MT_ST_EXT_ADDR; /* DDR SDRAM Memory Test Start Extended Address */
  DDR_DDRC_DDR_MT_ST_ADDR_tag DDR_MT_ST_ADDR; /* DDR SDRAM Memory Test Start Address */
  DDR_DDRC_DDR_MT_END_EXT_ADDR_tag DDR_MT_END_EXT_ADDR; /* DDR SDRAM Memory Test End Extended Address */
  DDR_DDRC_DDR_MT_END_ADDR_tag DDR_MT_END_ADDR; /* DDR SDRAM Memory Test End Address */
  DDR_DDRC_DDR_MT_ST_EXT_ADDR2_tag DDR_MT_ST_EXT_ADDR2; /* DDR Memory Test Start Extended Address 2 */
  DDR_DDRC_DDR_MT_ST_ADDR2_tag DDR_MT_ST_ADDR2; /* DDR Memory Test Start Address 2 */
  DDR_DDRC_DDR_MT_END_EXT_ADDR2_tag DDR_MT_END_EXT_ADDR2; /* DDR Memory Test End Extended Address 2 */
  DDR_DDRC_DDR_MT_END_ADDR2_tag DDR_MT_END_ADDR2; /* DDR Memory Test End Address 2 */
  uint8_t DDR_DDRC_reserved16[384];
  DDR_DDRC_DEBUG_1_tag DEBUG_1;        /* Debug 1 */
  DDR_DDRC_DEBUG_2_tag DEBUG_2;        /* Debug 2 */
  uint8_t DDR_DDRC_reserved17[4];
  DDR_DDRC_DEBUG_4_tag DEBUG_4;        /* Debug 4 */
  uint8_t DDR_DDRC_reserved18[56];
  DDR_DDRC_DEBUG_19_tag DEBUG_19;      /* Debug 19 */
  DDR_DDRC_DEBUG_20_tag DEBUG_20;      /* Debug 20 */
  uint8_t DDR_DDRC_reserved19[20];
  DDR_DDRC_DEBUG_26_tag DEBUG_26;      /* Debug 26 */
  DDR_DDRC_DEBUG_27_tag DEBUG_27;      /* Debug 27 */
  DDR_DDRC_DEBUG_28_tag DEBUG_28;      /* Debug 28 */
  uint8_t DDR_DDRC_reserved20[144];
  DDR_DDRC_ERR_EN_tag ERR_EN;          /* Error Enable */
  uint8_t DDR_DDRC_reserved21[252];
  DDR_DDRC_DATA_ERR_INJECT_HI_tag DATA_ERR_INJECT_HI; /* Memory Data Path Error Injection Mask High */
  DDR_DDRC_DATA_ERR_INJECT_LO_tag DATA_ERR_INJECT_LO; /* Memory Data Path Error Injection Mask Low */
  DDR_DDRC_ERR_INJECT_tag ERR_INJECT;  /* Memory Data Path Error Injection Mask ECC */
  DDR_DDRC_ADDR_ERR_INJ_tag ADDR_ERR_INJ; /* Address Error Inject */
  DDR_DDRC_EXT_ADDR_ERR_INJ_tag EXT_ADDR_ERR_INJ; /* Extended Address Error Inject */
  uint8_t DDR_DDRC_reserved22[4];
  DDR_DDRC_CAPTURE_EXT_DATA_HI_tag CAPTURE_EXT_DATA_HI; /* Memory Extended Data Path Read Capture High */
  DDR_DDRC_CAPTURE_EXT_DATA_LO_tag CAPTURE_EXT_DATA_LO; /* Memory Extended Data Path Read Capture Low */
  DDR_DDRC_CAPTURE_DATA_HI_tag CAPTURE_DATA_HI; /* Memory Data Path Read Capture High */
  DDR_DDRC_CAPTURE_DATA_LO_tag CAPTURE_DATA_LO; /* Memory Data Path Read Capture Low */
  DDR_DDRC_CAPTURE_ECC_tag CAPTURE_ECC; /* Memory Data Path Read Capture ECC */
  uint8_t DDR_DDRC_reserved23[20];
  DDR_DDRC_ERR_DETECT_tag ERR_DETECT;  /* Memory Error Detect */
  DDR_DDRC_ERR_DISABLE_tag ERR_DISABLE; /* Memory Error Disable */
  DDR_DDRC_ERR_INT_EN_tag ERR_INT_EN;  /* Memory Error Interrupt Enable */
  DDR_DDRC_CAPTURE_ATTRIBUTES_tag CAPTURE_ATTRIBUTES; /* Memory Error Attributes Capture */
  DDR_DDRC_CAPTURE_ADDRESS_tag CAPTURE_ADDRESS; /* Memory Error Address Capture */
  DDR_DDRC_CAPTURE_EXT_ADDRESS_tag CAPTURE_EXT_ADDRESS; /* Memory Error Extended Address Capture */
  DDR_DDRC_ERR_SBE_tag ERR_SBE;        /* Single-Bit ECC Memory Error Management */
  uint8_t DDR_DDRC_reserved24[180];
  DDR_DDRC_REG_CRC_GRP_1_tag REG_CRC_GRP_1; /* Register CRC Code For Group 1 */
  DDR_DDRC_REG_CRC_GRP_2_tag REG_CRC_GRP_2; /* Register CRC Code For Group 2 */
  uint8_t DDR_DDRC_reserved25[8];
  DDR_DDRC_ECC_EXT_REG_0_tag ECC_EXT_REG_0; /* ECC Extended Region 0 Configuration */
  DDR_DDRC_ECC_EXT_REG_1_tag ECC_EXT_REG_1; /* ECC Extended Region 1 Configuration */
  DDR_DDRC_ECC_EXT_REG_2_tag ECC_EXT_REG_2; /* ECC Extended Region 2 Configuration */
  DDR_DDRC_ECC_EXT_REG_3_tag ECC_EXT_REG_3; /* ECC Extended Region 3 Configuration */
  DDR_DDRC_ECC_EXT_REG_4_tag ECC_EXT_REG_4; /* ECC Extended Region 4 Configuration */
  DDR_DDRC_ECC_EXT_REG_5_tag ECC_EXT_REG_5; /* ECC Extended Region 5 Configuration */
  DDR_DDRC_ECC_EXT_REG_6_tag ECC_EXT_REG_6; /* ECC Extended Region 6 Configuration */
  DDR_DDRC_ECC_EXT_REG_7_tag ECC_EXT_REG_7; /* ECC Extended Region 7 Configuration */
  DDR_DDRC_ECC_REG_0_tag ECC_REG_0;    /* ECC Region 0 Configuration */
  DDR_DDRC_ECC_REG_1_tag ECC_REG_1;    /* ECC Region 1 Configuration */
  DDR_DDRC_ECC_REG_2_tag ECC_REG_2;    /* ECC Region 2 Configuration */
  DDR_DDRC_ECC_REG_3_tag ECC_REG_3;    /* ECC Region 3 Configuration */
  DDR_DDRC_ECC_REG_4_tag ECC_REG_4;    /* ECC Region 4 Configuration */
  DDR_DDRC_ECC_REG_5_tag ECC_REG_5;    /* ECC Region 5 Configuration */
  DDR_DDRC_ECC_REG_6_tag ECC_REG_6;    /* ECC Region 6 Configuration */
  DDR_DDRC_ECC_REG_7_tag ECC_REG_7;    /* ECC Region 7 Configuration */
  uint8_t DDR_DDRC_reserved26[64352];
  DDR_DDRC_PMCFG_1_tag PMCFG_1;        /* Performance Monitor Configuration 1 */
  DDR_DDRC_PMCFG_2_tag PMCFG_2;        /* Performance Monitor Configuration 2 */
  DDR_DDRC_PMCFG_3_tag PMCFG_3;        /* Performance Monitor Configuration 3 */
  DDR_DDRC_PMCFG_4_tag PMCFG_4;        /* Performance Monitor Configuration 4 */
  DDR_DDRC_PMCFG_5_tag PMCFG_5;        /* Performance Monitor Configuration 5 */
  DDR_DDRC_PMCFG_6_tag PMCFG_6;        /* Performance Monitor Configuration 6 */
  uint8_t DDR_DDRC_reserved27[40];
  DDR_DDRC_PMGC0_tag PMGC0;            /* Performance Monitor Global Control */
  uint8_t DDR_DDRC_reserved28[12];
  DDR_DDRC_PMLCA0_tag PMLCA0;          /* Performance Monitor Local Control A0 */
  DDR_DDRC_PMLCB0_tag PMLCB0;          /* Performance Monitor Local Control B0 */
  DDR_DDRC_PMC0A_tag PMC0A;            /* PMC 0a */
  DDR_DDRC_PMC0B_tag PMC0B;            /* PMC 0b */
  DDR_DDRC_PMLCA1_tag PMLCA1;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB1_tag PMLCB1;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC1_tag PMC1;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved29[4];
  DDR_DDRC_PMLCA2_tag PMLCA2;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB2_tag PMLCB2;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC2_tag PMC2;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved30[4];
  DDR_DDRC_PMLCA3_tag PMLCA3;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB3_tag PMLCB3;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC3_tag PMC3;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved31[4];
  DDR_DDRC_PMLCA4_tag PMLCA4;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB4_tag PMLCB4;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC4_tag PMC4;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved32[4];
  DDR_DDRC_PMLCA5_tag PMLCA5;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB5_tag PMLCB5;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC5_tag PMC5;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved33[4];
  DDR_DDRC_PMLCA6_tag PMLCA6;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB6_tag PMLCB6;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC6_tag PMC6;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved34[4];
  DDR_DDRC_PMLCA7_tag PMLCA7;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB7_tag PMLCB7;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC7_tag PMC7;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved35[4];
  DDR_DDRC_PMLCA8_tag PMLCA8;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB8_tag PMLCB8;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC8_tag PMC8;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved36[4];
  DDR_DDRC_PMLCA9_tag PMLCA9;          /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB9_tag PMLCB9;          /* Performance Monitor Local Control B */
  DDR_DDRC_PMC9_tag PMC9;              /* Performance Monitor Counter */
  uint8_t DDR_DDRC_reserved37[4];
  DDR_DDRC_PMLCA10_tag PMLCA10;        /* Performance Monitor Local Control A */
  DDR_DDRC_PMLCB10_tag PMLCB10;        /* Performance Monitor Local Control B */
  DDR_DDRC_PMC10_tag PMC10;            /* Performance Monitor Counter */
};

/* ============================================================================
   =============================== Module: ERM ================================
   ============================================================================
   * @usage: sCheck
*/
typedef union ERM_CR_union_tag {      /* ERM Configuration Registers */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:2;
    vuint32_t ENCIE:1;
    vuint32_t ESCIE:1;
  } CH[8];
} ERM_CR_tag;

typedef union ERM_SR_union_tag {      /* ERM Status Registers */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:2;
    vuint32_t NCE:1;
    vuint32_t SBC:1;
  } CH[8];
} ERM_SR_tag;

typedef union ERM_EAR_union_tag {     /* ERM Memory Error Address Register */
  vuint32_t R;
  struct {
    vuint32_t EAR:32;                  /* EAR */
  } B;
} ERM_EAR_tag;

typedef union ERM_SYN_union_tag {     /* ERM Memory Syndrome Register */
  vuint32_t R;
  struct {
    vuint32_t _unused_0:24;            /* Reserved */
    vuint32_t SYNDROME:8;              /* SYNDROME */
  } B;
} ERM_SYN_tag;

typedef union ERM_CORR_ERR_CNT_union_tag { /* ERM Memory Correctable Error Count Register */
  vuint32_t R;
  struct {
    vuint32_t COUNT:8;                 /* Memory Correctable Error Count */
    vuint32_t _unused_8:24;            /* Reserved */
  } B;
} ERM_CORR_ERR_CNT_tag;

typedef struct ERM_MEM_struct_tag {
  ERM_EAR_tag EAR;                    /* ERM Memory Error Address Register */
  ERM_SYN_tag SYN;                    /* ERM Memory Syndrome Register */
  ERM_CORR_ERR_CNT_tag CORR_ERR_CNT;  /* ERM Memory Correctable Error Count Register */
  uint8 ERM_MEM_Reserved[4];          /* Reserved */
} ERM_MEM_tag;

struct ERM_tag {
  ERM_CR_tag CR[3];                     /* ERM Configuration Registers */
  uint8 ERM_reserved0[4];               /* Reserved */
  ERM_SR_tag SR[3];                     /* ERM Status Registers */
  uint8 ERM_reserved1[228];             /* Reserved */
  ERM_MEM_tag MEM[24];                  /* ERM Memory Error Registers */
};

/* ============================================================================
   =============================== Module: LSTCU ==============================
   ============================================================================ */

typedef union LSTCU_ERR_STAT_union_tag { /* Error Status */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVP_MB:1;               /* Invalid Pointer MBIST */
    vuint32_t _unused_29:1;
    vuint32_t _unused_16:13;
    vuint32_t UFSF:1;                  /* Unrecoverable Fault Status */
    vuint32_t RFSF:1;                  /* Recoverable Fault Status */
    vuint32_t _unused_0:14;
  } B;
} LSTCU_ERR_STAT_tag;

typedef union LSTCU_ERR_FM_union_tag { /* Error Fault Mapping */
  vuint32_t R;
  struct {
    vuint32_t _unused_31:1;
    vuint32_t INVPFMMB:1;              /* Invalid BIST Pointer Fault Mapping During MBIST Scheduling */
    vuint32_t _unused_29:1;
    vuint32_t _unused_0:29;
  } B;
} LSTCU_ERR_FM_tag;

typedef union LSTCU_MB_RSTAT0_union_tag { /* MBIST Run Status 0 */
  vuint32_t R;
  struct {
    vuint32_t MBSTAT0:1;               /* MBIST Run Result Status 0 */
    vuint32_t _unused_16:15;
    vuint32_t _unused_0:16;
  } B;
} LSTCU_MB_RSTAT0_tag;

typedef union LSTCU_MBFM0_union_tag { /* MBIST Fault Mapping 0 */
  vuint32_t R;
  struct {
    vuint32_t MBSTATFM0:1;             /* MBIST Fault Mapping n */
    vuint32_t _unused_16:15;
    vuint32_t _unused_0:16;
  } B;
} LSTCU_MBFM0_tag;

typedef union LSTCU_STAG_union_tag { /* Stagger */
  vuint32_t R;
  struct {
    vuint32_t _unused_24:8;
    vuint32_t MB_DELAY:8;              /* MBIST Delay */
    vuint32_t _unused_8:8;
    vuint32_t _unused_0:8;
  } B;
} LSTCU_STAG_tag;

typedef union LSTCU_PH1_DUR_union_tag { /* Phase 1 Duration */
  vuint32_t R;
  struct {
    vuint32_t PH1DUR:10;               /* Phase 1 Duration */
    vuint32_t _unused_0:22;
  } B;
} LSTCU_PH1_DUR_tag;

typedef union LSTCU_MBPTR_union_tag { /* MBIST Scheduler Pointer */
  vuint32_t R;
  struct {
    vuint32_t MBPTR:8;                 /* MBIST Pointer */
    vuint32_t MBCSM:1;                 /* MBIST Mode */
    vuint32_t _unused_1:22;
    vuint32_t MBEOL:1;                 /* MBIST End of List */
  } B;
} LSTCU_MBPTR_tag;

struct LSTCU_tag {
  uint8_t LSTCU_reserved0[8];
  LSTCU_ERR_STAT_tag ERR_STAT;      /* Error Status */
  uint8_t LSTCU_reserved1[4];
  LSTCU_ERR_FM_tag ERR_FM;          /* Error Fault Mapping */
  uint8_t LSTCU_reserved2[76];
  LSTCU_MB_RSTAT0_tag MB_RSTAT0;    /* MBIST Run Status 0 */
  uint8_t LSTCU_reserved3[284];
  LSTCU_MBFM0_tag MBFM0;            /* MBIST Fault Mapping 0 */
  uint8_t LSTCU_reserved4[220];
  LSTCU_STAG_tag STAG;              /* Stagger */
  uint8_t LSTCU_reserved5[12];
  LSTCU_PH1_DUR_tag PH1_DUR;        /* Phase 1 Duration */
  uint8_t LSTCU_reserved6[140];
  LSTCU_MBPTR_tag MBPTR[1];        /* MBIST Scheduler Pointer */
};


#define AON__AXBS (*(volatile struct AON_AXBS_tag *) 0x44510000UL)
#define AON__BLK_CTRL_NS_AONMIX1 (*(volatile struct AON_BLK_CTRL_NS_AONMIX_tag *) 0x44210000UL)
#define AON__BLK_CTRL_S_AONMIX2 (*(volatile struct AON_BLK_CTRL_S_AONMIX_tag *) 0x444F0000UL)
#define AON__CAN_FD1 (*(volatile struct AON_CAN_FD_tag *) 0x443A0000UL)
#define AON__CMUA1 (*(volatile struct AON_CMU_tag *) 0x44540000UL)
#define AON__CMUA2 (*(volatile struct AON_CMU_tag *) 0x44650000UL)
#define AON__CRCA (*(volatile struct AON_CRC_tag *) 0x44660000UL)
#define AON__CSTCU (*(volatile struct AON_CSTCU_tag *) 0x44590000UL)
#define AON__EDMA3_MP1 (*(volatile struct AON_EDMA3_MP_tag *) 0x44000000UL)
#define AON__EDMA3_TCD1 (*(volatile struct AON_EDMA3_TCD_tag *) 0x44010000UL)
#define AON__EIMA (*(volatile struct AON_EIM_tag *) 0x44550000UL)
#define AON__ERMA (*(volatile struct AON_ERM_tag *) 0x44560000UL)
#define AON__FCCU (*(volatile struct AON_FCCU_tag *) 0x44570000UL)
#define AON__I3C1 (*(volatile struct AON_I3C_tag *) 0x44330000UL)
#define AON__INTM (*(volatile struct AON_INTM_tag *) 0x44580000UL)
#define AON__IRQSTEERM7 (*(volatile struct AON_IRQSTEER_tag *) 0x44680000UL)
#define AON__LPIT1 (*(volatile struct AON_LPIT_tag *) 0x442F0000UL)
#define AON__LPSPI1 (*(volatile struct AON_LPSPI_tag *) 0x44360000UL)
#define AON__LPSPI2 (*(volatile struct AON_LPSPI_tag *) 0x44370000UL)
#define AON__LPTMR1 (*(volatile struct AON_LPTMR_tag *) 0x44300000UL)
#define AON__LPTPM1 (*(volatile struct AON_LPTPM_tag *) 0x44310000UL)
#define AON__LPTPM2 (*(volatile struct AON_LPTPM_tag *) 0x44320000UL)
#define AON__LPUART1 (*(volatile struct AON_LPUART_tag *) 0x44380000UL)
#define AON__LPUART2 (*(volatile struct AON_LPUART_tag *) 0x44390000UL)
#define AON__LSTCUA (*(volatile struct AON_LSTCU_tag *) 0x445A0000UL)
#define AON__M33_CACHE_CTRLPC (*(volatile struct AON_M33_CACHE_CTRL_tag *) 0x44400000UL)
#define AON__M33_CACHE_CTRLPS (*(volatile struct AON_M33_CACHE_CTRL_tag *) 0x44400800UL)
#define AON__MCM (*(volatile struct AON_MCM_tag *) 0xE0080000UL)
#define AON__MICFIL (*(volatile struct AON_MICFIL_tag *) 0x44520000UL)
#define AON__MSGINTR1 (*(volatile struct AON_MSGINTR_tag *) 0x44690000UL)
#define AON__MSGINTR2 (*(volatile struct AON_MSGINTR_tag *) 0x446A0000UL)
#define AON__RGPIO1 (*(volatile struct AON_RGPIO_tag *) 0x47400000UL)
#define AON__ROMCP1 (*(volatile struct AON_ROMCP_tag *) 0x44430000UL)
#define AON__SAI1 (*(volatile struct AON_SAI_tag *) 0x443B0000UL)
#define AON__SEMA42_1 (*(volatile struct AON_SEMA42_tag *) 0x44260000UL)
#define AON__M33_PCF1 (*(volatile struct AON_SYSPM_tag *) 0x443E0000UL)
#define AON__M33_PSF1 (*(volatile struct AON_SYSPM_tag *) 0x443F0000UL)
#define AON__TCU (*(volatile struct AON_TCU_tag *) 0x444B0000UL)
#define AON__TRDC_MGR (*(volatile struct AON_TRDC_MGR_tag *) 0x44270000UL)
#define AON__TSTMR1 (*(volatile struct AON_TSTMR_tag *) 0x442C0000UL)
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM (*(volatile struct CACHE_ECC_MCM_tag *) 0x44401000UL)
#define AON__IOMUXC0__IOMUXC (*(volatile struct IOMUXC_tag *) 0x443C0000UL)
#define AON__IOMUXC0__IOMUXC_GPR (*(volatile struct IOMUXC_GPR_tag *) 0x443D0000UL)
#define M7__A7_MCM (*(volatile struct M7_A7_MCM_tag *) 0x4A0A0000UL)
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM (*(volatile struct TCM_ECC_MCM_tag *) 0x44420000UL)

/*= SAF =*/
/* EIM */
#define AON_EIMA (*(volatile struct EIM_tag *) 0x44550000UL)
#define WAKEUP_EIMW (*(volatile struct EIM_tag *) 0x42780000UL)
#define NOC_EIMN (*(volatile struct EIM_tag *) 0x49270000UL)
#define M7_EIM (*(volatile struct EIM_tag *) 0x4A060000UL)
#define NPU_EIM_NPUMIX (*(volatile struct EIM_tag *) 0x4A860000UL)

/* SRAMCTL */
#define OCRAM_BASE_ADDR (0x20480000UL)
#define OCRAM_SIZE (0x00060000UL)
#define NOC_SRAMCTL (*(volatile struct SRAMCTL_tag *) 0x490A0000UL)

/* DDRC */
#define DDRC (*(volatile struct DDR_DDRC_tag *) 0x4E080000UL)

/* ERM */
#define AON_ERMA (*(volatile struct ERM_tag *) 0x44560000UL)
#define WAKEUP_ERMW (*(volatile struct ERM_tag *) 0x42790000UL)
#define M7_ERM (*(volatile struct ERM_tag *) 0x4A070000UL)
#define NPU_ERM_NPUMIX (*(volatile struct ERM_tag *) 0x4A870000UL)

/* LSTCU */
#define AON_LSTCUA (*(volatile struct LSTCU_tag *) 0x445A0000UL)
#define DDRC_LSTCU (*(volatile struct LSTCU_tag *) 0x4E050000UL)
#define M7_LSTCU_M7MIX (*(volatile struct LSTCU_tag *) 0x4A050000UL)
#define NOC_LSTCUN (*(volatile struct LSTCU_tag *) 0x490B0000UL)
#define NPU_LSTCU_NPUMIX (*(volatile struct LSTCU_tag *) 0x4A850000UL)

/* VFCCU */
#define AON_VFCCU (*(volatile struct SAFETYBASE_VFCCU_tag *) 0x44570000UL)

/* AON_AXBS */
#define AON__AXBS_PRS0       AON__AXBS.PRS0.R              /* Priority Slave Registers */
#define AON__AXBS_CRS0       AON__AXBS.CRS0.R              /* Control Register */
#define AON__AXBS_PRS1       AON__AXBS.PRS1.R              /* Priority Slave Registers */
#define AON__AXBS_CRS1       AON__AXBS.CRS1.R              /* Control Register */
#define AON__AXBS_PRS2       AON__AXBS.PRS2.R              /* Priority Slave Registers */
#define AON__AXBS_CRS2       AON__AXBS.CRS2.R              /* Control Register */
#define AON__AXBS_PRS3       AON__AXBS.PRS3.R              /* Priority Slave Registers */
#define AON__AXBS_CRS3       AON__AXBS.CRS3.R              /* Control Register */
#define AON__AXBS_PRS4       AON__AXBS.PRS4.R              /* Priority Slave Registers */
#define AON__AXBS_CRS4       AON__AXBS.CRS4.R              /* Control Register */
#define AON__AXBS_PRS5       AON__AXBS.PRS5.R              /* Priority Slave Registers */
#define AON__AXBS_CRS5       AON__AXBS.CRS5.R              /* Control Register */
#define AON__AXBS_PRS6       AON__AXBS.PRS6.R              /* Priority Slave Registers */
#define AON__AXBS_CRS6       AON__AXBS.CRS6.R              /* Control Register */
#define AON__AXBS_PRS7       AON__AXBS.PRS7.R              /* Priority Slave Registers */
#define AON__AXBS_CRS7       AON__AXBS.CRS7.R              /* Control Register */

/* AON_BLK_CTRL_NS_AONMIX */
#define AON__BLK_CTRL_NS_AONMIX1_GPC_CFG AON__BLK_CTRL_NS_AONMIX1.GPC_CFG.R /* GPC CORE SLEEP Request Select */
#define AON__BLK_CTRL_NS_AONMIX1_UPPER_ADDR AON__BLK_CTRL_NS_AONMIX1.UPPER_ADDR.R /* UPPER ADDR BITS[35:32] */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CM33 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CM33.R /* IPG DEBUG MASK BIT for cm33 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C0 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C0.R /* IPG DEBUG MASK BIT CA55 CORE0 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C1 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C1.R /* IPG DEBUG MASK BIT CA55 CORE1 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C2 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C2.R /* IPG DEBUG MASK BIT CA55 CORE2 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C3 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C3.R /* IPG DEBUG MASK BIT CA55 CORE3 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C4 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C4.R /* IPG DEBUG MASK BIT CA55 CORE4 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CA55C5 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CA55C5.R /* IPG DEBUG MASK BIT CA55 CORE5 */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DEBUG_CM7 AON__BLK_CTRL_NS_AONMIX1.IPG_DEBUG_CM7.R /* IPG DEBUG MASK BIT for cm7 */
#define AON__BLK_CTRL_NS_AONMIX1_FUSE_ACC_DIS AON__BLK_CTRL_NS_AONMIX1.FUSE_ACC_DIS.R /* Read-only version of the OCOTP fuse-access-disable bit */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA0 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA0.R /* Read-only version of OCOTP fusedata_mtr_cfg_0 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA1 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA1.R /* Read-only version of OCOTP fusedata_mtr_cfg_1 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA2 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA2.R /* Read-only version of OCOTP fusedata_mtr_cfg_2 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA3 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA3.R /* Read-only version of OCOTP fusedata_mtr_cfg_3 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA4 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA4.R /* Read-only version of OCOTP fusedata_mtr_cfg_4 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA5 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA5.R /* Read-only version of OCOTP fusedata_mtr_cfg_5 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA6 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA6.R /* Read-only version of OCOTP fusedata_mtr_cfg_6 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA7 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA7.R /* Read-only version of OCOTP fusedata_mtr_cfg_7 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA8 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA8.R /* Read-only version of OCOTP fusedata_mem_trim_cfg0 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA9 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA9.R /* Read-only version of OCOTP fusedata_mem_trim_cfg1 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA10 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA10.R /* Read-only version of OCOTP fusedata_mem_trim_cfg2 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA11 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA11.R /* Read-only version of OCOTP fusedata_mem_trim_cfg3 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA12 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA12.R /* Read-only version of OCOTP fusedata_mem_trim_cfg4 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA13 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA13.R /* Read-only version of OCOTP fusedata_mem_trim_cfg5 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA14 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA14.R /* Read-only version of OCOTP fusedata_mem_trim_cfg6 */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_FUSE_DATA15 AON__BLK_CTRL_NS_AONMIX1.OCOTP_FUSE_DATA15.R /* Read-only version of OCOTP fusedata_mem_trim_cfg7 */
#define AON__BLK_CTRL_NS_AONMIX1_I3C1_WAKEUP AON__BLK_CTRL_NS_AONMIX1.I3C1_WAKEUP.R /* I3C1 WAKEUPX CLR */
#define AON__BLK_CTRL_NS_AONMIX1_OCOTP_STATUS AON__BLK_CTRL_NS_AONMIX1.OCOTP_STATUS.R /* OCOTP status register */
#define AON__BLK_CTRL_NS_AONMIX1_pdm_clk_sel AON__BLK_CTRL_NS_AONMIX1.PDM_CLK_SEL.R /* PDM clock selection register */
#define AON__BLK_CTRL_NS_AONMIX1_I3C1_SDA_IRQ AON__BLK_CTRL_NS_AONMIX1.I3C1_SDA_IRQ.R /* I3C1 SDA IRQ */
#define AON__BLK_CTRL_NS_AONMIX1_SSI AON__BLK_CTRL_NS_AONMIX1.SSI.R /* SSI master low power mode control */
#define AON__BLK_CTRL_NS_AONMIX1_fastboot_enable AON__BLK_CTRL_NS_AONMIX1.FASTBOOT_ENABLE.R /* fastboot enable */
#define AON__BLK_CTRL_NS_AONMIX1_MQS_Settings AON__BLK_CTRL_NS_AONMIX1.MQS_SETTINGS.R /* MQS settings */
#define AON__BLK_CTRL_NS_AONMIX1_ELE_FW_PRESENT AON__BLK_CTRL_NS_AONMIX1.ELE_FW_PRESENT.R /* Read only bit for fuse ELE_FW_PRESENT */
#define AON__BLK_CTRL_NS_AONMIX1_AOMIX_SPARE_FUSE AON__BLK_CTRL_NS_AONMIX1.AOMIX_SPARE_FUSE.R /* Spare fuse register */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_STOP_CTL AON__BLK_CTRL_NS_AONMIX1.IPG_STOP_CTL.R /* IPG_STOP Control Register */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_STOP_ACK_STATUS AON__BLK_CTRL_NS_AONMIX1.IPG_STOP_ACK_STATUS.R /* IPG_STOP_ACK Status Register */
#define AON__BLK_CTRL_NS_AONMIX1_IPG_DOZE_CTL AON__BLK_CTRL_NS_AONMIX1.IPG_DOZE_CTL.R /* IPG_DOZE_CTL Control Register */
#define AON__BLK_CTRL_NS_AONMIX1_QREQ_N AON__BLK_CTRL_NS_AONMIX1.QREQ_N.R /* QREQ_N Control Register */
#define AON__BLK_CTRL_NS_AONMIX1_SAI_MCLK AON__BLK_CTRL_NS_AONMIX1.SAI_MCLK.R /* SAI1 MCLK Control Register */
#define AON__BLK_CTRL_NS_AONMIX1_QACTIVE AON__BLK_CTRL_NS_AONMIX1.QACTIVE.R /* QACTIVE Status Register */
#define AON__BLK_CTRL_NS_AONMIX1_QDENY AON__BLK_CTRL_NS_AONMIX1.QDENY.R /* QDENY Status Register */
#define AON__BLK_CTRL_NS_AONMIX1_QACCEPT_N AON__BLK_CTRL_NS_AONMIX1.QACCEPT_N.R /* QACCEPT_N Status Register */

/* AON_BLK_CTRL_S_AONMIX */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK0 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK0.R /* CM33_IRQ_MASK0 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK1 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK1.R /* CM33_IRQ_MASK1 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK2 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK2.R /* CM33_IRQ_MASK2 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK3 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK3.R /* CM33_IRQ_MASK3 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK4 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK4.R /* CM33_IRQ_MASK4 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK5 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK5.R /* CM33_IRQ_MASK5 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK6 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK6.R /* CM33_IRQ_MASK6 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK7 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK7.R /* CM33_IRQ_MASK7 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK8 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK8.R /* CM33_IRQ_MASK8 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK9 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK9.R /* CM33_IRQ_MASK9 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK10 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK10.R /* CM33_IRQ_MASK10 */
#define AON__BLK_CTRL_S_AONMIX2_CM33_IRQ_MASK11 AON__BLK_CTRL_S_AONMIX2.CM33_IRQ_MASK11.R /* CM33_IRQ_MASK11 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK0 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK0.R /* CA55_IRQ_MASK0 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK1 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK1.R /* CA55_IRQ_MASK1 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK2 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK2.R /* CA55_IRQ_MASK2 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK3 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK3.R /* CA55_IRQ_MASK3 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK4 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK4.R /* CA55_IRQ_MASK4 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK5 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK5.R /* CA55_IRQ_MASK5 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK6 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK6.R /* CA55_IRQ_MASK6 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK7 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK7.R /* CA55_IRQ_MASK7 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK8 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK8.R /* CA55_IRQ_MASK8 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK9 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK9.R /* CA55_IRQ_MASK9 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK10 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK10.R /* CA55_IRQ_MASK10 */
#define AON__BLK_CTRL_S_AONMIX2_CA55_IRQ_MASK11 AON__BLK_CTRL_S_AONMIX2.CA55_IRQ_MASK11.R /* CA55_IRQ_MASK11 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK0 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK0.R /* CM7_IRQ_MASK0 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK1 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK1.R /* CM7_IRQ_MASK1 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK2 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK2.R /* CM7_IRQ_MASK2 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK3 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK3.R /* CM7_IRQ_MASK3 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK4 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK4.R /* CM7_IRQ_MASK4 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK5 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK5.R /* CM7_IRQ_MASK5 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK6 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK6.R /* CM7_IRQ_MASK6 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK7 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK7.R /* CM7_IRQ_MASK7 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK8 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK8.R /* CM7_IRQ_MASK8 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK9 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK9.R /* CM7_IRQ_MASK9 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK10 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK10.R /* CM7_IRQ_MASK10 */
#define AON__BLK_CTRL_S_AONMIX2_CM7_IRQ_MASK11 AON__BLK_CTRL_S_AONMIX2.CM7_IRQ_MASK11.R /* CM7_IRQ_MASK11 */
#define AON__BLK_CTRL_S_AONMIX2_INITSVTOR AON__BLK_CTRL_S_AONMIX2.INITSVTOR.R /* M33 restart secure address */
#define AON__BLK_CTRL_S_AONMIX2_INITNSVTOR AON__BLK_CTRL_S_AONMIX2.INITNSVTOR.R /* M33 restart non-secure address */
#define AON__BLK_CTRL_S_AONMIX2_INITVTOR AON__BLK_CTRL_S_AONMIX2.INITVTOR.R /* M7restart address */
#define AON__BLK_CTRL_S_AONMIX2_M33_CFG AON__BLK_CTRL_S_AONMIX2.M33_CFG.R /* M33 Configure Register */
#define AON__BLK_CTRL_S_AONMIX2_M7_CFG AON__BLK_CTRL_S_AONMIX2.M7_CFG.R /* M7 Configure Register */
#define AON__BLK_CTRL_S_AONMIX2_AXBS_AON_CTRL AON__BLK_CTRL_S_AONMIX2.AXBS_AON_CTRL.R /* AXBS_AON_CTRL */
#define AON__BLK_CTRL_S_AONMIX2_DAP_ACCESS_STKYBIT AON__BLK_CTRL_S_AONMIX2.DAP_ACCESS_STKYBIT.R /* Dap Access Sticky Bit */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE_ELE AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE_ELE.R /* Low Power Handshake for ELE Register */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE2_ELE AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE2_ELE.R /* Low Power Handshake 2 for ELE Register */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE3_ELE AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE3_ELE.R /* Low Power Handshake 3 for ELE Register */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE_SM AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE_SM.R /* Low Power Handshake for System Manager */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE2_SM AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE2_SM.R /* Low Power Handshake 2 for System Manager */
#define AON__BLK_CTRL_S_AONMIX2_LP_HANDSHAKE3_SM AON__BLK_CTRL_S_AONMIX2.LP_HANDSHAKE3_SM.R /* Low Power Handshake 3 for System Manager */
#define AON__BLK_CTRL_S_AONMIX2_sm_lp_handshake_status AON__BLK_CTRL_S_AONMIX2.SM_LP_HANDSHAKE_STATUS.R /* Register interface for system manager to react for the lp_handshake */
#define AON__BLK_CTRL_S_AONMIX2_CA55_CPUWAIT AON__BLK_CTRL_S_AONMIX2.CA55_CPUWAIT.R /* CPUWAIT settings for CA55 CPU */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR0_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR0_L.R /* CA55_RVBARADDR0_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR0_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR0_H.R /* CA55_RVBARADDR0_H */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR1_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR1_L.R /* CA55_RVBARADDR1_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR1_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR1_H.R /* CA55_RVBARADDR1_H */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR2_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR2_L.R /* CA55_RVBARADDR2_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR2_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR2_H.R /* CA55_RVBARADDR2_H */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR3_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR3_L.R /* CA55_RVBARADDR3_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR3_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR3_H.R /* CA55_RVBARADDR3_H */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR4_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR4_L.R /* CA55_RVBARADDR4_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR4_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR4_H.R /* CA55_RVBARADDR4_H */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR5_L AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR5_L.R /* CA55_RVBARADDR5_L */
#define AON__BLK_CTRL_S_AONMIX2_CA55_RVBARADDR5_H AON__BLK_CTRL_S_AONMIX2.CA55_RVBARADDR5_H.R /* CA55_RVBARADDR5_H */
#define AON__BLK_CTRL_S_AONMIX2_ELE_IRQ_MASK AON__BLK_CTRL_S_AONMIX2.ELE_IRQ_MASK.R /* Mask bits of ELE interrupt */
#define AON__BLK_CTRL_S_AONMIX2_ELE_RESET_REQ_MASK AON__BLK_CTRL_S_AONMIX2.ELE_RESET_REQ_MASK.R /* Mask bits of ELE reset */
#define AON__BLK_CTRL_S_AONMIX2_ELE_HALT_STATUS AON__BLK_CTRL_S_AONMIX2.ELE_HALT_STATUS.R /* ELE Halt Status Register */
#define AON__BLK_CTRL_S_AONMIX2_CA55_MODE AON__BLK_CTRL_S_AONMIX2.CA55_MODE.R /* Control the boot mode of two ca55 cores */
#define AON__BLK_CTRL_S_AONMIX2_NMI_MASK AON__BLK_CTRL_S_AONMIX2.NMI_MASK.R /* NMI MASK bits */
#define AON__BLK_CTRL_S_AONMIX2_NMI_CLR AON__BLK_CTRL_S_AONMIX2.NMI_CLR.R /* NMI clear bit */
#define AON__BLK_CTRL_S_AONMIX2_MISC_CFG AON__BLK_CTRL_S_AONMIX2.MISC_CFG.R /* Miscellaneous Configure Register */
#define AON__BLK_CTRL_S_AONMIX2_SW_FAULTS AON__BLK_CTRL_S_AONMIX2.SW_FAULTS.R /* Software Generated Fault Register */
#define AON__BLK_CTRL_S_AONMIX2_ELE_GPO_STATUS AON__BLK_CTRL_S_AONMIX2.ELE_GPO_STATUS.R /* ELE gpo status register */
#define AON__BLK_CTRL_S_AONMIX2_ELE_RST_REQ_STAT AON__BLK_CTRL_S_AONMIX2.ELE_RST_REQ_STAT.R /* ELE Reset Request Status Register */
#define AON__BLK_CTRL_S_AONMIX2_ELE_IRQ_REQ_STAT AON__BLK_CTRL_S_AONMIX2.ELE_IRQ_REQ_STAT.R /* ELE IRQ Request Status Register */

/* AON_CAN_FD */
#define AON__CAN_FD1_MCR     AON__CAN_FD1.MCR.R            /* Module Configuration */
#define AON__CAN_FD1_CTRL1   AON__CAN_FD1.CTRL1.R          /* Control 1 */
#define AON__CAN_FD1_TIMER   AON__CAN_FD1.TIMER.R          /* Free-Running Timer */
#define AON__CAN_FD1_RXMGMASK AON__CAN_FD1.RXMGMASK.R      /* RX Message Buffers Global Mask */
#define AON__CAN_FD1_RX14MASK AON__CAN_FD1.RX14MASK.R      /* Receive 14 Mask */
#define AON__CAN_FD1_RX15MASK AON__CAN_FD1.RX15MASK.R      /* Receive 15 Mask */
#define AON__CAN_FD1_ECR     AON__CAN_FD1.ECR.R            /* Error Counter */
#define AON__CAN_FD1_ESR1    AON__CAN_FD1.ESR1.R           /* Error and Status 1 */
#define AON__CAN_FD1_IMASK2  AON__CAN_FD1.IMASK2.R         /* Interrupt Masks 2 */
#define AON__CAN_FD1_IMASK1  AON__CAN_FD1.IMASK1.R         /* Interrupt Masks 1 */
#define AON__CAN_FD1_IFLAG2  AON__CAN_FD1.IFLAG2.R         /* Interrupt Flags 2 */
#define AON__CAN_FD1_IFLAG1  AON__CAN_FD1.IFLAG1.R         /* Interrupt Flags 1 */
#define AON__CAN_FD1_CTRL2   AON__CAN_FD1.CTRL2.R          /* Control 2 */
#define AON__CAN_FD1_ESR2    AON__CAN_FD1.ESR2.R           /* Error and Status 2 */
#define AON__CAN_FD1_CRCR    AON__CAN_FD1.CRCR.R           /* Cyclic Redundancy Check */
#define AON__CAN_FD1_RXFGMASK AON__CAN_FD1.RXFGMASK.R      /* Legacy RX FIFO Global Mask */
#define AON__CAN_FD1_RXFIR   AON__CAN_FD1.RXFIR.R          /* Legacy RX FIFO Information */
#define AON__CAN_FD1_CBT     AON__CAN_FD1.CBT.R            /* CAN Bit Timing */
#define AON__CAN_FD1_IMASK3  AON__CAN_FD1.IMASK3.R         /* Interrupt Masks 3 */
#define AON__CAN_FD1_IFLAG3  AON__CAN_FD1.IFLAG3.R         /* Interrupt Flags 3 */
#define AON__CAN_FD1_FLTCONF_IE AON__CAN_FD1.FLTCONF_IE.R  /* Fault Confinement Interrupt Enable */
#define AON__CAN_FD1_RXIMR0  AON__CAN_FD1.RXIMR[0].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR1  AON__CAN_FD1.RXIMR[1].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR2  AON__CAN_FD1.RXIMR[2].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR3  AON__CAN_FD1.RXIMR[3].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR4  AON__CAN_FD1.RXIMR[4].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR5  AON__CAN_FD1.RXIMR[5].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR6  AON__CAN_FD1.RXIMR[6].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR7  AON__CAN_FD1.RXIMR[7].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR8  AON__CAN_FD1.RXIMR[8].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR9  AON__CAN_FD1.RXIMR[9].R       /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR10 AON__CAN_FD1.RXIMR[10].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR11 AON__CAN_FD1.RXIMR[11].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR12 AON__CAN_FD1.RXIMR[12].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR13 AON__CAN_FD1.RXIMR[13].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR14 AON__CAN_FD1.RXIMR[14].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR15 AON__CAN_FD1.RXIMR[15].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR16 AON__CAN_FD1.RXIMR[16].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR17 AON__CAN_FD1.RXIMR[17].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR18 AON__CAN_FD1.RXIMR[18].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR19 AON__CAN_FD1.RXIMR[19].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR20 AON__CAN_FD1.RXIMR[20].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR21 AON__CAN_FD1.RXIMR[21].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR22 AON__CAN_FD1.RXIMR[22].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR23 AON__CAN_FD1.RXIMR[23].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR24 AON__CAN_FD1.RXIMR[24].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR25 AON__CAN_FD1.RXIMR[25].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR26 AON__CAN_FD1.RXIMR[26].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR27 AON__CAN_FD1.RXIMR[27].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR28 AON__CAN_FD1.RXIMR[28].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR29 AON__CAN_FD1.RXIMR[29].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR30 AON__CAN_FD1.RXIMR[30].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR31 AON__CAN_FD1.RXIMR[31].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR32 AON__CAN_FD1.RXIMR[32].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR33 AON__CAN_FD1.RXIMR[33].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR34 AON__CAN_FD1.RXIMR[34].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR35 AON__CAN_FD1.RXIMR[35].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR36 AON__CAN_FD1.RXIMR[36].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR37 AON__CAN_FD1.RXIMR[37].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR38 AON__CAN_FD1.RXIMR[38].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR39 AON__CAN_FD1.RXIMR[39].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR40 AON__CAN_FD1.RXIMR[40].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR41 AON__CAN_FD1.RXIMR[41].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR42 AON__CAN_FD1.RXIMR[42].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR43 AON__CAN_FD1.RXIMR[43].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR44 AON__CAN_FD1.RXIMR[44].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR45 AON__CAN_FD1.RXIMR[45].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR46 AON__CAN_FD1.RXIMR[46].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR47 AON__CAN_FD1.RXIMR[47].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR48 AON__CAN_FD1.RXIMR[48].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR49 AON__CAN_FD1.RXIMR[49].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR50 AON__CAN_FD1.RXIMR[50].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR51 AON__CAN_FD1.RXIMR[51].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR52 AON__CAN_FD1.RXIMR[52].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR53 AON__CAN_FD1.RXIMR[53].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR54 AON__CAN_FD1.RXIMR[54].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR55 AON__CAN_FD1.RXIMR[55].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR56 AON__CAN_FD1.RXIMR[56].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR57 AON__CAN_FD1.RXIMR[57].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR58 AON__CAN_FD1.RXIMR[58].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR59 AON__CAN_FD1.RXIMR[59].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR60 AON__CAN_FD1.RXIMR[60].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR61 AON__CAN_FD1.RXIMR[61].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR62 AON__CAN_FD1.RXIMR[62].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR63 AON__CAN_FD1.RXIMR[63].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR64 AON__CAN_FD1.RXIMR[64].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR65 AON__CAN_FD1.RXIMR[65].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR66 AON__CAN_FD1.RXIMR[66].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR67 AON__CAN_FD1.RXIMR[67].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR68 AON__CAN_FD1.RXIMR[68].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR69 AON__CAN_FD1.RXIMR[69].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR70 AON__CAN_FD1.RXIMR[70].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR71 AON__CAN_FD1.RXIMR[71].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR72 AON__CAN_FD1.RXIMR[72].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR73 AON__CAN_FD1.RXIMR[73].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR74 AON__CAN_FD1.RXIMR[74].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR75 AON__CAN_FD1.RXIMR[75].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR76 AON__CAN_FD1.RXIMR[76].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR77 AON__CAN_FD1.RXIMR[77].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR78 AON__CAN_FD1.RXIMR[78].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR79 AON__CAN_FD1.RXIMR[79].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR80 AON__CAN_FD1.RXIMR[80].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR81 AON__CAN_FD1.RXIMR[81].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR82 AON__CAN_FD1.RXIMR[82].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR83 AON__CAN_FD1.RXIMR[83].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR84 AON__CAN_FD1.RXIMR[84].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR85 AON__CAN_FD1.RXIMR[85].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR86 AON__CAN_FD1.RXIMR[86].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR87 AON__CAN_FD1.RXIMR[87].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR88 AON__CAN_FD1.RXIMR[88].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR89 AON__CAN_FD1.RXIMR[89].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR90 AON__CAN_FD1.RXIMR[90].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR91 AON__CAN_FD1.RXIMR[91].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR92 AON__CAN_FD1.RXIMR[92].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR93 AON__CAN_FD1.RXIMR[93].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR94 AON__CAN_FD1.RXIMR[94].R      /* Receive Individual Mask */
#define AON__CAN_FD1_RXIMR95 AON__CAN_FD1.RXIMR[95].R      /* Receive Individual Mask */
#define AON__CAN_FD1_MECR    AON__CAN_FD1.MECR.R           /* Memory Error Control */
#define AON__CAN_FD1_ERRIAR  AON__CAN_FD1.ERRIAR.R         /* Error Injection Address */
#define AON__CAN_FD1_ERRIDPR AON__CAN_FD1.ERRIDPR.R        /* Error Injection Data Pattern */
#define AON__CAN_FD1_ERRIPPR AON__CAN_FD1.ERRIPPR.R        /* Error Injection Parity Pattern */
#define AON__CAN_FD1_RERRAR  AON__CAN_FD1.RERRAR.R         /* Error Report Address */
#define AON__CAN_FD1_RERRDR  AON__CAN_FD1.RERRDR.R         /* Error Report Data */
#define AON__CAN_FD1_RERRSYNR AON__CAN_FD1.RERRSYNR.R      /* Error Report Syndrome */
#define AON__CAN_FD1_ERRSR   AON__CAN_FD1.ERRSR.R          /* Error Status */
#define AON__CAN_FD1_EPRS    AON__CAN_FD1.EPRS.R           /* Enhanced CAN Bit Timing Prescalers */
#define AON__CAN_FD1_ENCBT   AON__CAN_FD1.ENCBT.R          /* Enhanced Nominal CAN Bit Timing */
#define AON__CAN_FD1_EDCBT   AON__CAN_FD1.EDCBT.R          /* Enhanced Data Phase CAN Bit Timing */
#define AON__CAN_FD1_ETDC    AON__CAN_FD1.ETDC.R           /* Enhanced Transceiver Delay Compensation */
#define AON__CAN_FD1_FDCTRL  AON__CAN_FD1.FDCTRL.R         /* CAN FD Control */
#define AON__CAN_FD1_FDCBT   AON__CAN_FD1.FDCBT.R          /* CAN FD Bit Timing */
#define AON__CAN_FD1_FDCRC   AON__CAN_FD1.FDCRC.R          /* CAN FD CRC */
#define AON__CAN_FD1_ERFCR   AON__CAN_FD1.ERFCR.R          /* Enhanced RX FIFO Control */
#define AON__CAN_FD1_ERFIER  AON__CAN_FD1.ERFIER.R         /* Enhanced RX FIFO Interrupt Enable */
#define AON__CAN_FD1_ERFSR   AON__CAN_FD1.ERFSR.R          /* Enhanced RX FIFO Status */
#define AON__CAN_FD1_HR_TIME_STAMP0 AON__CAN_FD1.HR_TIME_STAMP[0].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP1 AON__CAN_FD1.HR_TIME_STAMP[1].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP2 AON__CAN_FD1.HR_TIME_STAMP[2].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP3 AON__CAN_FD1.HR_TIME_STAMP[3].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP4 AON__CAN_FD1.HR_TIME_STAMP[4].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP5 AON__CAN_FD1.HR_TIME_STAMP[5].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP6 AON__CAN_FD1.HR_TIME_STAMP[6].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP7 AON__CAN_FD1.HR_TIME_STAMP[7].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP8 AON__CAN_FD1.HR_TIME_STAMP[8].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP9 AON__CAN_FD1.HR_TIME_STAMP[9].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP10 AON__CAN_FD1.HR_TIME_STAMP[10].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP11 AON__CAN_FD1.HR_TIME_STAMP[11].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP12 AON__CAN_FD1.HR_TIME_STAMP[12].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP13 AON__CAN_FD1.HR_TIME_STAMP[13].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP14 AON__CAN_FD1.HR_TIME_STAMP[14].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP15 AON__CAN_FD1.HR_TIME_STAMP[15].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP16 AON__CAN_FD1.HR_TIME_STAMP[16].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP17 AON__CAN_FD1.HR_TIME_STAMP[17].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP18 AON__CAN_FD1.HR_TIME_STAMP[18].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP19 AON__CAN_FD1.HR_TIME_STAMP[19].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP20 AON__CAN_FD1.HR_TIME_STAMP[20].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP21 AON__CAN_FD1.HR_TIME_STAMP[21].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP22 AON__CAN_FD1.HR_TIME_STAMP[22].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP23 AON__CAN_FD1.HR_TIME_STAMP[23].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP24 AON__CAN_FD1.HR_TIME_STAMP[24].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP25 AON__CAN_FD1.HR_TIME_STAMP[25].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP26 AON__CAN_FD1.HR_TIME_STAMP[26].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP27 AON__CAN_FD1.HR_TIME_STAMP[27].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP28 AON__CAN_FD1.HR_TIME_STAMP[28].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP29 AON__CAN_FD1.HR_TIME_STAMP[29].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP30 AON__CAN_FD1.HR_TIME_STAMP[30].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP31 AON__CAN_FD1.HR_TIME_STAMP[31].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP32 AON__CAN_FD1.HR_TIME_STAMP[32].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP33 AON__CAN_FD1.HR_TIME_STAMP[33].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP34 AON__CAN_FD1.HR_TIME_STAMP[34].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP35 AON__CAN_FD1.HR_TIME_STAMP[35].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP36 AON__CAN_FD1.HR_TIME_STAMP[36].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP37 AON__CAN_FD1.HR_TIME_STAMP[37].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP38 AON__CAN_FD1.HR_TIME_STAMP[38].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP39 AON__CAN_FD1.HR_TIME_STAMP[39].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP40 AON__CAN_FD1.HR_TIME_STAMP[40].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP41 AON__CAN_FD1.HR_TIME_STAMP[41].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP42 AON__CAN_FD1.HR_TIME_STAMP[42].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP43 AON__CAN_FD1.HR_TIME_STAMP[43].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP44 AON__CAN_FD1.HR_TIME_STAMP[44].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP45 AON__CAN_FD1.HR_TIME_STAMP[45].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP46 AON__CAN_FD1.HR_TIME_STAMP[46].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP47 AON__CAN_FD1.HR_TIME_STAMP[47].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP48 AON__CAN_FD1.HR_TIME_STAMP[48].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP49 AON__CAN_FD1.HR_TIME_STAMP[49].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP50 AON__CAN_FD1.HR_TIME_STAMP[50].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP51 AON__CAN_FD1.HR_TIME_STAMP[51].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP52 AON__CAN_FD1.HR_TIME_STAMP[52].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP53 AON__CAN_FD1.HR_TIME_STAMP[53].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP54 AON__CAN_FD1.HR_TIME_STAMP[54].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP55 AON__CAN_FD1.HR_TIME_STAMP[55].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP56 AON__CAN_FD1.HR_TIME_STAMP[56].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP57 AON__CAN_FD1.HR_TIME_STAMP[57].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP58 AON__CAN_FD1.HR_TIME_STAMP[58].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP59 AON__CAN_FD1.HR_TIME_STAMP[59].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP60 AON__CAN_FD1.HR_TIME_STAMP[60].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP61 AON__CAN_FD1.HR_TIME_STAMP[61].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP62 AON__CAN_FD1.HR_TIME_STAMP[62].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP63 AON__CAN_FD1.HR_TIME_STAMP[63].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP64 AON__CAN_FD1.HR_TIME_STAMP[64].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP65 AON__CAN_FD1.HR_TIME_STAMP[65].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP66 AON__CAN_FD1.HR_TIME_STAMP[66].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP67 AON__CAN_FD1.HR_TIME_STAMP[67].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP68 AON__CAN_FD1.HR_TIME_STAMP[68].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP69 AON__CAN_FD1.HR_TIME_STAMP[69].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP70 AON__CAN_FD1.HR_TIME_STAMP[70].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP71 AON__CAN_FD1.HR_TIME_STAMP[71].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP72 AON__CAN_FD1.HR_TIME_STAMP[72].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP73 AON__CAN_FD1.HR_TIME_STAMP[73].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP74 AON__CAN_FD1.HR_TIME_STAMP[74].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP75 AON__CAN_FD1.HR_TIME_STAMP[75].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP76 AON__CAN_FD1.HR_TIME_STAMP[76].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP77 AON__CAN_FD1.HR_TIME_STAMP[77].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP78 AON__CAN_FD1.HR_TIME_STAMP[78].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP79 AON__CAN_FD1.HR_TIME_STAMP[79].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP80 AON__CAN_FD1.HR_TIME_STAMP[80].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP81 AON__CAN_FD1.HR_TIME_STAMP[81].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP82 AON__CAN_FD1.HR_TIME_STAMP[82].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP83 AON__CAN_FD1.HR_TIME_STAMP[83].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP84 AON__CAN_FD1.HR_TIME_STAMP[84].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP85 AON__CAN_FD1.HR_TIME_STAMP[85].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP86 AON__CAN_FD1.HR_TIME_STAMP[86].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP87 AON__CAN_FD1.HR_TIME_STAMP[87].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP88 AON__CAN_FD1.HR_TIME_STAMP[88].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP89 AON__CAN_FD1.HR_TIME_STAMP[89].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP90 AON__CAN_FD1.HR_TIME_STAMP[90].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP91 AON__CAN_FD1.HR_TIME_STAMP[91].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP92 AON__CAN_FD1.HR_TIME_STAMP[92].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP93 AON__CAN_FD1.HR_TIME_STAMP[93].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP94 AON__CAN_FD1.HR_TIME_STAMP[94].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_HR_TIME_STAMP95 AON__CAN_FD1.HR_TIME_STAMP[95].R /* High-Resolution Timestamp */
#define AON__CAN_FD1_ERFFEL0 AON__CAN_FD1.ERFFEL[0].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL1 AON__CAN_FD1.ERFFEL[1].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL2 AON__CAN_FD1.ERFFEL[2].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL3 AON__CAN_FD1.ERFFEL[3].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL4 AON__CAN_FD1.ERFFEL[4].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL5 AON__CAN_FD1.ERFFEL[5].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL6 AON__CAN_FD1.ERFFEL[6].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL7 AON__CAN_FD1.ERFFEL[7].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL8 AON__CAN_FD1.ERFFEL[8].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL9 AON__CAN_FD1.ERFFEL[9].R      /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL10 AON__CAN_FD1.ERFFEL[10].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL11 AON__CAN_FD1.ERFFEL[11].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL12 AON__CAN_FD1.ERFFEL[12].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL13 AON__CAN_FD1.ERFFEL[13].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL14 AON__CAN_FD1.ERFFEL[14].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL15 AON__CAN_FD1.ERFFEL[15].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL16 AON__CAN_FD1.ERFFEL[16].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL17 AON__CAN_FD1.ERFFEL[17].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL18 AON__CAN_FD1.ERFFEL[18].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL19 AON__CAN_FD1.ERFFEL[19].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL20 AON__CAN_FD1.ERFFEL[20].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL21 AON__CAN_FD1.ERFFEL[21].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL22 AON__CAN_FD1.ERFFEL[22].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL23 AON__CAN_FD1.ERFFEL[23].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL24 AON__CAN_FD1.ERFFEL[24].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL25 AON__CAN_FD1.ERFFEL[25].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL26 AON__CAN_FD1.ERFFEL[26].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL27 AON__CAN_FD1.ERFFEL[27].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL28 AON__CAN_FD1.ERFFEL[28].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL29 AON__CAN_FD1.ERFFEL[29].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL30 AON__CAN_FD1.ERFFEL[30].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL31 AON__CAN_FD1.ERFFEL[31].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL32 AON__CAN_FD1.ERFFEL[32].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL33 AON__CAN_FD1.ERFFEL[33].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL34 AON__CAN_FD1.ERFFEL[34].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL35 AON__CAN_FD1.ERFFEL[35].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL36 AON__CAN_FD1.ERFFEL[36].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL37 AON__CAN_FD1.ERFFEL[37].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL38 AON__CAN_FD1.ERFFEL[38].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL39 AON__CAN_FD1.ERFFEL[39].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL40 AON__CAN_FD1.ERFFEL[40].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL41 AON__CAN_FD1.ERFFEL[41].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL42 AON__CAN_FD1.ERFFEL[42].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL43 AON__CAN_FD1.ERFFEL[43].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL44 AON__CAN_FD1.ERFFEL[44].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL45 AON__CAN_FD1.ERFFEL[45].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL46 AON__CAN_FD1.ERFFEL[46].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL47 AON__CAN_FD1.ERFFEL[47].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL48 AON__CAN_FD1.ERFFEL[48].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL49 AON__CAN_FD1.ERFFEL[49].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL50 AON__CAN_FD1.ERFFEL[50].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL51 AON__CAN_FD1.ERFFEL[51].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL52 AON__CAN_FD1.ERFFEL[52].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL53 AON__CAN_FD1.ERFFEL[53].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL54 AON__CAN_FD1.ERFFEL[54].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL55 AON__CAN_FD1.ERFFEL[55].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL56 AON__CAN_FD1.ERFFEL[56].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL57 AON__CAN_FD1.ERFFEL[57].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL58 AON__CAN_FD1.ERFFEL[58].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL59 AON__CAN_FD1.ERFFEL[59].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL60 AON__CAN_FD1.ERFFEL[60].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL61 AON__CAN_FD1.ERFFEL[61].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL62 AON__CAN_FD1.ERFFEL[62].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL63 AON__CAN_FD1.ERFFEL[63].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL64 AON__CAN_FD1.ERFFEL[64].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL65 AON__CAN_FD1.ERFFEL[65].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL66 AON__CAN_FD1.ERFFEL[66].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL67 AON__CAN_FD1.ERFFEL[67].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL68 AON__CAN_FD1.ERFFEL[68].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL69 AON__CAN_FD1.ERFFEL[69].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL70 AON__CAN_FD1.ERFFEL[70].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL71 AON__CAN_FD1.ERFFEL[71].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL72 AON__CAN_FD1.ERFFEL[72].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL73 AON__CAN_FD1.ERFFEL[73].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL74 AON__CAN_FD1.ERFFEL[74].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL75 AON__CAN_FD1.ERFFEL[75].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL76 AON__CAN_FD1.ERFFEL[76].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL77 AON__CAN_FD1.ERFFEL[77].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL78 AON__CAN_FD1.ERFFEL[78].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL79 AON__CAN_FD1.ERFFEL[79].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL80 AON__CAN_FD1.ERFFEL[80].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL81 AON__CAN_FD1.ERFFEL[81].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL82 AON__CAN_FD1.ERFFEL[82].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL83 AON__CAN_FD1.ERFFEL[83].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL84 AON__CAN_FD1.ERFFEL[84].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL85 AON__CAN_FD1.ERFFEL[85].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL86 AON__CAN_FD1.ERFFEL[86].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL87 AON__CAN_FD1.ERFFEL[87].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL88 AON__CAN_FD1.ERFFEL[88].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL89 AON__CAN_FD1.ERFFEL[89].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL90 AON__CAN_FD1.ERFFEL[90].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL91 AON__CAN_FD1.ERFFEL[91].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL92 AON__CAN_FD1.ERFFEL[92].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL93 AON__CAN_FD1.ERFFEL[93].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL94 AON__CAN_FD1.ERFFEL[94].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL95 AON__CAN_FD1.ERFFEL[95].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL96 AON__CAN_FD1.ERFFEL[96].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL97 AON__CAN_FD1.ERFFEL[97].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL98 AON__CAN_FD1.ERFFEL[98].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL99 AON__CAN_FD1.ERFFEL[99].R    /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL100 AON__CAN_FD1.ERFFEL[100].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL101 AON__CAN_FD1.ERFFEL[101].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL102 AON__CAN_FD1.ERFFEL[102].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL103 AON__CAN_FD1.ERFFEL[103].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL104 AON__CAN_FD1.ERFFEL[104].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL105 AON__CAN_FD1.ERFFEL[105].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL106 AON__CAN_FD1.ERFFEL[106].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL107 AON__CAN_FD1.ERFFEL[107].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL108 AON__CAN_FD1.ERFFEL[108].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL109 AON__CAN_FD1.ERFFEL[109].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL110 AON__CAN_FD1.ERFFEL[110].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL111 AON__CAN_FD1.ERFFEL[111].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL112 AON__CAN_FD1.ERFFEL[112].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL113 AON__CAN_FD1.ERFFEL[113].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL114 AON__CAN_FD1.ERFFEL[114].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL115 AON__CAN_FD1.ERFFEL[115].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL116 AON__CAN_FD1.ERFFEL[116].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL117 AON__CAN_FD1.ERFFEL[117].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL118 AON__CAN_FD1.ERFFEL[118].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL119 AON__CAN_FD1.ERFFEL[119].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL120 AON__CAN_FD1.ERFFEL[120].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL121 AON__CAN_FD1.ERFFEL[121].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL122 AON__CAN_FD1.ERFFEL[122].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL123 AON__CAN_FD1.ERFFEL[123].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL124 AON__CAN_FD1.ERFFEL[124].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL125 AON__CAN_FD1.ERFFEL[125].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL126 AON__CAN_FD1.ERFFEL[126].R  /* Enhanced RX FIFO Filter Element */
#define AON__CAN_FD1_ERFFEL127 AON__CAN_FD1.ERFFEL[127].R  /* Enhanced RX FIFO Filter Element */

/* AON_CMU */
#define AON__CMUA1_GCR       AON__CMUA1.GCR.R              /* Global Configuration Register */
#define AON__CMUA1_RCCR      AON__CMUA1.RCCR.R             /* Reference Count Configuration Register */
#define AON__CMUA1_HTCR      AON__CMUA1.HTCR.R             /* High Threshold Configuration Register */
#define AON__CMUA1_LTCR      AON__CMUA1.LTCR.R             /* Low Threshold Configuration Register */
#define AON__CMUA1_SR        AON__CMUA1.SR.R               /* Status Register */
#define AON__CMUA1_IER       AON__CMUA1.IER.R              /* Interrupt Enable Register */

#define AON__CMUA2_GCR       AON__CMUA2.GCR.R              /* Global Configuration Register */
#define AON__CMUA2_RCCR      AON__CMUA2.RCCR.R             /* Reference Count Configuration Register */
#define AON__CMUA2_HTCR      AON__CMUA2.HTCR.R             /* High Threshold Configuration Register */
#define AON__CMUA2_LTCR      AON__CMUA2.LTCR.R             /* Low Threshold Configuration Register */
#define AON__CMUA2_SR        AON__CMUA2.SR.R               /* Status Register */
#define AON__CMUA2_IER       AON__CMUA2.IER.R              /* Interrupt Enable Register */

/* AON_CRC */
#define AON__CRCA_CFG1       AON__CRCA.CHANNEL[0].CFG.R    /* Configuration Register */
#define AON__CRCA_INP1       AON__CRCA.CHANNEL[0].INP.R    /* Input Register */
#define AON__CRCA_CSTAT1     AON__CRCA.CHANNEL[0].CSTAT.R  /* Current Status Register */
#define AON__CRCA_OUTP1      AON__CRCA.CHANNEL[0].OUTP.R   /* Output Register */
#define AON__CRCA_CFG2       AON__CRCA.CHANNEL[1].CFG.R    /* Configuration Register */
#define AON__CRCA_INP2       AON__CRCA.CHANNEL[1].INP.R    /* Input Register */
#define AON__CRCA_CSTAT2     AON__CRCA.CHANNEL[1].CSTAT.R  /* Current Status Register */
#define AON__CRCA_OUTP2      AON__CRCA.CHANNEL[1].OUTP.R   /* Output Register */
#define AON__CRCA_CFG3       AON__CRCA.CHANNEL[2].CFG.R    /* Configuration Register */
#define AON__CRCA_INP3       AON__CRCA.CHANNEL[2].INP.R    /* Input Register */
#define AON__CRCA_CSTAT3     AON__CRCA.CHANNEL[2].CSTAT.R  /* Current Status Register */
#define AON__CRCA_OUTP3      AON__CRCA.CHANNEL[2].OUTP.R   /* Output Register */

/* AON_CSTCU */
#define AON__CSTCU_RUNSWREG  AON__CSTCU.RUNSWREG.R         /* Run Software */
#define AON__CSTCU_LSCHLVLD  AON__CSTCU.LSCHLVLD.R         /* LSTCU Scheduler List Valid */
#define AON__CSTCU_WDG       AON__CSTCU.WDG.R              /* Watchdog Timer */
#define AON__CSTCU_IE        AON__CSTCU.IE.R               /* Interrupt Enable */
#define AON__CSTCU_IF        AON__CSTCU.IF.R               /* Interrupt Flag */
#define AON__CSTCU_ERR_STAT  AON__CSTCU.ERR_STAT.R         /* Error Status */
#define AON__CSTCU_ERR_FM    AON__CSTCU.ERR_FM.R           /* Error Fault Mapping */
#define AON__CSTCU_LRFSTAT0  AON__CSTCU.LRFSTAT[0].R       /* LSTCU Recoverable Fault Status */
#define AON__CSTCU_LUFSTAT0  AON__CSTCU.LUFSTAT[0].R       /* LSTCU Unrecoverable Fault Status */
#define AON__CSTCU_RDEN      AON__CSTCU.RDEN.R             /* Reset Domain Self-Test Enable */
#define AON__CSTCU_RDENSTAT  AON__CSTCU.RDENSTAT.R         /* Reset Domain Enable Status */
#define AON__CSTCU_LASTRDEN  AON__CSTCU.LASTRDEN.R         /* Last Run Reset Domain Enable */
#define AON__CSTCU_BYPLSTCU0 AON__CSTCU.BYPLSTCU[0].R      /* Bypass LSTCU */
#define AON__CSTCU_STAG      AON__CSTCU.STAG.R             /* Stagger */
#define AON__CSTCU_LMBPTR0   AON__CSTCU.LMBPTR[0].R        /* LSTCU MBIST Run Phase Scheduler Pointer */
#define AON__CSTCU_LMBPTR1   AON__CSTCU.LMBPTR[1].R        /* LSTCU MBIST Run Phase Scheduler Pointer */
#define AON__CSTCU_LMBPTR2   AON__CSTCU.LMBPTR[2].R        /* LSTCU MBIST Run Phase Scheduler Pointer */
#define AON__CSTCU_LMBPTR3   AON__CSTCU.LMBPTR[3].R        /* LSTCU MBIST Run Phase Scheduler Pointer */
#define AON__CSTCU_LMBPTR4   AON__CSTCU.LMBPTR[4].R        /* LSTCU MBIST Run Phase Scheduler Pointer */

/* AON_EDMA3_MP */
#define AON__EDMA3_MP1_MP_CSR AON__EDMA3_MP1.MP_CSR.R      /* Management Page Control */
#define AON__EDMA3_MP1_MP_ES AON__EDMA3_MP1.MP_ES.R        /* Management Page Error Status */
#define AON__EDMA3_MP1_MP_INT AON__EDMA3_MP1.MP_INT.R      /* Management Page Interrupt Request Status */
#define AON__EDMA3_MP1_MP_HRS AON__EDMA3_MP1.MP_HRS.R      /* Management Page Hardware Request Status */
#define AON__EDMA3_MP1_CH0_GRPRI AON__EDMA3_MP1.CH_GRPRI[0].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH1_GRPRI AON__EDMA3_MP1.CH_GRPRI[1].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH2_GRPRI AON__EDMA3_MP1.CH_GRPRI[2].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH3_GRPRI AON__EDMA3_MP1.CH_GRPRI[3].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH4_GRPRI AON__EDMA3_MP1.CH_GRPRI[4].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH5_GRPRI AON__EDMA3_MP1.CH_GRPRI[5].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH6_GRPRI AON__EDMA3_MP1.CH_GRPRI[6].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH7_GRPRI AON__EDMA3_MP1.CH_GRPRI[7].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH8_GRPRI AON__EDMA3_MP1.CH_GRPRI[8].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH9_GRPRI AON__EDMA3_MP1.CH_GRPRI[9].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH10_GRPRI AON__EDMA3_MP1.CH_GRPRI[10].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH11_GRPRI AON__EDMA3_MP1.CH_GRPRI[11].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH12_GRPRI AON__EDMA3_MP1.CH_GRPRI[12].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH13_GRPRI AON__EDMA3_MP1.CH_GRPRI[13].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH14_GRPRI AON__EDMA3_MP1.CH_GRPRI[14].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH15_GRPRI AON__EDMA3_MP1.CH_GRPRI[15].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH16_GRPRI AON__EDMA3_MP1.CH_GRPRI[16].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH17_GRPRI AON__EDMA3_MP1.CH_GRPRI[17].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH18_GRPRI AON__EDMA3_MP1.CH_GRPRI[18].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH19_GRPRI AON__EDMA3_MP1.CH_GRPRI[19].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH20_GRPRI AON__EDMA3_MP1.CH_GRPRI[20].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH21_GRPRI AON__EDMA3_MP1.CH_GRPRI[21].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH22_GRPRI AON__EDMA3_MP1.CH_GRPRI[22].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH23_GRPRI AON__EDMA3_MP1.CH_GRPRI[23].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH24_GRPRI AON__EDMA3_MP1.CH_GRPRI[24].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH25_GRPRI AON__EDMA3_MP1.CH_GRPRI[25].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH26_GRPRI AON__EDMA3_MP1.CH_GRPRI[26].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH27_GRPRI AON__EDMA3_MP1.CH_GRPRI[27].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH28_GRPRI AON__EDMA3_MP1.CH_GRPRI[28].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH29_GRPRI AON__EDMA3_MP1.CH_GRPRI[29].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH30_GRPRI AON__EDMA3_MP1.CH_GRPRI[30].R /* Channel Arbitration Group */
#define AON__EDMA3_MP1_CH31_GRPRI AON__EDMA3_MP1.CH_GRPRI[31].R /* Channel Arbitration Group */

/* AON_EDMA3_TCD */
#define AON__EDMA3_TCD1_CH0_CSR AON__EDMA3_TCD1.TCD[0].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH0_ES AON__EDMA3_TCD1.TCD[0].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH0_INT AON__EDMA3_TCD1.TCD[0].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH0_SBR AON__EDMA3_TCD1.TCD[0].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH0_PRI AON__EDMA3_TCD1.TCD[0].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD0_SADDR AON__EDMA3_TCD1.TCD[0].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD0_SOFF AON__EDMA3_TCD1.TCD[0].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD0_ATTR AON__EDMA3_TCD1.TCD[0].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD0_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[0].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD0_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[0].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD0_SLAST_SDA AON__EDMA3_TCD1.TCD[0].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD0_DADDR AON__EDMA3_TCD1.TCD[0].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD0_DOFF AON__EDMA3_TCD1.TCD[0].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD0_CITER_ELINKNO AON__EDMA3_TCD1.TCD[0].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD0_CITER_ELINKYES AON__EDMA3_TCD1.TCD[0].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD0_DLAST_SGA AON__EDMA3_TCD1.TCD[0].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD0_CSR AON__EDMA3_TCD1.TCD[0].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD0_BITER_ELINKNO AON__EDMA3_TCD1.TCD[0].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD0_BITER_ELINKYES AON__EDMA3_TCD1.TCD[0].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH1_CSR AON__EDMA3_TCD1.TCD[1].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH1_ES AON__EDMA3_TCD1.TCD[1].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH1_INT AON__EDMA3_TCD1.TCD[1].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH1_SBR AON__EDMA3_TCD1.TCD[1].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH1_PRI AON__EDMA3_TCD1.TCD[1].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD1_SADDR AON__EDMA3_TCD1.TCD[1].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD1_SOFF AON__EDMA3_TCD1.TCD[1].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD1_ATTR AON__EDMA3_TCD1.TCD[1].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD1_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[1].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD1_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[1].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD1_SLAST_SDA AON__EDMA3_TCD1.TCD[1].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD1_DADDR AON__EDMA3_TCD1.TCD[1].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD1_DOFF AON__EDMA3_TCD1.TCD[1].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD1_CITER_ELINKNO AON__EDMA3_TCD1.TCD[1].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD1_CITER_ELINKYES AON__EDMA3_TCD1.TCD[1].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD1_DLAST_SGA AON__EDMA3_TCD1.TCD[1].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD1_CSR AON__EDMA3_TCD1.TCD[1].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD1_BITER_ELINKNO AON__EDMA3_TCD1.TCD[1].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD1_BITER_ELINKYES AON__EDMA3_TCD1.TCD[1].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH2_CSR AON__EDMA3_TCD1.TCD[2].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH2_ES AON__EDMA3_TCD1.TCD[2].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH2_INT AON__EDMA3_TCD1.TCD[2].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH2_SBR AON__EDMA3_TCD1.TCD[2].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH2_PRI AON__EDMA3_TCD1.TCD[2].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD2_SADDR AON__EDMA3_TCD1.TCD[2].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD2_SOFF AON__EDMA3_TCD1.TCD[2].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD2_ATTR AON__EDMA3_TCD1.TCD[2].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD2_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[2].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD2_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[2].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD2_SLAST_SDA AON__EDMA3_TCD1.TCD[2].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD2_DADDR AON__EDMA3_TCD1.TCD[2].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD2_DOFF AON__EDMA3_TCD1.TCD[2].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD2_CITER_ELINKNO AON__EDMA3_TCD1.TCD[2].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD2_CITER_ELINKYES AON__EDMA3_TCD1.TCD[2].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD2_DLAST_SGA AON__EDMA3_TCD1.TCD[2].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD2_CSR AON__EDMA3_TCD1.TCD[2].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD2_BITER_ELINKNO AON__EDMA3_TCD1.TCD[2].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD2_BITER_ELINKYES AON__EDMA3_TCD1.TCD[2].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH3_CSR AON__EDMA3_TCD1.TCD[3].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH3_ES AON__EDMA3_TCD1.TCD[3].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH3_INT AON__EDMA3_TCD1.TCD[3].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH3_SBR AON__EDMA3_TCD1.TCD[3].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH3_PRI AON__EDMA3_TCD1.TCD[3].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD3_SADDR AON__EDMA3_TCD1.TCD[3].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD3_SOFF AON__EDMA3_TCD1.TCD[3].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD3_ATTR AON__EDMA3_TCD1.TCD[3].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD3_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[3].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD3_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[3].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD3_SLAST_SDA AON__EDMA3_TCD1.TCD[3].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD3_DADDR AON__EDMA3_TCD1.TCD[3].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD3_DOFF AON__EDMA3_TCD1.TCD[3].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD3_CITER_ELINKNO AON__EDMA3_TCD1.TCD[3].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD3_CITER_ELINKYES AON__EDMA3_TCD1.TCD[3].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD3_DLAST_SGA AON__EDMA3_TCD1.TCD[3].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD3_CSR AON__EDMA3_TCD1.TCD[3].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD3_BITER_ELINKNO AON__EDMA3_TCD1.TCD[3].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD3_BITER_ELINKYES AON__EDMA3_TCD1.TCD[3].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH4_CSR AON__EDMA3_TCD1.TCD[4].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH4_ES AON__EDMA3_TCD1.TCD[4].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH4_INT AON__EDMA3_TCD1.TCD[4].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH4_SBR AON__EDMA3_TCD1.TCD[4].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH4_PRI AON__EDMA3_TCD1.TCD[4].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD4_SADDR AON__EDMA3_TCD1.TCD[4].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD4_SOFF AON__EDMA3_TCD1.TCD[4].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD4_ATTR AON__EDMA3_TCD1.TCD[4].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD4_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[4].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD4_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[4].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD4_SLAST_SDA AON__EDMA3_TCD1.TCD[4].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD4_DADDR AON__EDMA3_TCD1.TCD[4].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD4_DOFF AON__EDMA3_TCD1.TCD[4].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD4_CITER_ELINKNO AON__EDMA3_TCD1.TCD[4].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD4_CITER_ELINKYES AON__EDMA3_TCD1.TCD[4].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD4_DLAST_SGA AON__EDMA3_TCD1.TCD[4].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD4_CSR AON__EDMA3_TCD1.TCD[4].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD4_BITER_ELINKNO AON__EDMA3_TCD1.TCD[4].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD4_BITER_ELINKYES AON__EDMA3_TCD1.TCD[4].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH5_CSR AON__EDMA3_TCD1.TCD[5].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH5_ES AON__EDMA3_TCD1.TCD[5].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH5_INT AON__EDMA3_TCD1.TCD[5].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH5_SBR AON__EDMA3_TCD1.TCD[5].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH5_PRI AON__EDMA3_TCD1.TCD[5].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD5_SADDR AON__EDMA3_TCD1.TCD[5].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD5_SOFF AON__EDMA3_TCD1.TCD[5].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD5_ATTR AON__EDMA3_TCD1.TCD[5].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD5_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[5].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD5_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[5].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD5_SLAST_SDA AON__EDMA3_TCD1.TCD[5].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD5_DADDR AON__EDMA3_TCD1.TCD[5].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD5_DOFF AON__EDMA3_TCD1.TCD[5].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD5_CITER_ELINKNO AON__EDMA3_TCD1.TCD[5].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD5_CITER_ELINKYES AON__EDMA3_TCD1.TCD[5].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD5_DLAST_SGA AON__EDMA3_TCD1.TCD[5].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD5_CSR AON__EDMA3_TCD1.TCD[5].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD5_BITER_ELINKNO AON__EDMA3_TCD1.TCD[5].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD5_BITER_ELINKYES AON__EDMA3_TCD1.TCD[5].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH6_CSR AON__EDMA3_TCD1.TCD[6].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH6_ES AON__EDMA3_TCD1.TCD[6].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH6_INT AON__EDMA3_TCD1.TCD[6].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH6_SBR AON__EDMA3_TCD1.TCD[6].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH6_PRI AON__EDMA3_TCD1.TCD[6].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD6_SADDR AON__EDMA3_TCD1.TCD[6].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD6_SOFF AON__EDMA3_TCD1.TCD[6].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD6_ATTR AON__EDMA3_TCD1.TCD[6].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD6_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[6].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD6_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[6].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD6_SLAST_SDA AON__EDMA3_TCD1.TCD[6].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD6_DADDR AON__EDMA3_TCD1.TCD[6].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD6_DOFF AON__EDMA3_TCD1.TCD[6].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD6_CITER_ELINKNO AON__EDMA3_TCD1.TCD[6].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD6_CITER_ELINKYES AON__EDMA3_TCD1.TCD[6].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD6_DLAST_SGA AON__EDMA3_TCD1.TCD[6].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD6_CSR AON__EDMA3_TCD1.TCD[6].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD6_BITER_ELINKNO AON__EDMA3_TCD1.TCD[6].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD6_BITER_ELINKYES AON__EDMA3_TCD1.TCD[6].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH7_CSR AON__EDMA3_TCD1.TCD[7].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH7_ES AON__EDMA3_TCD1.TCD[7].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH7_INT AON__EDMA3_TCD1.TCD[7].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH7_SBR AON__EDMA3_TCD1.TCD[7].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH7_PRI AON__EDMA3_TCD1.TCD[7].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD7_SADDR AON__EDMA3_TCD1.TCD[7].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD7_SOFF AON__EDMA3_TCD1.TCD[7].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD7_ATTR AON__EDMA3_TCD1.TCD[7].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD7_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[7].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD7_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[7].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD7_SLAST_SDA AON__EDMA3_TCD1.TCD[7].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD7_DADDR AON__EDMA3_TCD1.TCD[7].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD7_DOFF AON__EDMA3_TCD1.TCD[7].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD7_CITER_ELINKNO AON__EDMA3_TCD1.TCD[7].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD7_CITER_ELINKYES AON__EDMA3_TCD1.TCD[7].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD7_DLAST_SGA AON__EDMA3_TCD1.TCD[7].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD7_CSR AON__EDMA3_TCD1.TCD[7].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD7_BITER_ELINKNO AON__EDMA3_TCD1.TCD[7].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD7_BITER_ELINKYES AON__EDMA3_TCD1.TCD[7].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH8_CSR AON__EDMA3_TCD1.TCD[8].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH8_ES AON__EDMA3_TCD1.TCD[8].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH8_INT AON__EDMA3_TCD1.TCD[8].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH8_SBR AON__EDMA3_TCD1.TCD[8].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH8_PRI AON__EDMA3_TCD1.TCD[8].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD8_SADDR AON__EDMA3_TCD1.TCD[8].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD8_SOFF AON__EDMA3_TCD1.TCD[8].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD8_ATTR AON__EDMA3_TCD1.TCD[8].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD8_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[8].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD8_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[8].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD8_SLAST_SDA AON__EDMA3_TCD1.TCD[8].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD8_DADDR AON__EDMA3_TCD1.TCD[8].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD8_DOFF AON__EDMA3_TCD1.TCD[8].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD8_CITER_ELINKNO AON__EDMA3_TCD1.TCD[8].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD8_CITER_ELINKYES AON__EDMA3_TCD1.TCD[8].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD8_DLAST_SGA AON__EDMA3_TCD1.TCD[8].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD8_CSR AON__EDMA3_TCD1.TCD[8].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD8_BITER_ELINKNO AON__EDMA3_TCD1.TCD[8].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD8_BITER_ELINKYES AON__EDMA3_TCD1.TCD[8].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH9_CSR AON__EDMA3_TCD1.TCD[9].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH9_ES AON__EDMA3_TCD1.TCD[9].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH9_INT AON__EDMA3_TCD1.TCD[9].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH9_SBR AON__EDMA3_TCD1.TCD[9].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH9_PRI AON__EDMA3_TCD1.TCD[9].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD9_SADDR AON__EDMA3_TCD1.TCD[9].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD9_SOFF AON__EDMA3_TCD1.TCD[9].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD9_ATTR AON__EDMA3_TCD1.TCD[9].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD9_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[9].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD9_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[9].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD9_SLAST_SDA AON__EDMA3_TCD1.TCD[9].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD9_DADDR AON__EDMA3_TCD1.TCD[9].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD9_DOFF AON__EDMA3_TCD1.TCD[9].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD9_CITER_ELINKNO AON__EDMA3_TCD1.TCD[9].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD9_CITER_ELINKYES AON__EDMA3_TCD1.TCD[9].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD9_DLAST_SGA AON__EDMA3_TCD1.TCD[9].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD9_CSR AON__EDMA3_TCD1.TCD[9].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD9_BITER_ELINKNO AON__EDMA3_TCD1.TCD[9].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD9_BITER_ELINKYES AON__EDMA3_TCD1.TCD[9].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH10_CSR AON__EDMA3_TCD1.TCD[10].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH10_ES AON__EDMA3_TCD1.TCD[10].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH10_INT AON__EDMA3_TCD1.TCD[10].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH10_SBR AON__EDMA3_TCD1.TCD[10].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH10_PRI AON__EDMA3_TCD1.TCD[10].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD10_SADDR AON__EDMA3_TCD1.TCD[10].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD10_SOFF AON__EDMA3_TCD1.TCD[10].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD10_ATTR AON__EDMA3_TCD1.TCD[10].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD10_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[10].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD10_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[10].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD10_SLAST_SDA AON__EDMA3_TCD1.TCD[10].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD10_DADDR AON__EDMA3_TCD1.TCD[10].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD10_DOFF AON__EDMA3_TCD1.TCD[10].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD10_CITER_ELINKNO AON__EDMA3_TCD1.TCD[10].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD10_CITER_ELINKYES AON__EDMA3_TCD1.TCD[10].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD10_DLAST_SGA AON__EDMA3_TCD1.TCD[10].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD10_CSR AON__EDMA3_TCD1.TCD[10].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD10_BITER_ELINKNO AON__EDMA3_TCD1.TCD[10].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD10_BITER_ELINKYES AON__EDMA3_TCD1.TCD[10].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH11_CSR AON__EDMA3_TCD1.TCD[11].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH11_ES AON__EDMA3_TCD1.TCD[11].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH11_INT AON__EDMA3_TCD1.TCD[11].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH11_SBR AON__EDMA3_TCD1.TCD[11].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH11_PRI AON__EDMA3_TCD1.TCD[11].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD11_SADDR AON__EDMA3_TCD1.TCD[11].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD11_SOFF AON__EDMA3_TCD1.TCD[11].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD11_ATTR AON__EDMA3_TCD1.TCD[11].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD11_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[11].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD11_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[11].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD11_SLAST_SDA AON__EDMA3_TCD1.TCD[11].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD11_DADDR AON__EDMA3_TCD1.TCD[11].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD11_DOFF AON__EDMA3_TCD1.TCD[11].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD11_CITER_ELINKNO AON__EDMA3_TCD1.TCD[11].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD11_CITER_ELINKYES AON__EDMA3_TCD1.TCD[11].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD11_DLAST_SGA AON__EDMA3_TCD1.TCD[11].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD11_CSR AON__EDMA3_TCD1.TCD[11].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD11_BITER_ELINKNO AON__EDMA3_TCD1.TCD[11].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD11_BITER_ELINKYES AON__EDMA3_TCD1.TCD[11].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH12_CSR AON__EDMA3_TCD1.TCD[12].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH12_ES AON__EDMA3_TCD1.TCD[12].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH12_INT AON__EDMA3_TCD1.TCD[12].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH12_SBR AON__EDMA3_TCD1.TCD[12].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH12_PRI AON__EDMA3_TCD1.TCD[12].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD12_SADDR AON__EDMA3_TCD1.TCD[12].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD12_SOFF AON__EDMA3_TCD1.TCD[12].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD12_ATTR AON__EDMA3_TCD1.TCD[12].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD12_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[12].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD12_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[12].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD12_SLAST_SDA AON__EDMA3_TCD1.TCD[12].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD12_DADDR AON__EDMA3_TCD1.TCD[12].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD12_DOFF AON__EDMA3_TCD1.TCD[12].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD12_CITER_ELINKNO AON__EDMA3_TCD1.TCD[12].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD12_CITER_ELINKYES AON__EDMA3_TCD1.TCD[12].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD12_DLAST_SGA AON__EDMA3_TCD1.TCD[12].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD12_CSR AON__EDMA3_TCD1.TCD[12].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD12_BITER_ELINKNO AON__EDMA3_TCD1.TCD[12].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD12_BITER_ELINKYES AON__EDMA3_TCD1.TCD[12].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH13_CSR AON__EDMA3_TCD1.TCD[13].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH13_ES AON__EDMA3_TCD1.TCD[13].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH13_INT AON__EDMA3_TCD1.TCD[13].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH13_SBR AON__EDMA3_TCD1.TCD[13].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH13_PRI AON__EDMA3_TCD1.TCD[13].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD13_SADDR AON__EDMA3_TCD1.TCD[13].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD13_SOFF AON__EDMA3_TCD1.TCD[13].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD13_ATTR AON__EDMA3_TCD1.TCD[13].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD13_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[13].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD13_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[13].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD13_SLAST_SDA AON__EDMA3_TCD1.TCD[13].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD13_DADDR AON__EDMA3_TCD1.TCD[13].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD13_DOFF AON__EDMA3_TCD1.TCD[13].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD13_CITER_ELINKNO AON__EDMA3_TCD1.TCD[13].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD13_CITER_ELINKYES AON__EDMA3_TCD1.TCD[13].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD13_DLAST_SGA AON__EDMA3_TCD1.TCD[13].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD13_CSR AON__EDMA3_TCD1.TCD[13].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD13_BITER_ELINKNO AON__EDMA3_TCD1.TCD[13].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD13_BITER_ELINKYES AON__EDMA3_TCD1.TCD[13].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH14_CSR AON__EDMA3_TCD1.TCD[14].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH14_ES AON__EDMA3_TCD1.TCD[14].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH14_INT AON__EDMA3_TCD1.TCD[14].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH14_SBR AON__EDMA3_TCD1.TCD[14].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH14_PRI AON__EDMA3_TCD1.TCD[14].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD14_SADDR AON__EDMA3_TCD1.TCD[14].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD14_SOFF AON__EDMA3_TCD1.TCD[14].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD14_ATTR AON__EDMA3_TCD1.TCD[14].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD14_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[14].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD14_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[14].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD14_SLAST_SDA AON__EDMA3_TCD1.TCD[14].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD14_DADDR AON__EDMA3_TCD1.TCD[14].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD14_DOFF AON__EDMA3_TCD1.TCD[14].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD14_CITER_ELINKNO AON__EDMA3_TCD1.TCD[14].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD14_CITER_ELINKYES AON__EDMA3_TCD1.TCD[14].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD14_DLAST_SGA AON__EDMA3_TCD1.TCD[14].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD14_CSR AON__EDMA3_TCD1.TCD[14].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD14_BITER_ELINKNO AON__EDMA3_TCD1.TCD[14].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD14_BITER_ELINKYES AON__EDMA3_TCD1.TCD[14].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH15_CSR AON__EDMA3_TCD1.TCD[15].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH15_ES AON__EDMA3_TCD1.TCD[15].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH15_INT AON__EDMA3_TCD1.TCD[15].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH15_SBR AON__EDMA3_TCD1.TCD[15].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH15_PRI AON__EDMA3_TCD1.TCD[15].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD15_SADDR AON__EDMA3_TCD1.TCD[15].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD15_SOFF AON__EDMA3_TCD1.TCD[15].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD15_ATTR AON__EDMA3_TCD1.TCD[15].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD15_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[15].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD15_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[15].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD15_SLAST_SDA AON__EDMA3_TCD1.TCD[15].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD15_DADDR AON__EDMA3_TCD1.TCD[15].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD15_DOFF AON__EDMA3_TCD1.TCD[15].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD15_CITER_ELINKNO AON__EDMA3_TCD1.TCD[15].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD15_CITER_ELINKYES AON__EDMA3_TCD1.TCD[15].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD15_DLAST_SGA AON__EDMA3_TCD1.TCD[15].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD15_CSR AON__EDMA3_TCD1.TCD[15].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD15_BITER_ELINKNO AON__EDMA3_TCD1.TCD[15].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD15_BITER_ELINKYES AON__EDMA3_TCD1.TCD[15].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH16_CSR AON__EDMA3_TCD1.TCD[16].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH16_ES AON__EDMA3_TCD1.TCD[16].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH16_INT AON__EDMA3_TCD1.TCD[16].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH16_SBR AON__EDMA3_TCD1.TCD[16].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH16_PRI AON__EDMA3_TCD1.TCD[16].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD16_SADDR AON__EDMA3_TCD1.TCD[16].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD16_SOFF AON__EDMA3_TCD1.TCD[16].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD16_ATTR AON__EDMA3_TCD1.TCD[16].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD16_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[16].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD16_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[16].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD16_SLAST_SDA AON__EDMA3_TCD1.TCD[16].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD16_DADDR AON__EDMA3_TCD1.TCD[16].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD16_DOFF AON__EDMA3_TCD1.TCD[16].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD16_CITER_ELINKNO AON__EDMA3_TCD1.TCD[16].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD16_CITER_ELINKYES AON__EDMA3_TCD1.TCD[16].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD16_DLAST_SGA AON__EDMA3_TCD1.TCD[16].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD16_CSR AON__EDMA3_TCD1.TCD[16].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD16_BITER_ELINKNO AON__EDMA3_TCD1.TCD[16].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD16_BITER_ELINKYES AON__EDMA3_TCD1.TCD[16].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH17_CSR AON__EDMA3_TCD1.TCD[17].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH17_ES AON__EDMA3_TCD1.TCD[17].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH17_INT AON__EDMA3_TCD1.TCD[17].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH17_SBR AON__EDMA3_TCD1.TCD[17].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH17_PRI AON__EDMA3_TCD1.TCD[17].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD17_SADDR AON__EDMA3_TCD1.TCD[17].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD17_SOFF AON__EDMA3_TCD1.TCD[17].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD17_ATTR AON__EDMA3_TCD1.TCD[17].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD17_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[17].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD17_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[17].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD17_SLAST_SDA AON__EDMA3_TCD1.TCD[17].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD17_DADDR AON__EDMA3_TCD1.TCD[17].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD17_DOFF AON__EDMA3_TCD1.TCD[17].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD17_CITER_ELINKNO AON__EDMA3_TCD1.TCD[17].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD17_CITER_ELINKYES AON__EDMA3_TCD1.TCD[17].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD17_DLAST_SGA AON__EDMA3_TCD1.TCD[17].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD17_CSR AON__EDMA3_TCD1.TCD[17].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD17_BITER_ELINKNO AON__EDMA3_TCD1.TCD[17].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD17_BITER_ELINKYES AON__EDMA3_TCD1.TCD[17].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH18_CSR AON__EDMA3_TCD1.TCD[18].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH18_ES AON__EDMA3_TCD1.TCD[18].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH18_INT AON__EDMA3_TCD1.TCD[18].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH18_SBR AON__EDMA3_TCD1.TCD[18].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH18_PRI AON__EDMA3_TCD1.TCD[18].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD18_SADDR AON__EDMA3_TCD1.TCD[18].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD18_SOFF AON__EDMA3_TCD1.TCD[18].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD18_ATTR AON__EDMA3_TCD1.TCD[18].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD18_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[18].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD18_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[18].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD18_SLAST_SDA AON__EDMA3_TCD1.TCD[18].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD18_DADDR AON__EDMA3_TCD1.TCD[18].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD18_DOFF AON__EDMA3_TCD1.TCD[18].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD18_CITER_ELINKNO AON__EDMA3_TCD1.TCD[18].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD18_CITER_ELINKYES AON__EDMA3_TCD1.TCD[18].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD18_DLAST_SGA AON__EDMA3_TCD1.TCD[18].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD18_CSR AON__EDMA3_TCD1.TCD[18].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD18_BITER_ELINKNO AON__EDMA3_TCD1.TCD[18].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD18_BITER_ELINKYES AON__EDMA3_TCD1.TCD[18].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH19_CSR AON__EDMA3_TCD1.TCD[19].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH19_ES AON__EDMA3_TCD1.TCD[19].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH19_INT AON__EDMA3_TCD1.TCD[19].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH19_SBR AON__EDMA3_TCD1.TCD[19].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH19_PRI AON__EDMA3_TCD1.TCD[19].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD19_SADDR AON__EDMA3_TCD1.TCD[19].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD19_SOFF AON__EDMA3_TCD1.TCD[19].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD19_ATTR AON__EDMA3_TCD1.TCD[19].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD19_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[19].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD19_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[19].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD19_SLAST_SDA AON__EDMA3_TCD1.TCD[19].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD19_DADDR AON__EDMA3_TCD1.TCD[19].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD19_DOFF AON__EDMA3_TCD1.TCD[19].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD19_CITER_ELINKNO AON__EDMA3_TCD1.TCD[19].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD19_CITER_ELINKYES AON__EDMA3_TCD1.TCD[19].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD19_DLAST_SGA AON__EDMA3_TCD1.TCD[19].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD19_CSR AON__EDMA3_TCD1.TCD[19].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD19_BITER_ELINKNO AON__EDMA3_TCD1.TCD[19].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD19_BITER_ELINKYES AON__EDMA3_TCD1.TCD[19].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH20_CSR AON__EDMA3_TCD1.TCD[20].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH20_ES AON__EDMA3_TCD1.TCD[20].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH20_INT AON__EDMA3_TCD1.TCD[20].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH20_SBR AON__EDMA3_TCD1.TCD[20].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH20_PRI AON__EDMA3_TCD1.TCD[20].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD20_SADDR AON__EDMA3_TCD1.TCD[20].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD20_SOFF AON__EDMA3_TCD1.TCD[20].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD20_ATTR AON__EDMA3_TCD1.TCD[20].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD20_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[20].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD20_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[20].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD20_SLAST_SDA AON__EDMA3_TCD1.TCD[20].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD20_DADDR AON__EDMA3_TCD1.TCD[20].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD20_DOFF AON__EDMA3_TCD1.TCD[20].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD20_CITER_ELINKNO AON__EDMA3_TCD1.TCD[20].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD20_CITER_ELINKYES AON__EDMA3_TCD1.TCD[20].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD20_DLAST_SGA AON__EDMA3_TCD1.TCD[20].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD20_CSR AON__EDMA3_TCD1.TCD[20].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD20_BITER_ELINKNO AON__EDMA3_TCD1.TCD[20].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD20_BITER_ELINKYES AON__EDMA3_TCD1.TCD[20].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH21_CSR AON__EDMA3_TCD1.TCD[21].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH21_ES AON__EDMA3_TCD1.TCD[21].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH21_INT AON__EDMA3_TCD1.TCD[21].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH21_SBR AON__EDMA3_TCD1.TCD[21].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH21_PRI AON__EDMA3_TCD1.TCD[21].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD21_SADDR AON__EDMA3_TCD1.TCD[21].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD21_SOFF AON__EDMA3_TCD1.TCD[21].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD21_ATTR AON__EDMA3_TCD1.TCD[21].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD21_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[21].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD21_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[21].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD21_SLAST_SDA AON__EDMA3_TCD1.TCD[21].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD21_DADDR AON__EDMA3_TCD1.TCD[21].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD21_DOFF AON__EDMA3_TCD1.TCD[21].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD21_CITER_ELINKNO AON__EDMA3_TCD1.TCD[21].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD21_CITER_ELINKYES AON__EDMA3_TCD1.TCD[21].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD21_DLAST_SGA AON__EDMA3_TCD1.TCD[21].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD21_CSR AON__EDMA3_TCD1.TCD[21].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD21_BITER_ELINKNO AON__EDMA3_TCD1.TCD[21].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD21_BITER_ELINKYES AON__EDMA3_TCD1.TCD[21].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH22_CSR AON__EDMA3_TCD1.TCD[22].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH22_ES AON__EDMA3_TCD1.TCD[22].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH22_INT AON__EDMA3_TCD1.TCD[22].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH22_SBR AON__EDMA3_TCD1.TCD[22].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH22_PRI AON__EDMA3_TCD1.TCD[22].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD22_SADDR AON__EDMA3_TCD1.TCD[22].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD22_SOFF AON__EDMA3_TCD1.TCD[22].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD22_ATTR AON__EDMA3_TCD1.TCD[22].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD22_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[22].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD22_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[22].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD22_SLAST_SDA AON__EDMA3_TCD1.TCD[22].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD22_DADDR AON__EDMA3_TCD1.TCD[22].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD22_DOFF AON__EDMA3_TCD1.TCD[22].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD22_CITER_ELINKNO AON__EDMA3_TCD1.TCD[22].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD22_CITER_ELINKYES AON__EDMA3_TCD1.TCD[22].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD22_DLAST_SGA AON__EDMA3_TCD1.TCD[22].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD22_CSR AON__EDMA3_TCD1.TCD[22].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD22_BITER_ELINKNO AON__EDMA3_TCD1.TCD[22].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD22_BITER_ELINKYES AON__EDMA3_TCD1.TCD[22].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH23_CSR AON__EDMA3_TCD1.TCD[23].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH23_ES AON__EDMA3_TCD1.TCD[23].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH23_INT AON__EDMA3_TCD1.TCD[23].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH23_SBR AON__EDMA3_TCD1.TCD[23].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH23_PRI AON__EDMA3_TCD1.TCD[23].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD23_SADDR AON__EDMA3_TCD1.TCD[23].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD23_SOFF AON__EDMA3_TCD1.TCD[23].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD23_ATTR AON__EDMA3_TCD1.TCD[23].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD23_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[23].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD23_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[23].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD23_SLAST_SDA AON__EDMA3_TCD1.TCD[23].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD23_DADDR AON__EDMA3_TCD1.TCD[23].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD23_DOFF AON__EDMA3_TCD1.TCD[23].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD23_CITER_ELINKNO AON__EDMA3_TCD1.TCD[23].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD23_CITER_ELINKYES AON__EDMA3_TCD1.TCD[23].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD23_DLAST_SGA AON__EDMA3_TCD1.TCD[23].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD23_CSR AON__EDMA3_TCD1.TCD[23].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD23_BITER_ELINKNO AON__EDMA3_TCD1.TCD[23].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD23_BITER_ELINKYES AON__EDMA3_TCD1.TCD[23].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH24_CSR AON__EDMA3_TCD1.TCD[24].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH24_ES AON__EDMA3_TCD1.TCD[24].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH24_INT AON__EDMA3_TCD1.TCD[24].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH24_SBR AON__EDMA3_TCD1.TCD[24].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH24_PRI AON__EDMA3_TCD1.TCD[24].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD24_SADDR AON__EDMA3_TCD1.TCD[24].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD24_SOFF AON__EDMA3_TCD1.TCD[24].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD24_ATTR AON__EDMA3_TCD1.TCD[24].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD24_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[24].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD24_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[24].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD24_SLAST_SDA AON__EDMA3_TCD1.TCD[24].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD24_DADDR AON__EDMA3_TCD1.TCD[24].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD24_DOFF AON__EDMA3_TCD1.TCD[24].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD24_CITER_ELINKNO AON__EDMA3_TCD1.TCD[24].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD24_CITER_ELINKYES AON__EDMA3_TCD1.TCD[24].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD24_DLAST_SGA AON__EDMA3_TCD1.TCD[24].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD24_CSR AON__EDMA3_TCD1.TCD[24].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD24_BITER_ELINKNO AON__EDMA3_TCD1.TCD[24].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD24_BITER_ELINKYES AON__EDMA3_TCD1.TCD[24].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH25_CSR AON__EDMA3_TCD1.TCD[25].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH25_ES AON__EDMA3_TCD1.TCD[25].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH25_INT AON__EDMA3_TCD1.TCD[25].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH25_SBR AON__EDMA3_TCD1.TCD[25].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH25_PRI AON__EDMA3_TCD1.TCD[25].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD25_SADDR AON__EDMA3_TCD1.TCD[25].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD25_SOFF AON__EDMA3_TCD1.TCD[25].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD25_ATTR AON__EDMA3_TCD1.TCD[25].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD25_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[25].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD25_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[25].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD25_SLAST_SDA AON__EDMA3_TCD1.TCD[25].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD25_DADDR AON__EDMA3_TCD1.TCD[25].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD25_DOFF AON__EDMA3_TCD1.TCD[25].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD25_CITER_ELINKNO AON__EDMA3_TCD1.TCD[25].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD25_CITER_ELINKYES AON__EDMA3_TCD1.TCD[25].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD25_DLAST_SGA AON__EDMA3_TCD1.TCD[25].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD25_CSR AON__EDMA3_TCD1.TCD[25].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD25_BITER_ELINKNO AON__EDMA3_TCD1.TCD[25].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD25_BITER_ELINKYES AON__EDMA3_TCD1.TCD[25].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH26_CSR AON__EDMA3_TCD1.TCD[26].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH26_ES AON__EDMA3_TCD1.TCD[26].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH26_INT AON__EDMA3_TCD1.TCD[26].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH26_SBR AON__EDMA3_TCD1.TCD[26].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH26_PRI AON__EDMA3_TCD1.TCD[26].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD26_SADDR AON__EDMA3_TCD1.TCD[26].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD26_SOFF AON__EDMA3_TCD1.TCD[26].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD26_ATTR AON__EDMA3_TCD1.TCD[26].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD26_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[26].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD26_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[26].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD26_SLAST_SDA AON__EDMA3_TCD1.TCD[26].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD26_DADDR AON__EDMA3_TCD1.TCD[26].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD26_DOFF AON__EDMA3_TCD1.TCD[26].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD26_CITER_ELINKNO AON__EDMA3_TCD1.TCD[26].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD26_CITER_ELINKYES AON__EDMA3_TCD1.TCD[26].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD26_DLAST_SGA AON__EDMA3_TCD1.TCD[26].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD26_CSR AON__EDMA3_TCD1.TCD[26].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD26_BITER_ELINKNO AON__EDMA3_TCD1.TCD[26].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD26_BITER_ELINKYES AON__EDMA3_TCD1.TCD[26].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH27_CSR AON__EDMA3_TCD1.TCD[27].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH27_ES AON__EDMA3_TCD1.TCD[27].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH27_INT AON__EDMA3_TCD1.TCD[27].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH27_SBR AON__EDMA3_TCD1.TCD[27].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH27_PRI AON__EDMA3_TCD1.TCD[27].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD27_SADDR AON__EDMA3_TCD1.TCD[27].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD27_SOFF AON__EDMA3_TCD1.TCD[27].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD27_ATTR AON__EDMA3_TCD1.TCD[27].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD27_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[27].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD27_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[27].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD27_SLAST_SDA AON__EDMA3_TCD1.TCD[27].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD27_DADDR AON__EDMA3_TCD1.TCD[27].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD27_DOFF AON__EDMA3_TCD1.TCD[27].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD27_CITER_ELINKNO AON__EDMA3_TCD1.TCD[27].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD27_CITER_ELINKYES AON__EDMA3_TCD1.TCD[27].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD27_DLAST_SGA AON__EDMA3_TCD1.TCD[27].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD27_CSR AON__EDMA3_TCD1.TCD[27].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD27_BITER_ELINKNO AON__EDMA3_TCD1.TCD[27].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD27_BITER_ELINKYES AON__EDMA3_TCD1.TCD[27].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH28_CSR AON__EDMA3_TCD1.TCD[28].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH28_ES AON__EDMA3_TCD1.TCD[28].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH28_INT AON__EDMA3_TCD1.TCD[28].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH28_SBR AON__EDMA3_TCD1.TCD[28].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH28_PRI AON__EDMA3_TCD1.TCD[28].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD28_SADDR AON__EDMA3_TCD1.TCD[28].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD28_SOFF AON__EDMA3_TCD1.TCD[28].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD28_ATTR AON__EDMA3_TCD1.TCD[28].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD28_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[28].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD28_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[28].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD28_SLAST_SDA AON__EDMA3_TCD1.TCD[28].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD28_DADDR AON__EDMA3_TCD1.TCD[28].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD28_DOFF AON__EDMA3_TCD1.TCD[28].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD28_CITER_ELINKNO AON__EDMA3_TCD1.TCD[28].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD28_CITER_ELINKYES AON__EDMA3_TCD1.TCD[28].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD28_DLAST_SGA AON__EDMA3_TCD1.TCD[28].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD28_CSR AON__EDMA3_TCD1.TCD[28].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD28_BITER_ELINKNO AON__EDMA3_TCD1.TCD[28].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD28_BITER_ELINKYES AON__EDMA3_TCD1.TCD[28].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH29_CSR AON__EDMA3_TCD1.TCD[29].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH29_ES AON__EDMA3_TCD1.TCD[29].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH29_INT AON__EDMA3_TCD1.TCD[29].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH29_SBR AON__EDMA3_TCD1.TCD[29].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH29_PRI AON__EDMA3_TCD1.TCD[29].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD29_SADDR AON__EDMA3_TCD1.TCD[29].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD29_SOFF AON__EDMA3_TCD1.TCD[29].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD29_ATTR AON__EDMA3_TCD1.TCD[29].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD29_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[29].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD29_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[29].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD29_SLAST_SDA AON__EDMA3_TCD1.TCD[29].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD29_DADDR AON__EDMA3_TCD1.TCD[29].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD29_DOFF AON__EDMA3_TCD1.TCD[29].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD29_CITER_ELINKNO AON__EDMA3_TCD1.TCD[29].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD29_CITER_ELINKYES AON__EDMA3_TCD1.TCD[29].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD29_DLAST_SGA AON__EDMA3_TCD1.TCD[29].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD29_CSR AON__EDMA3_TCD1.TCD[29].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD29_BITER_ELINKNO AON__EDMA3_TCD1.TCD[29].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD29_BITER_ELINKYES AON__EDMA3_TCD1.TCD[29].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH30_CSR AON__EDMA3_TCD1.TCD[30].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH30_ES AON__EDMA3_TCD1.TCD[30].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH30_INT AON__EDMA3_TCD1.TCD[30].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH30_SBR AON__EDMA3_TCD1.TCD[30].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH30_PRI AON__EDMA3_TCD1.TCD[30].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD30_SADDR AON__EDMA3_TCD1.TCD[30].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD30_SOFF AON__EDMA3_TCD1.TCD[30].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD30_ATTR AON__EDMA3_TCD1.TCD[30].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD30_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[30].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD30_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[30].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD30_SLAST_SDA AON__EDMA3_TCD1.TCD[30].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD30_DADDR AON__EDMA3_TCD1.TCD[30].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD30_DOFF AON__EDMA3_TCD1.TCD[30].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD30_CITER_ELINKNO AON__EDMA3_TCD1.TCD[30].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD30_CITER_ELINKYES AON__EDMA3_TCD1.TCD[30].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD30_DLAST_SGA AON__EDMA3_TCD1.TCD[30].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD30_CSR AON__EDMA3_TCD1.TCD[30].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD30_BITER_ELINKNO AON__EDMA3_TCD1.TCD[30].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD30_BITER_ELINKYES AON__EDMA3_TCD1.TCD[30].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_CH31_CSR AON__EDMA3_TCD1.TCD[31].CH_CSR.R /* Channel Control and Status */
#define AON__EDMA3_TCD1_CH31_ES AON__EDMA3_TCD1.TCD[31].CH_ES.R /* Channel Error Status */
#define AON__EDMA3_TCD1_CH31_INT AON__EDMA3_TCD1.TCD[31].CH_INT.R /* Channel Interrupt Status */
#define AON__EDMA3_TCD1_CH31_SBR AON__EDMA3_TCD1.TCD[31].CH_SBR.R /* Channel System Bus */
#define AON__EDMA3_TCD1_CH31_PRI AON__EDMA3_TCD1.TCD[31].CH_PRI.R /* Channel Priority */
#define AON__EDMA3_TCD1_TCD31_SADDR AON__EDMA3_TCD1.TCD[31].SADDR.R /* TCD Source Address */
#define AON__EDMA3_TCD1_TCD31_SOFF AON__EDMA3_TCD1.TCD[31].SOFF.R /* TCD Signed Source Address Offset */
#define AON__EDMA3_TCD1_TCD31_ATTR AON__EDMA3_TCD1.TCD[31].ATTR.R /* TCD Transfer Attributes */
#define AON__EDMA3_TCD1_TCD31_NBYTES_MLOFFNO AON__EDMA3_TCD1.TCD[31].NBYTES.NBYTES_MLOFFNO.R /* TCD Transfer Size Without Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD31_NBYTES_MLOFFYES AON__EDMA3_TCD1.TCD[31].NBYTES.NBYTES_MLOFFYES.R /* TCD Transfer Size with Minor Loop Offsets */
#define AON__EDMA3_TCD1_TCD31_SLAST_SDA AON__EDMA3_TCD1.TCD[31].SLAST_SDA.R /* TCD Last Source Address Adjustment / Store DADDR Address */
#define AON__EDMA3_TCD1_TCD31_DADDR AON__EDMA3_TCD1.TCD[31].DADDR.R /* TCD Destination Address */
#define AON__EDMA3_TCD1_TCD31_DOFF AON__EDMA3_TCD1.TCD[31].DOFF.R /* TCD Signed Destination Address Offset */
#define AON__EDMA3_TCD1_TCD31_CITER_ELINKNO AON__EDMA3_TCD1.TCD[31].CITER.CITER_ELINKNO.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD31_CITER_ELINKYES AON__EDMA3_TCD1.TCD[31].CITER.CITER_ELINKYES.R /* TCD Current Major Loop Count (Minor Loop Channel Linking Enabled) */
#define AON__EDMA3_TCD1_TCD31_DLAST_SGA AON__EDMA3_TCD1.TCD[31].DLAST_SGA.R /* TCD Last Destination Address Adjustment / Scatter Gather Address */
#define AON__EDMA3_TCD1_TCD31_CSR AON__EDMA3_TCD1.TCD[31].CSR.R /* TCD Control and Status */
#define AON__EDMA3_TCD1_TCD31_BITER_ELINKNO AON__EDMA3_TCD1.TCD[31].BITER.BITER_ELINKNO.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Disabled) */
#define AON__EDMA3_TCD1_TCD31_BITER_ELINKYES AON__EDMA3_TCD1.TCD[31].BITER.BITER_ELINKYES.R /* TCD Beginning Major Loop Count (Minor Loop Channel Linking Enabled) */

/* AON_EIM */
#define AON__EIMA_EIMCR      AON__EIMA.EIMCR.R             /* Error Injection Module Configuration Register */
#define AON__EIMA_EICHEN     AON__EIMA.EICHEN.R            /* Error Injection Channel Enable register */
#define AON__EIMA_EICHD0_WORD0 AON__EIMA.EICHD0_WORD0.R    /* Error Injection Channel Descriptor 0, Word0 */
#define AON__EIMA_EICHD0_WORD1 AON__EIMA.EICHD0_WORD1.R    /* Error Injection Channel Descriptor 0, Word1 */
#define AON__EIMA_EICHD0_WORD2 AON__EIMA.EICHD0_WORD2.R    /* Error Injection Channel Descriptor 0, Word2 */
#define AON__EIMA_EICHD1_WORD0 AON__EIMA.EICHD1_WORD0.R    /* Error Injection Channel Descriptor 1, Word0 */
#define AON__EIMA_EICHD1_WORD1 AON__EIMA.EICHD1_WORD1.R    /* Error Injection Channel Descriptor 1, Word1 */
#define AON__EIMA_EICHD1_WORD2 AON__EIMA.EICHD1_WORD2.R    /* Error Injection Channel Descriptor 1, Word2 */
#define AON__EIMA_EICHD2_WORD0 AON__EIMA.EICHD2_WORD0.R    /* Error Injection Channel Descriptor 2, Word0 */
#define AON__EIMA_EICHD2_WORD1 AON__EIMA.EICHD2_WORD1.R    /* Error Injection Channel Descriptor 2, Word1 */
#define AON__EIMA_EICHD2_WORD2 AON__EIMA.EICHD2_WORD2.R    /* Error Injection Channel Descriptor 2, Word2 */
#define AON__EIMA_EICHD3_WORD0 AON__EIMA.EICHD3_WORD0.R    /* Error Injection Channel Descriptor 3, Word0 */
#define AON__EIMA_EICHD3_WORD1 AON__EIMA.EICHD3_WORD1.R    /* Error Injection Channel Descriptor 3, Word1 */
#define AON__EIMA_EICHD3_WORD2 AON__EIMA.EICHD3_WORD2.R    /* Error Injection Channel Descriptor 3, Word2 */
#define AON__EIMA_EICHD4_WORD0 AON__EIMA.EICHD4_WORD0.R    /* Error Injection Channel Descriptor 4, Word0 */
#define AON__EIMA_EICHD4_WORD1 AON__EIMA.EICHD4_WORD1.R    /* Error Injection Channel Descriptor 4, Word1 */
#define AON__EIMA_EICHD5_WORD0 AON__EIMA.EICHD5_WORD0.R    /* Error Injection Channel Descriptor 5, Word0 */
#define AON__EIMA_EICHD5_WORD1 AON__EIMA.EICHD5_WORD1.R    /* Error Injection Channel Descriptor 5, Word1 */
#define AON__EIMA_EICHD6_WORD0 AON__EIMA.EICHD6_WORD0.R    /* Error Injection Channel Descriptor 6, Word0 */
#define AON__EIMA_EICHD6_WORD1 AON__EIMA.EICHD6_WORD1.R    /* Error Injection Channel Descriptor 6, Word1 */
#define AON__EIMA_EICHD7_WORD0 AON__EIMA.EICHD7_WORD0.R    /* Error Injection Channel Descriptor 7, Word0 */
#define AON__EIMA_EICHD7_WORD1 AON__EIMA.EICHD7_WORD1.R    /* Error Injection Channel Descriptor 7, Word1 */
#define AON__EIMA_EICHD8_WORD0 AON__EIMA.EICHD8_WORD0.R    /* Error Injection Channel Descriptor 8, Word0 */
#define AON__EIMA_EICHD8_WORD1 AON__EIMA.EICHD8_WORD1.R    /* Error Injection Channel Descriptor 8, Word1 */
#define AON__EIMA_EICHD9_WORD0 AON__EIMA.EICHD9_WORD0.R    /* Error Injection Channel Descriptor 9, Word0 */
#define AON__EIMA_EICHD9_WORD1 AON__EIMA.EICHD9_WORD1.R    /* Error Injection Channel Descriptor 9, Word1 */
#define AON__EIMA_EICHD10_WORD0 AON__EIMA.EICHD10_WORD0.R  /* Error Injection Channel Descriptor 10, Word0 */
#define AON__EIMA_EICHD10_WORD1 AON__EIMA.EICHD10_WORD1.R  /* Error Injection Channel Descriptor 10, Word1 */
#define AON__EIMA_EICHD11_WORD0 AON__EIMA.EICHD11_WORD0.R  /* Error Injection Channel Descriptor 11, Word0 */
#define AON__EIMA_EICHD11_WORD1 AON__EIMA.EICHD11_WORD1.R  /* Error Injection Channel Descriptor 11, Word1 */
#define AON__EIMA_EICHD12_WORD0 AON__EIMA.EICHD12_WORD0.R  /* Error Injection Channel Descriptor 12, Word0 */
#define AON__EIMA_EICHD12_WORD1 AON__EIMA.EICHD12_WORD1.R  /* Error Injection Channel Descriptor 12, Word1 */

/* AON_ERM */
#define AON__ERMA_CR0        AON__ERMA.CR0.R               /* ERM Configuration Register 0 */
#define AON__ERMA_CR1        AON__ERMA.CR1.R               /* ERM Configuration Register 1 */
#define AON__ERMA_SR0        AON__ERMA.SR0.R               /* ERM Status Register 0 */
#define AON__ERMA_SR1        AON__ERMA.SR1.R               /* ERM Status Register 1 */
#define AON__ERMA_EAR0       AON__ERMA.EAR0.R              /* ERM Memory 0 Error Address Register */
#define AON__ERMA_SYN0       AON__ERMA.SYN0.R              /* ERM Memory 0 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT0 AON__ERMA.CORR_ERR_CNT0.R  /* ERM Memory 0 Correctable Error Count Register */
#define AON__ERMA_EAR1       AON__ERMA.EAR1.R              /* ERM Memory 1 Error Address Register */
#define AON__ERMA_SYN1       AON__ERMA.SYN1.R              /* ERM Memory 1 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT1 AON__ERMA.CORR_ERR_CNT1.R  /* ERM Memory 1 Correctable Error Count Register */
#define AON__ERMA_EAR2       AON__ERMA.EAR2.R              /* ERM Memory 2 Error Address Register */
#define AON__ERMA_SYN2       AON__ERMA.SYN2.R              /* ERM Memory 2 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT2 AON__ERMA.CORR_ERR_CNT2.R  /* ERM Memory 2 Correctable Error Count Register */
#define AON__ERMA_EAR3       AON__ERMA.EAR3.R              /* ERM Memory 3 Error Address Register */
#define AON__ERMA_SYN3       AON__ERMA.SYN3.R              /* ERM Memory 3 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT3 AON__ERMA.CORR_ERR_CNT3.R  /* ERM Memory 3 Correctable Error Count Register */
#define AON__ERMA_EAR4       AON__ERMA.EAR4.R              /* ERM Memory 4 Error Address Register */
#define AON__ERMA_SYN4       AON__ERMA.SYN4.R              /* ERM Memory 4 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT4 AON__ERMA.CORR_ERR_CNT4.R  /* ERM Memory 4 Correctable Error Count Register */
#define AON__ERMA_EAR5       AON__ERMA.EAR5.R              /* ERM Memory 5 Error Address Register */
#define AON__ERMA_SYN5       AON__ERMA.SYN5.R              /* ERM Memory 5 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT5 AON__ERMA.CORR_ERR_CNT5.R  /* ERM Memory 5 Correctable Error Count Register */
#define AON__ERMA_EAR6       AON__ERMA.EAR6.R              /* ERM Memory 6 Error Address Register */
#define AON__ERMA_SYN6       AON__ERMA.SYN6.R              /* ERM Memory 6 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT6 AON__ERMA.CORR_ERR_CNT6.R  /* ERM Memory 6 Correctable Error Count Register */
#define AON__ERMA_EAR7       AON__ERMA.EAR7.R              /* ERM Memory 7 Error Address Register */
#define AON__ERMA_SYN7       AON__ERMA.SYN7.R              /* ERM Memory 7 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT7 AON__ERMA.CORR_ERR_CNT7.R  /* ERM Memory 7 Correctable Error Count Register */
#define AON__ERMA_EAR8       AON__ERMA.EAR8.R              /* ERM Memory 8 Error Address Register */
#define AON__ERMA_SYN8       AON__ERMA.SYN8.R              /* ERM Memory 8 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT8 AON__ERMA.CORR_ERR_CNT8.R  /* ERM Memory 8 Correctable Error Count Register */
#define AON__ERMA_EAR9       AON__ERMA.EAR9.R              /* ERM Memory 9 Error Address Register */
#define AON__ERMA_SYN9       AON__ERMA.SYN9.R              /* ERM Memory 9 Syndrome Register */
#define AON__ERMA_CORR_ERR_CNT9 AON__ERMA.CORR_ERR_CNT9.R  /* ERM Memory 9 Correctable Error Count Register */

/* AON_FCCU */
#define AON__FCCU_GRKNTIMC0  AON__FCCU.GRKNTIMC[0].R       /* Global Reaction Timer Period */
#define AON__FCCU_GFLTRC_C0  AON__FCCU.GFLTRC_C0.R         /* Global Fault Recovery */
#define AON__FCCU_GFLTRC_C1  AON__FCCU.GFLTRC_C1.R         /* Global Fault Recovery */
#define AON__FCCU_GFLTRC_C2  AON__FCCU.GFLTRC_C2.R         /* Global Fault Recovery */
#define AON__FCCU_GFLTOVDC0  AON__FCCU.GFLTOVDC0.R         /* Global Fault Overflow Detection */
#define AON__FCCU_GFLTOVDC1  AON__FCCU.GFLTOVDC1.R         /* Global Fault Overflow Detection */
#define AON__FCCU_GFLTOVDC2  AON__FCCU.GFLTOVDC2.R         /* Global Fault Overflow Detection */
#define AON__FCCU_GRKNTIMS   AON__FCCU.GRKNTIMS.R          /* Global Reaction Timer Status */
#define AON__FCCU_GCTRL      AON__FCCU.GCTRL.R             /* Global Space Control */
#define AON__FCCU_GINTOVFS   AON__FCCU.GINTOVFS.R          /* Global DID FSM Status */
#define AON__FCCU_GOVFRKC0   AON__FCCU.GOVFRKC[0].R        /* Global Overflow Reaction */
#define AON__FCCU_GMEOUTDC   AON__FCCU.GMEOUTDC.R          /* Global Minimum EOUT Duration */
#define AON__FCCU_GEOUTTCT   AON__FCCU.GEOUTTCT.R          /* Global EOUT Timer Disable */
#define AON__FCCU_GEOUTPNC0  AON__FCCU.GLB_EOUT[0].GEOUTPNC.R /* Global EOUT Pin */
#define AON__FCCU_GEOUTPMC0  AON__FCCU.GLB_EOUT[0].GEOUTPMC.R /* Global EOUT Pin Map */
#define AON__FCCU_GEOUTMC0   AON__FCCU.GLB_EOUT[0].GEOUTMC.R /* Global EOUT Mode */
#define AON__FCCU_GEOUTTMS0  AON__FCCU.GLB_EOUT[0].GEOUTTMS.R /* Global EOUT Timer Status */
#define AON__FCCU_GEOUTDIC0  AON__FCCU.GLB_EOUT[0].GEOUTDIC.R /* Global EOUT DID */
#define AON__FCCU_GEOUTPNC1  AON__FCCU.GLB_EOUT[1].GEOUTPNC.R /* Global EOUT Pin */
#define AON__FCCU_GEOUTPMC1  AON__FCCU.GLB_EOUT[1].GEOUTPMC.R /* Global EOUT Pin Map */
#define AON__FCCU_GEOUTMC1   AON__FCCU.GLB_EOUT[1].GEOUTMC.R /* Global EOUT Mode */
#define AON__FCCU_GEOUTTMS1  AON__FCCU.GLB_EOUT[1].GEOUTTMS.R /* Global EOUT Timer Status */
#define AON__FCCU_GEOUTDIC1  AON__FCCU.GLB_EOUT[1].GEOUTDIC.R /* Global EOUT DID */
#define AON__FCCU_GDBGCFG    AON__FCCU.GDBGCFG.R           /* Global Debug */
#define AON__FCCU_GDBGSTAT   AON__FCCU.GDBGSTAT.R          /* Global Debug Status */
#define AON__FCCU_GDPFSTAT   AON__FCCU.GDPFSTAT.R          /* Global Debug Pending Fault Status */
#define AON__FCCU_GDALTRLD   AON__FCCU.GDALTRLD.R          /* Global Debug Alternate Reload Status */
#define AON__FCCU_FHCFG0     AON__FCCU.FHCFG0.R            /* Fault Handler */
#define AON__FCCU_FHSRVDS0   AON__FCCU.FHSRVDS0.R          /* Fault Handler Status */
#define AON__FCCU_FHFLTENC0_0 AON__FCCU.FHFLTENC0_0.R      /* Fault Enable */
#define AON__FCCU_FHFLTENC0_1 AON__FCCU.FHFLTENC0_1.R      /* Fault Enable */
#define AON__FCCU_FHFLTENC0_2 AON__FCCU.FHFLTENC0_2.R      /* Fault Enable */
#define AON__FCCU_FHFLTS0_0  AON__FCCU.FHFLTS0_0.R         /* Fault Status */
#define AON__FCCU_FHFLTS0_1  AON__FCCU.FHFLTS0_1.R         /* Fault Status */
#define AON__FCCU_FHFLTS0_2  AON__FCCU.FHFLTS0_2.R         /* Fault Status */
#define AON__FCCU_FHFLTRKC0_0 AON__FCCU.FHFLTRKC0_0.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_1 AON__FCCU.FHFLTRKC0_1.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_2 AON__FCCU.FHFLTRKC0_2.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_3 AON__FCCU.FHFLTRKC0_3.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_4 AON__FCCU.FHFLTRKC0_4.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_5 AON__FCCU.FHFLTRKC0_5.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_6 AON__FCCU.FHFLTRKC0_6.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_7 AON__FCCU.FHFLTRKC0_7.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_8 AON__FCCU.FHFLTRKC0_8.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_9 AON__FCCU.FHFLTRKC0_9.R      /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_10 AON__FCCU.FHFLTRKC0_10.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_11 AON__FCCU.FHFLTRKC0_11.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_12 AON__FCCU.FHFLTRKC0_12.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_13 AON__FCCU.FHFLTRKC0_13.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_14 AON__FCCU.FHFLTRKC0_14.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_15 AON__FCCU.FHFLTRKC0_15.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_16 AON__FCCU.FHFLTRKC0_16.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_17 AON__FCCU.FHFLTRKC0_17.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_18 AON__FCCU.FHFLTRKC0_18.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHFLTRKC0_19 AON__FCCU.FHFLTRKC0_19.R    /* Fault Reaction Set Configuration */
#define AON__FCCU_FHIMRKC0_00 AON__FCCU.FHIMRKC0_00.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_00 AON__FCCU.FHDLRKC0_00.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_10 AON__FCCU.FHIMRKC0_10.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_10 AON__FCCU.FHDLRKC0_10.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_20 AON__FCCU.FHIMRKC0_20.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_20 AON__FCCU.FHDLRKC0_20.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_30 AON__FCCU.FHIMRKC0_30.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_30 AON__FCCU.FHDLRKC0_30.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_40 AON__FCCU.FHIMRKC0_40.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_40 AON__FCCU.FHDLRKC0_40.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_50 AON__FCCU.FHIMRKC0_50.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_50 AON__FCCU.FHDLRKC0_50.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_60 AON__FCCU.FHIMRKC0_60.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_60 AON__FCCU.FHDLRKC0_60.R      /* Delayed Reaction Configuration */
#define AON__FCCU_FHIMRKC0_70 AON__FCCU.FHIMRKC0_70.R      /* Immediate Reaction Configuration */
#define AON__FCCU_FHDLRKC0_70 AON__FCCU.FHDLRKC0_70.R      /* Delayed Reaction Configuration */

/* AON_I3C */
#define AON__I3C1_MCONFIG    AON__I3C1.MCONFIG.R           /* Controller Configuration */
#define AON__I3C1_SCONFIG    AON__I3C1.SCONFIG.R           /* Target Configuration */
#define AON__I3C1_SSTATUS    AON__I3C1.SSTATUS.R           /* Target Status */
#define AON__I3C1_SCTRL      AON__I3C1.SCTRL.R             /* Target Control */
#define AON__I3C1_SINTSET    AON__I3C1.SINTSET.R           /* Target Interrupt Set */
#define AON__I3C1_SINTCLR    AON__I3C1.SINTCLR.R           /* Target Interrupt Clear */
#define AON__I3C1_SINTMASKED AON__I3C1.SINTMASKED.R        /* Target Interrupt Mask */
#define AON__I3C1_SERRWARN   AON__I3C1.SERRWARN.R          /* Target Errors and Warnings */
#define AON__I3C1_SDMACTRL   AON__I3C1.SDMACTRL.R          /* Target DMA Control */
#define AON__I3C1_SDATACTRL  AON__I3C1.SDATACTRL.R         /* Target Data Control */
#define AON__I3C1_SWDATAB    AON__I3C1.SWDATAB.R           /* Target Write Data Byte */
#define AON__I3C1_SWDATABE   AON__I3C1.SWDATABE.R          /* Target Write Data Byte End */
#define AON__I3C1_SWDATAH    AON__I3C1.SWDATAH.R           /* Target Write Data Half-word */
#define AON__I3C1_SWDATAHE   AON__I3C1.SWDATAHE.R          /* Target Write Data Half-word End */
#define AON__I3C1_SRDATAB    AON__I3C1.SRDATAB.R           /* Target Read Data Byte */
#define AON__I3C1_SRDATAH    AON__I3C1.SRDATAH.R           /* Target Read Data Halfword */
#define AON__I3C1_SWDATAB1   AON__I3C1.SWDATA_B_H.SWDATAB1.R /* Target Write Data Byte */
#define AON__I3C1_SWDATAH1   AON__I3C1.SWDATA_B_H.SWDATAH1.R /* Target Write Data Halfword */
#define AON__I3C1_SCAPABILITIES2 AON__I3C1.SCAPABILITIES2.R /* Target Capabilities 2 */
#define AON__I3C1_SCAPABILITIES AON__I3C1.SCAPABILITIES.R  /* Target Capabilities */
#define AON__I3C1_SMAXLIMITS AON__I3C1.SMAXLIMITS.R        /* Target Maximum Limits */
#define AON__I3C1_SIDPARTNO  AON__I3C1.SIDPARTNO.R         /* Target ID Part Number */
#define AON__I3C1_SIDEXT     AON__I3C1.SIDEXT.R            /* Target ID Extension */
#define AON__I3C1_SVENDORID  AON__I3C1.SVENDORID.R         /* Target Vendor ID */
#define AON__I3C1_STCCLOCK   AON__I3C1.STCCLOCK.R          /* Target Time Control Clock */
#define AON__I3C1_SMSGMAPADDR AON__I3C1.SMSGMAPADDR.R      /* Target Message Map Address */
#define AON__I3C1_MCONFIG_EXT AON__I3C1.MCONFIG_EXT.R      /* Controller Extended Configuration */
#define AON__I3C1_MCTRL      AON__I3C1.MCTRL.R             /* Controller Control */
#define AON__I3C1_MSTATUS    AON__I3C1.MSTATUS.R           /* Controller Status */
#define AON__I3C1_MIBIRULES  AON__I3C1.MIBIRULES.R         /* Controller In-band Interrupt Registry and Rules */
#define AON__I3C1_MINTSET    AON__I3C1.MINTSET.R           /* Controller Interrupt Set */
#define AON__I3C1_MINTCLR    AON__I3C1.MINTCLR.R           /* Controller Interrupt Clear */
#define AON__I3C1_MINTMASKED AON__I3C1.MINTMASKED.R        /* Controller Interrupt Mask */
#define AON__I3C1_MERRWARN   AON__I3C1.MERRWARN.R          /* Controller Errors and Warnings */
#define AON__I3C1_MDMACTRL   AON__I3C1.MDMACTRL.R          /* Controller DMA Control */
#define AON__I3C1_MDATACTRL  AON__I3C1.MDATACTRL.R         /* Controller Data Control */
#define AON__I3C1_MWDATAB    AON__I3C1.MWDATAB.R           /* Controller Write Data Byte */
#define AON__I3C1_MWDATABE   AON__I3C1.MWDATABE.R          /* Controller Write Data Byte End */
#define AON__I3C1_MWDATAH    AON__I3C1.MWDATAH.R           /* Controller Write Data Halfword */
#define AON__I3C1_MWDATAHE   AON__I3C1.MWDATAHE.R          /* Controller Write Data Halfword End */
#define AON__I3C1_MRDATAB    AON__I3C1.MRDATAB.R           /* Controller Read Data Byte */
#define AON__I3C1_MRDATAH    AON__I3C1.MRDATAH.R           /* Controller Read Data Halfword */
#define AON__I3C1_MWDATAB1   AON__I3C1.MWDATA_B1_H1.MWDATAB1.R /* Controller Write Byte Data 1(to bus) */
#define AON__I3C1_MWDATAH1   AON__I3C1.MWDATA_B1_H1.MWDATAH1.R /* Controller Write Halfword Data (to bus) */
#define AON__I3C1_MWMSG_SDR_CONTROL AON__I3C1.MWMSG_SDR.MWMSG_SDR_CONTROL.R /* Controller Write Message Control in SDR mode */
#define AON__I3C1_MWMSG_SDR_DATA AON__I3C1.MWMSG_SDR.MWMSG_SDR_DATA.R /* Controller Write Message Data in SDR mode */
#define AON__I3C1_MRMSG_SDR  AON__I3C1.MRMSG_SDR.R         /* Controller Read Message in SDR mode */
#define AON__I3C1_MWMSG_DDR_CONTROL AON__I3C1.MWMSG_DDR.MWMSG_DDR_CONTROL.R /* Controller Write Message in DDR mode: First Control Word */
#define AON__I3C1_MWMSG_DDR_CONTROL2 AON__I3C1.MWMSG_DDR.MWMSG_DDR_CONTROL2.R /* Controller Write Message in DDR mode Control 2 */
#define AON__I3C1_MWMSG_DDR_DATA AON__I3C1.MWMSG_DDR.MWMSG_DDR_DATA.R /* Controller Write Message Data in DDR mode */
#define AON__I3C1_MRMSG_DDR  AON__I3C1.MRMSG_DDR.R         /* Controller Read Message in DDR mode */
#define AON__I3C1_MDYNADDR   AON__I3C1.MDYNADDR.R          /* Controller Dynamic Address */
#define AON__I3C1_SRSTACTTIME AON__I3C1.SRSTACTTIME.R      /* Timing Rules for TargetReset Recovery */
#define AON__I3C1_SCCCMASK   AON__I3C1.SCCCMASK.R          /* CCC Mask for Unhandled CCCs */
#define AON__I3C1_SERRWARNMASK AON__I3C1.SERRWARNMASK.R    /* Target Errors and Warnings Mask */
#define AON__I3C1_SMAPCTRL0  AON__I3C1.SMAPCTRL0.R         /* Map Feature Control 0 */
#define AON__I3C1_SMAPCTRL1  AON__I3C1.SMAPCTRL1.R         /* Map Feature Control 1 */
#define AON__I3C1_IBIEXT1    AON__I3C1.IBIEXT1.R           /* Extended IBI Data 1 */
#define AON__I3C1_IBIEXT2    AON__I3C1.IBIEXT2.R           /* Extended IBI Data 2 */
#define AON__I3C1_SELFRESET  AON__I3C1.SELFRESET.R         /* Self Reset */

/* AON_INTM */
#define AON__INTM_INTM_MM    AON__INTM.INTM_MM.R           /* Monitor Mode */
#define AON__INTM_INTM_IACK  AON__INTM.INTM_IACK.R         /* Interrupt Acknowledge */
#define AON__INTM_INTM_IRQSEL0 AON__INTM.MON[0].INTM_IRQSEL.R /* Interrupt Request Select for Monitor 0 */
#define AON__INTM_INTM_LATENCY0 AON__INTM.MON[0].INTM_LATENCY.R /* Interrupt Latency for Monitor 0 */
#define AON__INTM_INTM_TIMER0 AON__INTM.MON[0].INTM_TIMER.R /* Timer for Monitor 0 */
#define AON__INTM_INTM_STATUS0 AON__INTM.MON[0].INTM_STATUS.R /* Status for Monitor 0 */
#define AON__INTM_INTM_IRQSEL1 AON__INTM.MON[1].INTM_IRQSEL.R /* Interrupt Request Select for Monitor 1 */
#define AON__INTM_INTM_LATENCY1 AON__INTM.MON[1].INTM_LATENCY.R /* Interrupt Latency for Monitor 1 */
#define AON__INTM_INTM_TIMER1 AON__INTM.MON[1].INTM_TIMER.R /* Timer for Monitor 1 */
#define AON__INTM_INTM_STATUS1 AON__INTM.MON[1].INTM_STATUS.R /* Status for Monitor 1 */
#define AON__INTM_INTM_IRQSEL2 AON__INTM.MON[2].INTM_IRQSEL.R /* Interrupt Request Select for Monitor 2 */
#define AON__INTM_INTM_LATENCY2 AON__INTM.MON[2].INTM_LATENCY.R /* Interrupt Latency for Monitor 2 */
#define AON__INTM_INTM_TIMER2 AON__INTM.MON[2].INTM_TIMER.R /* Timer for Monitor 2 */
#define AON__INTM_INTM_STATUS2 AON__INTM.MON[2].INTM_STATUS.R /* Status for Monitor 2 */
#define AON__INTM_INTM_IRQSEL3 AON__INTM.MON[3].INTM_IRQSEL.R /* Interrupt Request Select for Monitor 3 */
#define AON__INTM_INTM_LATENCY3 AON__INTM.MON[3].INTM_LATENCY.R /* Interrupt Latency for Monitor 3 */
#define AON__INTM_INTM_TIMER3 AON__INTM.MON[3].INTM_TIMER.R /* Timer for Monitor 3 */
#define AON__INTM_INTM_STATUS3 AON__INTM.MON[3].INTM_STATUS.R /* Status for Monitor 3 */

/* AON_IRQSTEER */
#define AON__IRQSTEERM7_CHn_MASK0 AON__IRQSTEERM7.CHN_MASK[0].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK1 AON__IRQSTEERM7.CHN_MASK[1].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK2 AON__IRQSTEERM7.CHN_MASK[2].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK3 AON__IRQSTEERM7.CHN_MASK[3].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK4 AON__IRQSTEERM7.CHN_MASK[4].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK5 AON__IRQSTEERM7.CHN_MASK[5].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK6 AON__IRQSTEERM7.CHN_MASK[6].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK7 AON__IRQSTEERM7.CHN_MASK[7].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK8 AON__IRQSTEERM7.CHN_MASK[8].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK9 AON__IRQSTEERM7.CHN_MASK[9].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK10 AON__IRQSTEERM7.CHN_MASK[10].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK11 AON__IRQSTEERM7.CHN_MASK[11].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK12 AON__IRQSTEERM7.CHN_MASK[12].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK13 AON__IRQSTEERM7.CHN_MASK[13].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK14 AON__IRQSTEERM7.CHN_MASK[14].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK15 AON__IRQSTEERM7.CHN_MASK[15].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK16 AON__IRQSTEERM7.CHN_MASK[16].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK17 AON__IRQSTEERM7.CHN_MASK[17].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK18 AON__IRQSTEERM7.CHN_MASK[18].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_MASK19 AON__IRQSTEERM7.CHN_MASK[19].R /* Channel n Interrupt Mask Register */
#define AON__IRQSTEERM7_CHn_SET0 AON__IRQSTEERM7.CHN_SET[0].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET1 AON__IRQSTEERM7.CHN_SET[1].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET2 AON__IRQSTEERM7.CHN_SET[2].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET3 AON__IRQSTEERM7.CHN_SET[3].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET4 AON__IRQSTEERM7.CHN_SET[4].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET5 AON__IRQSTEERM7.CHN_SET[5].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET6 AON__IRQSTEERM7.CHN_SET[6].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET7 AON__IRQSTEERM7.CHN_SET[7].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET8 AON__IRQSTEERM7.CHN_SET[8].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET9 AON__IRQSTEERM7.CHN_SET[9].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET10 AON__IRQSTEERM7.CHN_SET[10].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET11 AON__IRQSTEERM7.CHN_SET[11].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET12 AON__IRQSTEERM7.CHN_SET[12].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET13 AON__IRQSTEERM7.CHN_SET[13].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET14 AON__IRQSTEERM7.CHN_SET[14].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET15 AON__IRQSTEERM7.CHN_SET[15].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET16 AON__IRQSTEERM7.CHN_SET[16].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET17 AON__IRQSTEERM7.CHN_SET[17].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET18 AON__IRQSTEERM7.CHN_SET[18].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_SET19 AON__IRQSTEERM7.CHN_SET[19].R /* Channel n Interrupt Set Register */
#define AON__IRQSTEERM7_CHn_STATUS0 AON__IRQSTEERM7.CHN_STATUS[0].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS1 AON__IRQSTEERM7.CHN_STATUS[1].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS2 AON__IRQSTEERM7.CHN_STATUS[2].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS3 AON__IRQSTEERM7.CHN_STATUS[3].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS4 AON__IRQSTEERM7.CHN_STATUS[4].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS5 AON__IRQSTEERM7.CHN_STATUS[5].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS6 AON__IRQSTEERM7.CHN_STATUS[6].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS7 AON__IRQSTEERM7.CHN_STATUS[7].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS8 AON__IRQSTEERM7.CHN_STATUS[8].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS9 AON__IRQSTEERM7.CHN_STATUS[9].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS10 AON__IRQSTEERM7.CHN_STATUS[10].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS11 AON__IRQSTEERM7.CHN_STATUS[11].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS12 AON__IRQSTEERM7.CHN_STATUS[12].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS13 AON__IRQSTEERM7.CHN_STATUS[13].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS14 AON__IRQSTEERM7.CHN_STATUS[14].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS15 AON__IRQSTEERM7.CHN_STATUS[15].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS16 AON__IRQSTEERM7.CHN_STATUS[16].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS17 AON__IRQSTEERM7.CHN_STATUS[17].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS18 AON__IRQSTEERM7.CHN_STATUS[18].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_STATUS19 AON__IRQSTEERM7.CHN_STATUS[19].R /* Channel n Interrupt Status Register */
#define AON__IRQSTEERM7_CHn_MINTDIS AON__IRQSTEERM7.CHN_MINTDIS.R /* Channel n Master Interrupt Disable Register */
#define AON__IRQSTEERM7_CHn_MSTRSTAT AON__IRQSTEERM7.CHN_MSTRSTAT.R /* Channel n Master Status Register */

/* AON_LPI2C */
#define AON__LPI2C1_VERID    AON__LPI2C1.VERID.R           /* Version ID */
#define AON__LPI2C1_PARAM    AON__LPI2C1.PARAM.R           /* Parameter */
#define AON__LPI2C1_MCR      AON__LPI2C1.MCR.R             /* Controller Control */
#define AON__LPI2C1_MSR      AON__LPI2C1.MSR.R             /* Controller Status */
#define AON__LPI2C1_MIER     AON__LPI2C1.MIER.R            /* Controller Interrupt Enable */
#define AON__LPI2C1_MDER     AON__LPI2C1.MDER.R            /* Controller DMA Enable */
#define AON__LPI2C1_MCFGR0   AON__LPI2C1.MCFGR0.R          /* Controller Configuration 0 */
#define AON__LPI2C1_MCFGR1   AON__LPI2C1.MCFGR1.R          /* Controller Configuration 1 */
#define AON__LPI2C1_MCFGR2   AON__LPI2C1.MCFGR2.R          /* Controller Configuration 2 */
#define AON__LPI2C1_MCFGR3   AON__LPI2C1.MCFGR3.R          /* Controller Configuration 3 */
#define AON__LPI2C1_MDMR     AON__LPI2C1.MDMR.R            /* Controller Data Match */
#define AON__LPI2C1_MCCR0    AON__LPI2C1.MCCR0.R           /* Controller Clock Configuration 0 */
#define AON__LPI2C1_MCCR1    AON__LPI2C1.MCCR1.R           /* Controller Clock Configuration 1 */
#define AON__LPI2C1_MFCR     AON__LPI2C1.MFCR.R            /* Controller FIFO Control */
#define AON__LPI2C1_MFSR     AON__LPI2C1.MFSR.R            /* Controller FIFO Status */
#define AON__LPI2C1_MTDR     AON__LPI2C1.MTDR.R            /* Controller Transmit Data */
#define AON__LPI2C1_MRDR     AON__LPI2C1.MRDR.R            /* Controller Receive Data */
#define AON__LPI2C1_MRDROR   AON__LPI2C1.MRDROR.R          /* Controller Receive Data Read Only */
#define AON__LPI2C1_SCR      AON__LPI2C1.SCR.R             /* Target Control */
#define AON__LPI2C1_SSR      AON__LPI2C1.SSR.R             /* Target Status */
#define AON__LPI2C1_SIER     AON__LPI2C1.SIER.R            /* Target Interrupt Enable */
#define AON__LPI2C1_SDER     AON__LPI2C1.SDER.R            /* Target DMA Enable */
#define AON__LPI2C1_SCFGR0   AON__LPI2C1.SCFGR0.R          /* Target Configuration 0 */
#define AON__LPI2C1_SCFGR1   AON__LPI2C1.SCFGR1.R          /* Target Configuration 1 */
#define AON__LPI2C1_SCFGR2   AON__LPI2C1.SCFGR2.R          /* Target Configuration 2 */
#define AON__LPI2C1_SAMR     AON__LPI2C1.SAMR.R            /* Target Address Match */
#define AON__LPI2C1_SASR     AON__LPI2C1.SASR.R            /* Target Address Status */
#define AON__LPI2C1_STAR     AON__LPI2C1.STAR.R            /* Target Transmit ACK */
#define AON__LPI2C1_STDR     AON__LPI2C1.STDR.R            /* Target Transmit Data */
#define AON__LPI2C1_SRDR     AON__LPI2C1.SRDR.R            /* Target Receive Data */
#define AON__LPI2C1_SRDROR   AON__LPI2C1.SRDROR.R          /* Target Receive Data Read Only */
#define AON__LPI2C1_MTCBR0   AON__LPI2C1.MTCBR[0].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR1   AON__LPI2C1.MTCBR[1].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR2   AON__LPI2C1.MTCBR[2].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR3   AON__LPI2C1.MTCBR[3].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR4   AON__LPI2C1.MTCBR[4].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR5   AON__LPI2C1.MTCBR[5].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR6   AON__LPI2C1.MTCBR[6].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR7   AON__LPI2C1.MTCBR[7].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR8   AON__LPI2C1.MTCBR[8].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR9   AON__LPI2C1.MTCBR[9].R        /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR10  AON__LPI2C1.MTCBR[10].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR11  AON__LPI2C1.MTCBR[11].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR12  AON__LPI2C1.MTCBR[12].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR13  AON__LPI2C1.MTCBR[13].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR14  AON__LPI2C1.MTCBR[14].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR15  AON__LPI2C1.MTCBR[15].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR16  AON__LPI2C1.MTCBR[16].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR17  AON__LPI2C1.MTCBR[17].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR18  AON__LPI2C1.MTCBR[18].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR19  AON__LPI2C1.MTCBR[19].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR20  AON__LPI2C1.MTCBR[20].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR21  AON__LPI2C1.MTCBR[21].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR22  AON__LPI2C1.MTCBR[22].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR23  AON__LPI2C1.MTCBR[23].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR24  AON__LPI2C1.MTCBR[24].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR25  AON__LPI2C1.MTCBR[25].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR26  AON__LPI2C1.MTCBR[26].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR27  AON__LPI2C1.MTCBR[27].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR28  AON__LPI2C1.MTCBR[28].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR29  AON__LPI2C1.MTCBR[29].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR30  AON__LPI2C1.MTCBR[30].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR31  AON__LPI2C1.MTCBR[31].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR32  AON__LPI2C1.MTCBR[32].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR33  AON__LPI2C1.MTCBR[33].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR34  AON__LPI2C1.MTCBR[34].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR35  AON__LPI2C1.MTCBR[35].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR36  AON__LPI2C1.MTCBR[36].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR37  AON__LPI2C1.MTCBR[37].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR38  AON__LPI2C1.MTCBR[38].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR39  AON__LPI2C1.MTCBR[39].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR40  AON__LPI2C1.MTCBR[40].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR41  AON__LPI2C1.MTCBR[41].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR42  AON__LPI2C1.MTCBR[42].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR43  AON__LPI2C1.MTCBR[43].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR44  AON__LPI2C1.MTCBR[44].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR45  AON__LPI2C1.MTCBR[45].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR46  AON__LPI2C1.MTCBR[46].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR47  AON__LPI2C1.MTCBR[47].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR48  AON__LPI2C1.MTCBR[48].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR49  AON__LPI2C1.MTCBR[49].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR50  AON__LPI2C1.MTCBR[50].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR51  AON__LPI2C1.MTCBR[51].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR52  AON__LPI2C1.MTCBR[52].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR53  AON__LPI2C1.MTCBR[53].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR54  AON__LPI2C1.MTCBR[54].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR55  AON__LPI2C1.MTCBR[55].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR56  AON__LPI2C1.MTCBR[56].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR57  AON__LPI2C1.MTCBR[57].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR58  AON__LPI2C1.MTCBR[58].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR59  AON__LPI2C1.MTCBR[59].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR60  AON__LPI2C1.MTCBR[60].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR61  AON__LPI2C1.MTCBR[61].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR62  AON__LPI2C1.MTCBR[62].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR63  AON__LPI2C1.MTCBR[63].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR64  AON__LPI2C1.MTCBR[64].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR65  AON__LPI2C1.MTCBR[65].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR66  AON__LPI2C1.MTCBR[66].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR67  AON__LPI2C1.MTCBR[67].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR68  AON__LPI2C1.MTCBR[68].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR69  AON__LPI2C1.MTCBR[69].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR70  AON__LPI2C1.MTCBR[70].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR71  AON__LPI2C1.MTCBR[71].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR72  AON__LPI2C1.MTCBR[72].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR73  AON__LPI2C1.MTCBR[73].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR74  AON__LPI2C1.MTCBR[74].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR75  AON__LPI2C1.MTCBR[75].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR76  AON__LPI2C1.MTCBR[76].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR77  AON__LPI2C1.MTCBR[77].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR78  AON__LPI2C1.MTCBR[78].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR79  AON__LPI2C1.MTCBR[79].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR80  AON__LPI2C1.MTCBR[80].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR81  AON__LPI2C1.MTCBR[81].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR82  AON__LPI2C1.MTCBR[82].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR83  AON__LPI2C1.MTCBR[83].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR84  AON__LPI2C1.MTCBR[84].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR85  AON__LPI2C1.MTCBR[85].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR86  AON__LPI2C1.MTCBR[86].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR87  AON__LPI2C1.MTCBR[87].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR88  AON__LPI2C1.MTCBR[88].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR89  AON__LPI2C1.MTCBR[89].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR90  AON__LPI2C1.MTCBR[90].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR91  AON__LPI2C1.MTCBR[91].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR92  AON__LPI2C1.MTCBR[92].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR93  AON__LPI2C1.MTCBR[93].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR94  AON__LPI2C1.MTCBR[94].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR95  AON__LPI2C1.MTCBR[95].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR96  AON__LPI2C1.MTCBR[96].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR97  AON__LPI2C1.MTCBR[97].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR98  AON__LPI2C1.MTCBR[98].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR99  AON__LPI2C1.MTCBR[99].R       /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR100 AON__LPI2C1.MTCBR[100].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR101 AON__LPI2C1.MTCBR[101].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR102 AON__LPI2C1.MTCBR[102].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR103 AON__LPI2C1.MTCBR[103].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR104 AON__LPI2C1.MTCBR[104].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR105 AON__LPI2C1.MTCBR[105].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR106 AON__LPI2C1.MTCBR[106].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR107 AON__LPI2C1.MTCBR[107].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR108 AON__LPI2C1.MTCBR[108].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR109 AON__LPI2C1.MTCBR[109].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR110 AON__LPI2C1.MTCBR[110].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR111 AON__LPI2C1.MTCBR[111].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR112 AON__LPI2C1.MTCBR[112].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR113 AON__LPI2C1.MTCBR[113].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR114 AON__LPI2C1.MTCBR[114].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR115 AON__LPI2C1.MTCBR[115].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR116 AON__LPI2C1.MTCBR[116].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR117 AON__LPI2C1.MTCBR[117].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR118 AON__LPI2C1.MTCBR[118].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR119 AON__LPI2C1.MTCBR[119].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR120 AON__LPI2C1.MTCBR[120].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR121 AON__LPI2C1.MTCBR[121].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR122 AON__LPI2C1.MTCBR[122].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR123 AON__LPI2C1.MTCBR[123].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR124 AON__LPI2C1.MTCBR[124].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR125 AON__LPI2C1.MTCBR[125].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR126 AON__LPI2C1.MTCBR[126].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTCBR127 AON__LPI2C1.MTCBR[127].R      /* Controller Transmit Command Burst */
#define AON__LPI2C1_MTDBR0   AON__LPI2C1.MTDBR[0].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR1   AON__LPI2C1.MTDBR[1].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR2   AON__LPI2C1.MTDBR[2].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR3   AON__LPI2C1.MTDBR[3].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR4   AON__LPI2C1.MTDBR[4].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR5   AON__LPI2C1.MTDBR[5].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR6   AON__LPI2C1.MTDBR[6].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR7   AON__LPI2C1.MTDBR[7].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR8   AON__LPI2C1.MTDBR[8].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR9   AON__LPI2C1.MTDBR[9].R        /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR10  AON__LPI2C1.MTDBR[10].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR11  AON__LPI2C1.MTDBR[11].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR12  AON__LPI2C1.MTDBR[12].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR13  AON__LPI2C1.MTDBR[13].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR14  AON__LPI2C1.MTDBR[14].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR15  AON__LPI2C1.MTDBR[15].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR16  AON__LPI2C1.MTDBR[16].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR17  AON__LPI2C1.MTDBR[17].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR18  AON__LPI2C1.MTDBR[18].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR19  AON__LPI2C1.MTDBR[19].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR20  AON__LPI2C1.MTDBR[20].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR21  AON__LPI2C1.MTDBR[21].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR22  AON__LPI2C1.MTDBR[22].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR23  AON__LPI2C1.MTDBR[23].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR24  AON__LPI2C1.MTDBR[24].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR25  AON__LPI2C1.MTDBR[25].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR26  AON__LPI2C1.MTDBR[26].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR27  AON__LPI2C1.MTDBR[27].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR28  AON__LPI2C1.MTDBR[28].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR29  AON__LPI2C1.MTDBR[29].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR30  AON__LPI2C1.MTDBR[30].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR31  AON__LPI2C1.MTDBR[31].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR32  AON__LPI2C1.MTDBR[32].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR33  AON__LPI2C1.MTDBR[33].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR34  AON__LPI2C1.MTDBR[34].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR35  AON__LPI2C1.MTDBR[35].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR36  AON__LPI2C1.MTDBR[36].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR37  AON__LPI2C1.MTDBR[37].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR38  AON__LPI2C1.MTDBR[38].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR39  AON__LPI2C1.MTDBR[39].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR40  AON__LPI2C1.MTDBR[40].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR41  AON__LPI2C1.MTDBR[41].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR42  AON__LPI2C1.MTDBR[42].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR43  AON__LPI2C1.MTDBR[43].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR44  AON__LPI2C1.MTDBR[44].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR45  AON__LPI2C1.MTDBR[45].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR46  AON__LPI2C1.MTDBR[46].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR47  AON__LPI2C1.MTDBR[47].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR48  AON__LPI2C1.MTDBR[48].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR49  AON__LPI2C1.MTDBR[49].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR50  AON__LPI2C1.MTDBR[50].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR51  AON__LPI2C1.MTDBR[51].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR52  AON__LPI2C1.MTDBR[52].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR53  AON__LPI2C1.MTDBR[53].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR54  AON__LPI2C1.MTDBR[54].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR55  AON__LPI2C1.MTDBR[55].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR56  AON__LPI2C1.MTDBR[56].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR57  AON__LPI2C1.MTDBR[57].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR58  AON__LPI2C1.MTDBR[58].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR59  AON__LPI2C1.MTDBR[59].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR60  AON__LPI2C1.MTDBR[60].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR61  AON__LPI2C1.MTDBR[61].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR62  AON__LPI2C1.MTDBR[62].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR63  AON__LPI2C1.MTDBR[63].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR64  AON__LPI2C1.MTDBR[64].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR65  AON__LPI2C1.MTDBR[65].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR66  AON__LPI2C1.MTDBR[66].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR67  AON__LPI2C1.MTDBR[67].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR68  AON__LPI2C1.MTDBR[68].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR69  AON__LPI2C1.MTDBR[69].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR70  AON__LPI2C1.MTDBR[70].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR71  AON__LPI2C1.MTDBR[71].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR72  AON__LPI2C1.MTDBR[72].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR73  AON__LPI2C1.MTDBR[73].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR74  AON__LPI2C1.MTDBR[74].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR75  AON__LPI2C1.MTDBR[75].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR76  AON__LPI2C1.MTDBR[76].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR77  AON__LPI2C1.MTDBR[77].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR78  AON__LPI2C1.MTDBR[78].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR79  AON__LPI2C1.MTDBR[79].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR80  AON__LPI2C1.MTDBR[80].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR81  AON__LPI2C1.MTDBR[81].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR82  AON__LPI2C1.MTDBR[82].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR83  AON__LPI2C1.MTDBR[83].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR84  AON__LPI2C1.MTDBR[84].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR85  AON__LPI2C1.MTDBR[85].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR86  AON__LPI2C1.MTDBR[86].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR87  AON__LPI2C1.MTDBR[87].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR88  AON__LPI2C1.MTDBR[88].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR89  AON__LPI2C1.MTDBR[89].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR90  AON__LPI2C1.MTDBR[90].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR91  AON__LPI2C1.MTDBR[91].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR92  AON__LPI2C1.MTDBR[92].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR93  AON__LPI2C1.MTDBR[93].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR94  AON__LPI2C1.MTDBR[94].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR95  AON__LPI2C1.MTDBR[95].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR96  AON__LPI2C1.MTDBR[96].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR97  AON__LPI2C1.MTDBR[97].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR98  AON__LPI2C1.MTDBR[98].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR99  AON__LPI2C1.MTDBR[99].R       /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR100 AON__LPI2C1.MTDBR[100].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR101 AON__LPI2C1.MTDBR[101].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR102 AON__LPI2C1.MTDBR[102].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR103 AON__LPI2C1.MTDBR[103].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR104 AON__LPI2C1.MTDBR[104].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR105 AON__LPI2C1.MTDBR[105].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR106 AON__LPI2C1.MTDBR[106].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR107 AON__LPI2C1.MTDBR[107].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR108 AON__LPI2C1.MTDBR[108].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR109 AON__LPI2C1.MTDBR[109].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR110 AON__LPI2C1.MTDBR[110].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR111 AON__LPI2C1.MTDBR[111].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR112 AON__LPI2C1.MTDBR[112].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR113 AON__LPI2C1.MTDBR[113].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR114 AON__LPI2C1.MTDBR[114].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR115 AON__LPI2C1.MTDBR[115].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR116 AON__LPI2C1.MTDBR[116].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR117 AON__LPI2C1.MTDBR[117].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR118 AON__LPI2C1.MTDBR[118].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR119 AON__LPI2C1.MTDBR[119].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR120 AON__LPI2C1.MTDBR[120].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR121 AON__LPI2C1.MTDBR[121].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR122 AON__LPI2C1.MTDBR[122].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR123 AON__LPI2C1.MTDBR[123].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR124 AON__LPI2C1.MTDBR[124].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR125 AON__LPI2C1.MTDBR[125].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR126 AON__LPI2C1.MTDBR[126].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR127 AON__LPI2C1.MTDBR[127].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR128 AON__LPI2C1.MTDBR[128].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR129 AON__LPI2C1.MTDBR[129].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR130 AON__LPI2C1.MTDBR[130].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR131 AON__LPI2C1.MTDBR[131].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR132 AON__LPI2C1.MTDBR[132].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR133 AON__LPI2C1.MTDBR[133].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR134 AON__LPI2C1.MTDBR[134].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR135 AON__LPI2C1.MTDBR[135].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR136 AON__LPI2C1.MTDBR[136].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR137 AON__LPI2C1.MTDBR[137].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR138 AON__LPI2C1.MTDBR[138].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR139 AON__LPI2C1.MTDBR[139].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR140 AON__LPI2C1.MTDBR[140].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR141 AON__LPI2C1.MTDBR[141].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR142 AON__LPI2C1.MTDBR[142].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR143 AON__LPI2C1.MTDBR[143].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR144 AON__LPI2C1.MTDBR[144].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR145 AON__LPI2C1.MTDBR[145].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR146 AON__LPI2C1.MTDBR[146].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR147 AON__LPI2C1.MTDBR[147].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR148 AON__LPI2C1.MTDBR[148].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR149 AON__LPI2C1.MTDBR[149].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR150 AON__LPI2C1.MTDBR[150].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR151 AON__LPI2C1.MTDBR[151].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR152 AON__LPI2C1.MTDBR[152].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR153 AON__LPI2C1.MTDBR[153].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR154 AON__LPI2C1.MTDBR[154].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR155 AON__LPI2C1.MTDBR[155].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR156 AON__LPI2C1.MTDBR[156].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR157 AON__LPI2C1.MTDBR[157].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR158 AON__LPI2C1.MTDBR[158].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR159 AON__LPI2C1.MTDBR[159].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR160 AON__LPI2C1.MTDBR[160].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR161 AON__LPI2C1.MTDBR[161].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR162 AON__LPI2C1.MTDBR[162].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR163 AON__LPI2C1.MTDBR[163].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR164 AON__LPI2C1.MTDBR[164].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR165 AON__LPI2C1.MTDBR[165].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR166 AON__LPI2C1.MTDBR[166].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR167 AON__LPI2C1.MTDBR[167].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR168 AON__LPI2C1.MTDBR[168].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR169 AON__LPI2C1.MTDBR[169].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR170 AON__LPI2C1.MTDBR[170].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR171 AON__LPI2C1.MTDBR[171].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR172 AON__LPI2C1.MTDBR[172].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR173 AON__LPI2C1.MTDBR[173].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR174 AON__LPI2C1.MTDBR[174].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR175 AON__LPI2C1.MTDBR[175].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR176 AON__LPI2C1.MTDBR[176].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR177 AON__LPI2C1.MTDBR[177].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR178 AON__LPI2C1.MTDBR[178].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR179 AON__LPI2C1.MTDBR[179].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR180 AON__LPI2C1.MTDBR[180].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR181 AON__LPI2C1.MTDBR[181].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR182 AON__LPI2C1.MTDBR[182].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR183 AON__LPI2C1.MTDBR[183].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR184 AON__LPI2C1.MTDBR[184].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR185 AON__LPI2C1.MTDBR[185].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR186 AON__LPI2C1.MTDBR[186].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR187 AON__LPI2C1.MTDBR[187].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR188 AON__LPI2C1.MTDBR[188].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR189 AON__LPI2C1.MTDBR[189].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR190 AON__LPI2C1.MTDBR[190].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR191 AON__LPI2C1.MTDBR[191].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR192 AON__LPI2C1.MTDBR[192].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR193 AON__LPI2C1.MTDBR[193].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR194 AON__LPI2C1.MTDBR[194].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR195 AON__LPI2C1.MTDBR[195].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR196 AON__LPI2C1.MTDBR[196].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR197 AON__LPI2C1.MTDBR[197].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR198 AON__LPI2C1.MTDBR[198].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR199 AON__LPI2C1.MTDBR[199].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR200 AON__LPI2C1.MTDBR[200].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR201 AON__LPI2C1.MTDBR[201].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR202 AON__LPI2C1.MTDBR[202].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR203 AON__LPI2C1.MTDBR[203].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR204 AON__LPI2C1.MTDBR[204].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR205 AON__LPI2C1.MTDBR[205].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR206 AON__LPI2C1.MTDBR[206].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR207 AON__LPI2C1.MTDBR[207].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR208 AON__LPI2C1.MTDBR[208].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR209 AON__LPI2C1.MTDBR[209].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR210 AON__LPI2C1.MTDBR[210].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR211 AON__LPI2C1.MTDBR[211].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR212 AON__LPI2C1.MTDBR[212].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR213 AON__LPI2C1.MTDBR[213].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR214 AON__LPI2C1.MTDBR[214].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR215 AON__LPI2C1.MTDBR[215].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR216 AON__LPI2C1.MTDBR[216].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR217 AON__LPI2C1.MTDBR[217].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR218 AON__LPI2C1.MTDBR[218].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR219 AON__LPI2C1.MTDBR[219].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR220 AON__LPI2C1.MTDBR[220].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR221 AON__LPI2C1.MTDBR[221].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR222 AON__LPI2C1.MTDBR[222].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR223 AON__LPI2C1.MTDBR[223].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR224 AON__LPI2C1.MTDBR[224].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR225 AON__LPI2C1.MTDBR[225].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR226 AON__LPI2C1.MTDBR[226].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR227 AON__LPI2C1.MTDBR[227].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR228 AON__LPI2C1.MTDBR[228].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR229 AON__LPI2C1.MTDBR[229].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR230 AON__LPI2C1.MTDBR[230].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR231 AON__LPI2C1.MTDBR[231].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR232 AON__LPI2C1.MTDBR[232].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR233 AON__LPI2C1.MTDBR[233].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR234 AON__LPI2C1.MTDBR[234].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR235 AON__LPI2C1.MTDBR[235].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR236 AON__LPI2C1.MTDBR[236].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR237 AON__LPI2C1.MTDBR[237].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR238 AON__LPI2C1.MTDBR[238].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR239 AON__LPI2C1.MTDBR[239].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR240 AON__LPI2C1.MTDBR[240].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR241 AON__LPI2C1.MTDBR[241].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR242 AON__LPI2C1.MTDBR[242].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR243 AON__LPI2C1.MTDBR[243].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR244 AON__LPI2C1.MTDBR[244].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR245 AON__LPI2C1.MTDBR[245].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR246 AON__LPI2C1.MTDBR[246].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR247 AON__LPI2C1.MTDBR[247].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR248 AON__LPI2C1.MTDBR[248].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR249 AON__LPI2C1.MTDBR[249].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR250 AON__LPI2C1.MTDBR[250].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR251 AON__LPI2C1.MTDBR[251].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR252 AON__LPI2C1.MTDBR[252].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR253 AON__LPI2C1.MTDBR[253].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR254 AON__LPI2C1.MTDBR[254].R      /* Transmit Data Burst */
#define AON__LPI2C1_MTDBR255 AON__LPI2C1.MTDBR[255].R      /* Transmit Data Burst */

#define AON__LPI2C2_VERID    AON__LPI2C2.VERID.R           /* Version ID */
#define AON__LPI2C2_PARAM    AON__LPI2C2.PARAM.R           /* Parameter */
#define AON__LPI2C2_MCR      AON__LPI2C2.MCR.R             /* Controller Control */
#define AON__LPI2C2_MSR      AON__LPI2C2.MSR.R             /* Controller Status */
#define AON__LPI2C2_MIER     AON__LPI2C2.MIER.R            /* Controller Interrupt Enable */
#define AON__LPI2C2_MDER     AON__LPI2C2.MDER.R            /* Controller DMA Enable */
#define AON__LPI2C2_MCFGR0   AON__LPI2C2.MCFGR0.R          /* Controller Configuration 0 */
#define AON__LPI2C2_MCFGR1   AON__LPI2C2.MCFGR1.R          /* Controller Configuration 1 */
#define AON__LPI2C2_MCFGR2   AON__LPI2C2.MCFGR2.R          /* Controller Configuration 2 */
#define AON__LPI2C2_MCFGR3   AON__LPI2C2.MCFGR3.R          /* Controller Configuration 3 */
#define AON__LPI2C2_MDMR     AON__LPI2C2.MDMR.R            /* Controller Data Match */
#define AON__LPI2C2_MCCR0    AON__LPI2C2.MCCR0.R           /* Controller Clock Configuration 0 */
#define AON__LPI2C2_MCCR1    AON__LPI2C2.MCCR1.R           /* Controller Clock Configuration 1 */
#define AON__LPI2C2_MFCR     AON__LPI2C2.MFCR.R            /* Controller FIFO Control */
#define AON__LPI2C2_MFSR     AON__LPI2C2.MFSR.R            /* Controller FIFO Status */
#define AON__LPI2C2_MTDR     AON__LPI2C2.MTDR.R            /* Controller Transmit Data */
#define AON__LPI2C2_MRDR     AON__LPI2C2.MRDR.R            /* Controller Receive Data */
#define AON__LPI2C2_MRDROR   AON__LPI2C2.MRDROR.R          /* Controller Receive Data Read Only */
#define AON__LPI2C2_SCR      AON__LPI2C2.SCR.R             /* Target Control */
#define AON__LPI2C2_SSR      AON__LPI2C2.SSR.R             /* Target Status */
#define AON__LPI2C2_SIER     AON__LPI2C2.SIER.R            /* Target Interrupt Enable */
#define AON__LPI2C2_SDER     AON__LPI2C2.SDER.R            /* Target DMA Enable */
#define AON__LPI2C2_SCFGR0   AON__LPI2C2.SCFGR0.R          /* Target Configuration 0 */
#define AON__LPI2C2_SCFGR1   AON__LPI2C2.SCFGR1.R          /* Target Configuration 1 */
#define AON__LPI2C2_SCFGR2   AON__LPI2C2.SCFGR2.R          /* Target Configuration 2 */
#define AON__LPI2C2_SAMR     AON__LPI2C2.SAMR.R            /* Target Address Match */
#define AON__LPI2C2_SASR     AON__LPI2C2.SASR.R            /* Target Address Status */
#define AON__LPI2C2_STAR     AON__LPI2C2.STAR.R            /* Target Transmit ACK */
#define AON__LPI2C2_STDR     AON__LPI2C2.STDR.R            /* Target Transmit Data */
#define AON__LPI2C2_SRDR     AON__LPI2C2.SRDR.R            /* Target Receive Data */
#define AON__LPI2C2_SRDROR   AON__LPI2C2.SRDROR.R          /* Target Receive Data Read Only */
#define AON__LPI2C2_MTCBR0   AON__LPI2C2.MTCBR[0].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR1   AON__LPI2C2.MTCBR[1].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR2   AON__LPI2C2.MTCBR[2].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR3   AON__LPI2C2.MTCBR[3].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR4   AON__LPI2C2.MTCBR[4].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR5   AON__LPI2C2.MTCBR[5].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR6   AON__LPI2C2.MTCBR[6].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR7   AON__LPI2C2.MTCBR[7].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR8   AON__LPI2C2.MTCBR[8].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR9   AON__LPI2C2.MTCBR[9].R        /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR10  AON__LPI2C2.MTCBR[10].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR11  AON__LPI2C2.MTCBR[11].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR12  AON__LPI2C2.MTCBR[12].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR13  AON__LPI2C2.MTCBR[13].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR14  AON__LPI2C2.MTCBR[14].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR15  AON__LPI2C2.MTCBR[15].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR16  AON__LPI2C2.MTCBR[16].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR17  AON__LPI2C2.MTCBR[17].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR18  AON__LPI2C2.MTCBR[18].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR19  AON__LPI2C2.MTCBR[19].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR20  AON__LPI2C2.MTCBR[20].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR21  AON__LPI2C2.MTCBR[21].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR22  AON__LPI2C2.MTCBR[22].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR23  AON__LPI2C2.MTCBR[23].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR24  AON__LPI2C2.MTCBR[24].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR25  AON__LPI2C2.MTCBR[25].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR26  AON__LPI2C2.MTCBR[26].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR27  AON__LPI2C2.MTCBR[27].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR28  AON__LPI2C2.MTCBR[28].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR29  AON__LPI2C2.MTCBR[29].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR30  AON__LPI2C2.MTCBR[30].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR31  AON__LPI2C2.MTCBR[31].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR32  AON__LPI2C2.MTCBR[32].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR33  AON__LPI2C2.MTCBR[33].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR34  AON__LPI2C2.MTCBR[34].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR35  AON__LPI2C2.MTCBR[35].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR36  AON__LPI2C2.MTCBR[36].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR37  AON__LPI2C2.MTCBR[37].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR38  AON__LPI2C2.MTCBR[38].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR39  AON__LPI2C2.MTCBR[39].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR40  AON__LPI2C2.MTCBR[40].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR41  AON__LPI2C2.MTCBR[41].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR42  AON__LPI2C2.MTCBR[42].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR43  AON__LPI2C2.MTCBR[43].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR44  AON__LPI2C2.MTCBR[44].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR45  AON__LPI2C2.MTCBR[45].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR46  AON__LPI2C2.MTCBR[46].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR47  AON__LPI2C2.MTCBR[47].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR48  AON__LPI2C2.MTCBR[48].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR49  AON__LPI2C2.MTCBR[49].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR50  AON__LPI2C2.MTCBR[50].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR51  AON__LPI2C2.MTCBR[51].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR52  AON__LPI2C2.MTCBR[52].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR53  AON__LPI2C2.MTCBR[53].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR54  AON__LPI2C2.MTCBR[54].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR55  AON__LPI2C2.MTCBR[55].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR56  AON__LPI2C2.MTCBR[56].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR57  AON__LPI2C2.MTCBR[57].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR58  AON__LPI2C2.MTCBR[58].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR59  AON__LPI2C2.MTCBR[59].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR60  AON__LPI2C2.MTCBR[60].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR61  AON__LPI2C2.MTCBR[61].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR62  AON__LPI2C2.MTCBR[62].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR63  AON__LPI2C2.MTCBR[63].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR64  AON__LPI2C2.MTCBR[64].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR65  AON__LPI2C2.MTCBR[65].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR66  AON__LPI2C2.MTCBR[66].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR67  AON__LPI2C2.MTCBR[67].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR68  AON__LPI2C2.MTCBR[68].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR69  AON__LPI2C2.MTCBR[69].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR70  AON__LPI2C2.MTCBR[70].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR71  AON__LPI2C2.MTCBR[71].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR72  AON__LPI2C2.MTCBR[72].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR73  AON__LPI2C2.MTCBR[73].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR74  AON__LPI2C2.MTCBR[74].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR75  AON__LPI2C2.MTCBR[75].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR76  AON__LPI2C2.MTCBR[76].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR77  AON__LPI2C2.MTCBR[77].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR78  AON__LPI2C2.MTCBR[78].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR79  AON__LPI2C2.MTCBR[79].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR80  AON__LPI2C2.MTCBR[80].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR81  AON__LPI2C2.MTCBR[81].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR82  AON__LPI2C2.MTCBR[82].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR83  AON__LPI2C2.MTCBR[83].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR84  AON__LPI2C2.MTCBR[84].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR85  AON__LPI2C2.MTCBR[85].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR86  AON__LPI2C2.MTCBR[86].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR87  AON__LPI2C2.MTCBR[87].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR88  AON__LPI2C2.MTCBR[88].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR89  AON__LPI2C2.MTCBR[89].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR90  AON__LPI2C2.MTCBR[90].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR91  AON__LPI2C2.MTCBR[91].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR92  AON__LPI2C2.MTCBR[92].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR93  AON__LPI2C2.MTCBR[93].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR94  AON__LPI2C2.MTCBR[94].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR95  AON__LPI2C2.MTCBR[95].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR96  AON__LPI2C2.MTCBR[96].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR97  AON__LPI2C2.MTCBR[97].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR98  AON__LPI2C2.MTCBR[98].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR99  AON__LPI2C2.MTCBR[99].R       /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR100 AON__LPI2C2.MTCBR[100].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR101 AON__LPI2C2.MTCBR[101].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR102 AON__LPI2C2.MTCBR[102].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR103 AON__LPI2C2.MTCBR[103].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR104 AON__LPI2C2.MTCBR[104].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR105 AON__LPI2C2.MTCBR[105].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR106 AON__LPI2C2.MTCBR[106].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR107 AON__LPI2C2.MTCBR[107].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR108 AON__LPI2C2.MTCBR[108].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR109 AON__LPI2C2.MTCBR[109].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR110 AON__LPI2C2.MTCBR[110].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR111 AON__LPI2C2.MTCBR[111].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR112 AON__LPI2C2.MTCBR[112].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR113 AON__LPI2C2.MTCBR[113].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR114 AON__LPI2C2.MTCBR[114].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR115 AON__LPI2C2.MTCBR[115].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR116 AON__LPI2C2.MTCBR[116].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR117 AON__LPI2C2.MTCBR[117].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR118 AON__LPI2C2.MTCBR[118].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR119 AON__LPI2C2.MTCBR[119].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR120 AON__LPI2C2.MTCBR[120].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR121 AON__LPI2C2.MTCBR[121].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR122 AON__LPI2C2.MTCBR[122].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR123 AON__LPI2C2.MTCBR[123].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR124 AON__LPI2C2.MTCBR[124].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR125 AON__LPI2C2.MTCBR[125].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR126 AON__LPI2C2.MTCBR[126].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTCBR127 AON__LPI2C2.MTCBR[127].R      /* Controller Transmit Command Burst */
#define AON__LPI2C2_MTDBR0   AON__LPI2C2.MTDBR[0].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR1   AON__LPI2C2.MTDBR[1].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR2   AON__LPI2C2.MTDBR[2].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR3   AON__LPI2C2.MTDBR[3].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR4   AON__LPI2C2.MTDBR[4].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR5   AON__LPI2C2.MTDBR[5].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR6   AON__LPI2C2.MTDBR[6].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR7   AON__LPI2C2.MTDBR[7].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR8   AON__LPI2C2.MTDBR[8].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR9   AON__LPI2C2.MTDBR[9].R        /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR10  AON__LPI2C2.MTDBR[10].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR11  AON__LPI2C2.MTDBR[11].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR12  AON__LPI2C2.MTDBR[12].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR13  AON__LPI2C2.MTDBR[13].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR14  AON__LPI2C2.MTDBR[14].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR15  AON__LPI2C2.MTDBR[15].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR16  AON__LPI2C2.MTDBR[16].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR17  AON__LPI2C2.MTDBR[17].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR18  AON__LPI2C2.MTDBR[18].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR19  AON__LPI2C2.MTDBR[19].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR20  AON__LPI2C2.MTDBR[20].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR21  AON__LPI2C2.MTDBR[21].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR22  AON__LPI2C2.MTDBR[22].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR23  AON__LPI2C2.MTDBR[23].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR24  AON__LPI2C2.MTDBR[24].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR25  AON__LPI2C2.MTDBR[25].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR26  AON__LPI2C2.MTDBR[26].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR27  AON__LPI2C2.MTDBR[27].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR28  AON__LPI2C2.MTDBR[28].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR29  AON__LPI2C2.MTDBR[29].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR30  AON__LPI2C2.MTDBR[30].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR31  AON__LPI2C2.MTDBR[31].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR32  AON__LPI2C2.MTDBR[32].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR33  AON__LPI2C2.MTDBR[33].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR34  AON__LPI2C2.MTDBR[34].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR35  AON__LPI2C2.MTDBR[35].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR36  AON__LPI2C2.MTDBR[36].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR37  AON__LPI2C2.MTDBR[37].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR38  AON__LPI2C2.MTDBR[38].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR39  AON__LPI2C2.MTDBR[39].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR40  AON__LPI2C2.MTDBR[40].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR41  AON__LPI2C2.MTDBR[41].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR42  AON__LPI2C2.MTDBR[42].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR43  AON__LPI2C2.MTDBR[43].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR44  AON__LPI2C2.MTDBR[44].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR45  AON__LPI2C2.MTDBR[45].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR46  AON__LPI2C2.MTDBR[46].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR47  AON__LPI2C2.MTDBR[47].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR48  AON__LPI2C2.MTDBR[48].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR49  AON__LPI2C2.MTDBR[49].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR50  AON__LPI2C2.MTDBR[50].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR51  AON__LPI2C2.MTDBR[51].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR52  AON__LPI2C2.MTDBR[52].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR53  AON__LPI2C2.MTDBR[53].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR54  AON__LPI2C2.MTDBR[54].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR55  AON__LPI2C2.MTDBR[55].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR56  AON__LPI2C2.MTDBR[56].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR57  AON__LPI2C2.MTDBR[57].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR58  AON__LPI2C2.MTDBR[58].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR59  AON__LPI2C2.MTDBR[59].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR60  AON__LPI2C2.MTDBR[60].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR61  AON__LPI2C2.MTDBR[61].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR62  AON__LPI2C2.MTDBR[62].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR63  AON__LPI2C2.MTDBR[63].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR64  AON__LPI2C2.MTDBR[64].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR65  AON__LPI2C2.MTDBR[65].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR66  AON__LPI2C2.MTDBR[66].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR67  AON__LPI2C2.MTDBR[67].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR68  AON__LPI2C2.MTDBR[68].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR69  AON__LPI2C2.MTDBR[69].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR70  AON__LPI2C2.MTDBR[70].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR71  AON__LPI2C2.MTDBR[71].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR72  AON__LPI2C2.MTDBR[72].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR73  AON__LPI2C2.MTDBR[73].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR74  AON__LPI2C2.MTDBR[74].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR75  AON__LPI2C2.MTDBR[75].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR76  AON__LPI2C2.MTDBR[76].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR77  AON__LPI2C2.MTDBR[77].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR78  AON__LPI2C2.MTDBR[78].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR79  AON__LPI2C2.MTDBR[79].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR80  AON__LPI2C2.MTDBR[80].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR81  AON__LPI2C2.MTDBR[81].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR82  AON__LPI2C2.MTDBR[82].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR83  AON__LPI2C2.MTDBR[83].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR84  AON__LPI2C2.MTDBR[84].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR85  AON__LPI2C2.MTDBR[85].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR86  AON__LPI2C2.MTDBR[86].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR87  AON__LPI2C2.MTDBR[87].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR88  AON__LPI2C2.MTDBR[88].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR89  AON__LPI2C2.MTDBR[89].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR90  AON__LPI2C2.MTDBR[90].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR91  AON__LPI2C2.MTDBR[91].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR92  AON__LPI2C2.MTDBR[92].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR93  AON__LPI2C2.MTDBR[93].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR94  AON__LPI2C2.MTDBR[94].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR95  AON__LPI2C2.MTDBR[95].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR96  AON__LPI2C2.MTDBR[96].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR97  AON__LPI2C2.MTDBR[97].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR98  AON__LPI2C2.MTDBR[98].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR99  AON__LPI2C2.MTDBR[99].R       /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR100 AON__LPI2C2.MTDBR[100].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR101 AON__LPI2C2.MTDBR[101].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR102 AON__LPI2C2.MTDBR[102].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR103 AON__LPI2C2.MTDBR[103].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR104 AON__LPI2C2.MTDBR[104].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR105 AON__LPI2C2.MTDBR[105].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR106 AON__LPI2C2.MTDBR[106].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR107 AON__LPI2C2.MTDBR[107].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR108 AON__LPI2C2.MTDBR[108].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR109 AON__LPI2C2.MTDBR[109].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR110 AON__LPI2C2.MTDBR[110].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR111 AON__LPI2C2.MTDBR[111].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR112 AON__LPI2C2.MTDBR[112].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR113 AON__LPI2C2.MTDBR[113].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR114 AON__LPI2C2.MTDBR[114].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR115 AON__LPI2C2.MTDBR[115].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR116 AON__LPI2C2.MTDBR[116].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR117 AON__LPI2C2.MTDBR[117].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR118 AON__LPI2C2.MTDBR[118].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR119 AON__LPI2C2.MTDBR[119].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR120 AON__LPI2C2.MTDBR[120].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR121 AON__LPI2C2.MTDBR[121].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR122 AON__LPI2C2.MTDBR[122].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR123 AON__LPI2C2.MTDBR[123].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR124 AON__LPI2C2.MTDBR[124].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR125 AON__LPI2C2.MTDBR[125].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR126 AON__LPI2C2.MTDBR[126].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR127 AON__LPI2C2.MTDBR[127].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR128 AON__LPI2C2.MTDBR[128].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR129 AON__LPI2C2.MTDBR[129].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR130 AON__LPI2C2.MTDBR[130].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR131 AON__LPI2C2.MTDBR[131].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR132 AON__LPI2C2.MTDBR[132].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR133 AON__LPI2C2.MTDBR[133].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR134 AON__LPI2C2.MTDBR[134].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR135 AON__LPI2C2.MTDBR[135].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR136 AON__LPI2C2.MTDBR[136].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR137 AON__LPI2C2.MTDBR[137].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR138 AON__LPI2C2.MTDBR[138].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR139 AON__LPI2C2.MTDBR[139].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR140 AON__LPI2C2.MTDBR[140].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR141 AON__LPI2C2.MTDBR[141].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR142 AON__LPI2C2.MTDBR[142].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR143 AON__LPI2C2.MTDBR[143].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR144 AON__LPI2C2.MTDBR[144].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR145 AON__LPI2C2.MTDBR[145].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR146 AON__LPI2C2.MTDBR[146].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR147 AON__LPI2C2.MTDBR[147].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR148 AON__LPI2C2.MTDBR[148].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR149 AON__LPI2C2.MTDBR[149].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR150 AON__LPI2C2.MTDBR[150].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR151 AON__LPI2C2.MTDBR[151].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR152 AON__LPI2C2.MTDBR[152].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR153 AON__LPI2C2.MTDBR[153].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR154 AON__LPI2C2.MTDBR[154].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR155 AON__LPI2C2.MTDBR[155].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR156 AON__LPI2C2.MTDBR[156].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR157 AON__LPI2C2.MTDBR[157].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR158 AON__LPI2C2.MTDBR[158].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR159 AON__LPI2C2.MTDBR[159].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR160 AON__LPI2C2.MTDBR[160].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR161 AON__LPI2C2.MTDBR[161].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR162 AON__LPI2C2.MTDBR[162].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR163 AON__LPI2C2.MTDBR[163].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR164 AON__LPI2C2.MTDBR[164].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR165 AON__LPI2C2.MTDBR[165].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR166 AON__LPI2C2.MTDBR[166].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR167 AON__LPI2C2.MTDBR[167].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR168 AON__LPI2C2.MTDBR[168].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR169 AON__LPI2C2.MTDBR[169].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR170 AON__LPI2C2.MTDBR[170].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR171 AON__LPI2C2.MTDBR[171].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR172 AON__LPI2C2.MTDBR[172].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR173 AON__LPI2C2.MTDBR[173].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR174 AON__LPI2C2.MTDBR[174].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR175 AON__LPI2C2.MTDBR[175].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR176 AON__LPI2C2.MTDBR[176].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR177 AON__LPI2C2.MTDBR[177].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR178 AON__LPI2C2.MTDBR[178].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR179 AON__LPI2C2.MTDBR[179].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR180 AON__LPI2C2.MTDBR[180].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR181 AON__LPI2C2.MTDBR[181].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR182 AON__LPI2C2.MTDBR[182].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR183 AON__LPI2C2.MTDBR[183].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR184 AON__LPI2C2.MTDBR[184].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR185 AON__LPI2C2.MTDBR[185].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR186 AON__LPI2C2.MTDBR[186].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR187 AON__LPI2C2.MTDBR[187].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR188 AON__LPI2C2.MTDBR[188].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR189 AON__LPI2C2.MTDBR[189].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR190 AON__LPI2C2.MTDBR[190].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR191 AON__LPI2C2.MTDBR[191].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR192 AON__LPI2C2.MTDBR[192].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR193 AON__LPI2C2.MTDBR[193].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR194 AON__LPI2C2.MTDBR[194].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR195 AON__LPI2C2.MTDBR[195].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR196 AON__LPI2C2.MTDBR[196].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR197 AON__LPI2C2.MTDBR[197].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR198 AON__LPI2C2.MTDBR[198].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR199 AON__LPI2C2.MTDBR[199].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR200 AON__LPI2C2.MTDBR[200].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR201 AON__LPI2C2.MTDBR[201].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR202 AON__LPI2C2.MTDBR[202].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR203 AON__LPI2C2.MTDBR[203].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR204 AON__LPI2C2.MTDBR[204].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR205 AON__LPI2C2.MTDBR[205].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR206 AON__LPI2C2.MTDBR[206].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR207 AON__LPI2C2.MTDBR[207].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR208 AON__LPI2C2.MTDBR[208].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR209 AON__LPI2C2.MTDBR[209].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR210 AON__LPI2C2.MTDBR[210].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR211 AON__LPI2C2.MTDBR[211].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR212 AON__LPI2C2.MTDBR[212].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR213 AON__LPI2C2.MTDBR[213].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR214 AON__LPI2C2.MTDBR[214].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR215 AON__LPI2C2.MTDBR[215].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR216 AON__LPI2C2.MTDBR[216].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR217 AON__LPI2C2.MTDBR[217].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR218 AON__LPI2C2.MTDBR[218].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR219 AON__LPI2C2.MTDBR[219].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR220 AON__LPI2C2.MTDBR[220].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR221 AON__LPI2C2.MTDBR[221].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR222 AON__LPI2C2.MTDBR[222].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR223 AON__LPI2C2.MTDBR[223].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR224 AON__LPI2C2.MTDBR[224].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR225 AON__LPI2C2.MTDBR[225].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR226 AON__LPI2C2.MTDBR[226].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR227 AON__LPI2C2.MTDBR[227].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR228 AON__LPI2C2.MTDBR[228].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR229 AON__LPI2C2.MTDBR[229].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR230 AON__LPI2C2.MTDBR[230].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR231 AON__LPI2C2.MTDBR[231].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR232 AON__LPI2C2.MTDBR[232].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR233 AON__LPI2C2.MTDBR[233].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR234 AON__LPI2C2.MTDBR[234].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR235 AON__LPI2C2.MTDBR[235].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR236 AON__LPI2C2.MTDBR[236].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR237 AON__LPI2C2.MTDBR[237].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR238 AON__LPI2C2.MTDBR[238].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR239 AON__LPI2C2.MTDBR[239].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR240 AON__LPI2C2.MTDBR[240].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR241 AON__LPI2C2.MTDBR[241].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR242 AON__LPI2C2.MTDBR[242].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR243 AON__LPI2C2.MTDBR[243].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR244 AON__LPI2C2.MTDBR[244].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR245 AON__LPI2C2.MTDBR[245].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR246 AON__LPI2C2.MTDBR[246].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR247 AON__LPI2C2.MTDBR[247].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR248 AON__LPI2C2.MTDBR[248].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR249 AON__LPI2C2.MTDBR[249].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR250 AON__LPI2C2.MTDBR[250].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR251 AON__LPI2C2.MTDBR[251].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR252 AON__LPI2C2.MTDBR[252].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR253 AON__LPI2C2.MTDBR[253].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR254 AON__LPI2C2.MTDBR[254].R      /* Transmit Data Burst */
#define AON__LPI2C2_MTDBR255 AON__LPI2C2.MTDBR[255].R      /* Transmit Data Burst */

/* AON_LPIT */
#define AON__LPIT1_VERID     AON__LPIT1.VERID.R            /* Version ID */
#define AON__LPIT1_PARAM     AON__LPIT1.PARAM.R            /* Parameter */
#define AON__LPIT1_MCR       AON__LPIT1.MCR.R              /* Module Control */
#define AON__LPIT1_MSR       AON__LPIT1.MSR.R              /* Module Status */
#define AON__LPIT1_MIER      AON__LPIT1.MIER.R             /* Module Interrupt Enable */
#define AON__LPIT1_SETTEN    AON__LPIT1.SETTEN.R           /* Set Timer Enable */
#define AON__LPIT1_CLRTEN    AON__LPIT1.CLRTEN.R           /* Clear Timer Enable */
#define AON__LPIT1_TVAL0     AON__LPIT1.CHANNEL[0].TVAL.R  /* Timer Value */
#define AON__LPIT1_CVAL0     AON__LPIT1.CHANNEL[0].CVAL.R  /* Current Timer Value */
#define AON__LPIT1_TCTRL0    AON__LPIT1.CHANNEL[0].TCTRL.R /* Timer Control */
#define AON__LPIT1_TVAL1     AON__LPIT1.CHANNEL[1].TVAL.R  /* Timer Value */
#define AON__LPIT1_CVAL1     AON__LPIT1.CHANNEL[1].CVAL.R  /* Current Timer Value */
#define AON__LPIT1_TCTRL1    AON__LPIT1.CHANNEL[1].TCTRL.R /* Timer Control */
#define AON__LPIT1_TVAL2     AON__LPIT1.CHANNEL[2].TVAL.R  /* Timer Value */
#define AON__LPIT1_CVAL2     AON__LPIT1.CHANNEL[2].CVAL.R  /* Current Timer Value */
#define AON__LPIT1_TCTRL2    AON__LPIT1.CHANNEL[2].TCTRL.R /* Timer Control */
#define AON__LPIT1_TVAL3     AON__LPIT1.CHANNEL[3].TVAL.R  /* Timer Value */
#define AON__LPIT1_CVAL3     AON__LPIT1.CHANNEL[3].CVAL.R  /* Current Timer Value */
#define AON__LPIT1_TCTRL3    AON__LPIT1.CHANNEL[3].TCTRL.R /* Timer Control */

/* AON_LPSPI */
#define AON__LPSPI1_VERID    AON__LPSPI1.VERID.R           /* Version ID */
#define AON__LPSPI1_PARAM    AON__LPSPI1.PARAM.R           /* Parameter */
#define AON__LPSPI1_CR       AON__LPSPI1.CR.R              /* Control */
#define AON__LPSPI1_SR       AON__LPSPI1.SR.R              /* Status */
#define AON__LPSPI1_IER      AON__LPSPI1.IER.R             /* Interrupt Enable */
#define AON__LPSPI1_DER      AON__LPSPI1.DER.R             /* DMA Enable */
#define AON__LPSPI1_CFGR0    AON__LPSPI1.CFGR0.R           /* Configuration 0 */
#define AON__LPSPI1_CFGR1    AON__LPSPI1.CFGR1.R           /* Configuration 1 */
#define AON__LPSPI1_DMR0     AON__LPSPI1.DMR0.R            /* Data Match 0 */
#define AON__LPSPI1_DMR1     AON__LPSPI1.DMR1.R            /* Data Match 1 */
#define AON__LPSPI1_CCR      AON__LPSPI1.CCR.R             /* Clock Configuration */
#define AON__LPSPI1_CCR1     AON__LPSPI1.CCR1.R            /* Clock Configuration 1 */
#define AON__LPSPI1_FCR      AON__LPSPI1.FCR.R             /* FIFO Control */
#define AON__LPSPI1_FSR      AON__LPSPI1.FSR.R             /* FIFO Status */
#define AON__LPSPI1_TCR      AON__LPSPI1.TCR.R             /* Transmit Command */
#define AON__LPSPI1_TDR      AON__LPSPI1.TDR.R             /* Transmit Data */
#define AON__LPSPI1_RSR      AON__LPSPI1.RSR.R             /* Receive Status */
#define AON__LPSPI1_RDR      AON__LPSPI1.RDR.R             /* Receive Data */
#define AON__LPSPI1_RDROR    AON__LPSPI1.RDROR.R           /* Receive Data Read Only */
#define AON__LPSPI1_TCBR     AON__LPSPI1.TCBR.R            /* Transmit Command Burst */
#define AON__LPSPI1_TDBR0    AON__LPSPI1.TDBR[0].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR1    AON__LPSPI1.TDBR[1].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR2    AON__LPSPI1.TDBR[2].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR3    AON__LPSPI1.TDBR[3].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR4    AON__LPSPI1.TDBR[4].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR5    AON__LPSPI1.TDBR[5].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR6    AON__LPSPI1.TDBR[6].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR7    AON__LPSPI1.TDBR[7].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR8    AON__LPSPI1.TDBR[8].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR9    AON__LPSPI1.TDBR[9].R         /* Transmit Data Burst */
#define AON__LPSPI1_TDBR10   AON__LPSPI1.TDBR[10].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR11   AON__LPSPI1.TDBR[11].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR12   AON__LPSPI1.TDBR[12].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR13   AON__LPSPI1.TDBR[13].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR14   AON__LPSPI1.TDBR[14].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR15   AON__LPSPI1.TDBR[15].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR16   AON__LPSPI1.TDBR[16].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR17   AON__LPSPI1.TDBR[17].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR18   AON__LPSPI1.TDBR[18].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR19   AON__LPSPI1.TDBR[19].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR20   AON__LPSPI1.TDBR[20].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR21   AON__LPSPI1.TDBR[21].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR22   AON__LPSPI1.TDBR[22].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR23   AON__LPSPI1.TDBR[23].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR24   AON__LPSPI1.TDBR[24].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR25   AON__LPSPI1.TDBR[25].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR26   AON__LPSPI1.TDBR[26].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR27   AON__LPSPI1.TDBR[27].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR28   AON__LPSPI1.TDBR[28].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR29   AON__LPSPI1.TDBR[29].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR30   AON__LPSPI1.TDBR[30].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR31   AON__LPSPI1.TDBR[31].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR32   AON__LPSPI1.TDBR[32].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR33   AON__LPSPI1.TDBR[33].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR34   AON__LPSPI1.TDBR[34].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR35   AON__LPSPI1.TDBR[35].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR36   AON__LPSPI1.TDBR[36].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR37   AON__LPSPI1.TDBR[37].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR38   AON__LPSPI1.TDBR[38].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR39   AON__LPSPI1.TDBR[39].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR40   AON__LPSPI1.TDBR[40].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR41   AON__LPSPI1.TDBR[41].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR42   AON__LPSPI1.TDBR[42].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR43   AON__LPSPI1.TDBR[43].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR44   AON__LPSPI1.TDBR[44].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR45   AON__LPSPI1.TDBR[45].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR46   AON__LPSPI1.TDBR[46].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR47   AON__LPSPI1.TDBR[47].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR48   AON__LPSPI1.TDBR[48].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR49   AON__LPSPI1.TDBR[49].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR50   AON__LPSPI1.TDBR[50].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR51   AON__LPSPI1.TDBR[51].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR52   AON__LPSPI1.TDBR[52].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR53   AON__LPSPI1.TDBR[53].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR54   AON__LPSPI1.TDBR[54].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR55   AON__LPSPI1.TDBR[55].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR56   AON__LPSPI1.TDBR[56].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR57   AON__LPSPI1.TDBR[57].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR58   AON__LPSPI1.TDBR[58].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR59   AON__LPSPI1.TDBR[59].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR60   AON__LPSPI1.TDBR[60].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR61   AON__LPSPI1.TDBR[61].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR62   AON__LPSPI1.TDBR[62].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR63   AON__LPSPI1.TDBR[63].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR64   AON__LPSPI1.TDBR[64].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR65   AON__LPSPI1.TDBR[65].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR66   AON__LPSPI1.TDBR[66].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR67   AON__LPSPI1.TDBR[67].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR68   AON__LPSPI1.TDBR[68].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR69   AON__LPSPI1.TDBR[69].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR70   AON__LPSPI1.TDBR[70].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR71   AON__LPSPI1.TDBR[71].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR72   AON__LPSPI1.TDBR[72].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR73   AON__LPSPI1.TDBR[73].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR74   AON__LPSPI1.TDBR[74].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR75   AON__LPSPI1.TDBR[75].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR76   AON__LPSPI1.TDBR[76].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR77   AON__LPSPI1.TDBR[77].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR78   AON__LPSPI1.TDBR[78].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR79   AON__LPSPI1.TDBR[79].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR80   AON__LPSPI1.TDBR[80].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR81   AON__LPSPI1.TDBR[81].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR82   AON__LPSPI1.TDBR[82].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR83   AON__LPSPI1.TDBR[83].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR84   AON__LPSPI1.TDBR[84].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR85   AON__LPSPI1.TDBR[85].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR86   AON__LPSPI1.TDBR[86].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR87   AON__LPSPI1.TDBR[87].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR88   AON__LPSPI1.TDBR[88].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR89   AON__LPSPI1.TDBR[89].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR90   AON__LPSPI1.TDBR[90].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR91   AON__LPSPI1.TDBR[91].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR92   AON__LPSPI1.TDBR[92].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR93   AON__LPSPI1.TDBR[93].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR94   AON__LPSPI1.TDBR[94].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR95   AON__LPSPI1.TDBR[95].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR96   AON__LPSPI1.TDBR[96].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR97   AON__LPSPI1.TDBR[97].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR98   AON__LPSPI1.TDBR[98].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR99   AON__LPSPI1.TDBR[99].R        /* Transmit Data Burst */
#define AON__LPSPI1_TDBR100  AON__LPSPI1.TDBR[100].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR101  AON__LPSPI1.TDBR[101].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR102  AON__LPSPI1.TDBR[102].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR103  AON__LPSPI1.TDBR[103].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR104  AON__LPSPI1.TDBR[104].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR105  AON__LPSPI1.TDBR[105].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR106  AON__LPSPI1.TDBR[106].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR107  AON__LPSPI1.TDBR[107].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR108  AON__LPSPI1.TDBR[108].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR109  AON__LPSPI1.TDBR[109].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR110  AON__LPSPI1.TDBR[110].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR111  AON__LPSPI1.TDBR[111].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR112  AON__LPSPI1.TDBR[112].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR113  AON__LPSPI1.TDBR[113].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR114  AON__LPSPI1.TDBR[114].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR115  AON__LPSPI1.TDBR[115].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR116  AON__LPSPI1.TDBR[116].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR117  AON__LPSPI1.TDBR[117].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR118  AON__LPSPI1.TDBR[118].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR119  AON__LPSPI1.TDBR[119].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR120  AON__LPSPI1.TDBR[120].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR121  AON__LPSPI1.TDBR[121].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR122  AON__LPSPI1.TDBR[122].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR123  AON__LPSPI1.TDBR[123].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR124  AON__LPSPI1.TDBR[124].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR125  AON__LPSPI1.TDBR[125].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR126  AON__LPSPI1.TDBR[126].R       /* Transmit Data Burst */
#define AON__LPSPI1_TDBR127  AON__LPSPI1.TDBR[127].R       /* Transmit Data Burst */
#define AON__LPSPI1_RDBR0    AON__LPSPI1.RDBR[0].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR1    AON__LPSPI1.RDBR[1].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR2    AON__LPSPI1.RDBR[2].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR3    AON__LPSPI1.RDBR[3].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR4    AON__LPSPI1.RDBR[4].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR5    AON__LPSPI1.RDBR[5].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR6    AON__LPSPI1.RDBR[6].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR7    AON__LPSPI1.RDBR[7].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR8    AON__LPSPI1.RDBR[8].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR9    AON__LPSPI1.RDBR[9].R         /* Receive Data Burst */
#define AON__LPSPI1_RDBR10   AON__LPSPI1.RDBR[10].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR11   AON__LPSPI1.RDBR[11].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR12   AON__LPSPI1.RDBR[12].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR13   AON__LPSPI1.RDBR[13].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR14   AON__LPSPI1.RDBR[14].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR15   AON__LPSPI1.RDBR[15].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR16   AON__LPSPI1.RDBR[16].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR17   AON__LPSPI1.RDBR[17].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR18   AON__LPSPI1.RDBR[18].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR19   AON__LPSPI1.RDBR[19].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR20   AON__LPSPI1.RDBR[20].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR21   AON__LPSPI1.RDBR[21].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR22   AON__LPSPI1.RDBR[22].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR23   AON__LPSPI1.RDBR[23].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR24   AON__LPSPI1.RDBR[24].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR25   AON__LPSPI1.RDBR[25].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR26   AON__LPSPI1.RDBR[26].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR27   AON__LPSPI1.RDBR[27].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR28   AON__LPSPI1.RDBR[28].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR29   AON__LPSPI1.RDBR[29].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR30   AON__LPSPI1.RDBR[30].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR31   AON__LPSPI1.RDBR[31].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR32   AON__LPSPI1.RDBR[32].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR33   AON__LPSPI1.RDBR[33].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR34   AON__LPSPI1.RDBR[34].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR35   AON__LPSPI1.RDBR[35].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR36   AON__LPSPI1.RDBR[36].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR37   AON__LPSPI1.RDBR[37].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR38   AON__LPSPI1.RDBR[38].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR39   AON__LPSPI1.RDBR[39].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR40   AON__LPSPI1.RDBR[40].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR41   AON__LPSPI1.RDBR[41].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR42   AON__LPSPI1.RDBR[42].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR43   AON__LPSPI1.RDBR[43].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR44   AON__LPSPI1.RDBR[44].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR45   AON__LPSPI1.RDBR[45].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR46   AON__LPSPI1.RDBR[46].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR47   AON__LPSPI1.RDBR[47].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR48   AON__LPSPI1.RDBR[48].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR49   AON__LPSPI1.RDBR[49].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR50   AON__LPSPI1.RDBR[50].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR51   AON__LPSPI1.RDBR[51].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR52   AON__LPSPI1.RDBR[52].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR53   AON__LPSPI1.RDBR[53].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR54   AON__LPSPI1.RDBR[54].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR55   AON__LPSPI1.RDBR[55].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR56   AON__LPSPI1.RDBR[56].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR57   AON__LPSPI1.RDBR[57].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR58   AON__LPSPI1.RDBR[58].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR59   AON__LPSPI1.RDBR[59].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR60   AON__LPSPI1.RDBR[60].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR61   AON__LPSPI1.RDBR[61].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR62   AON__LPSPI1.RDBR[62].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR63   AON__LPSPI1.RDBR[63].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR64   AON__LPSPI1.RDBR[64].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR65   AON__LPSPI1.RDBR[65].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR66   AON__LPSPI1.RDBR[66].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR67   AON__LPSPI1.RDBR[67].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR68   AON__LPSPI1.RDBR[68].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR69   AON__LPSPI1.RDBR[69].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR70   AON__LPSPI1.RDBR[70].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR71   AON__LPSPI1.RDBR[71].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR72   AON__LPSPI1.RDBR[72].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR73   AON__LPSPI1.RDBR[73].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR74   AON__LPSPI1.RDBR[74].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR75   AON__LPSPI1.RDBR[75].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR76   AON__LPSPI1.RDBR[76].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR77   AON__LPSPI1.RDBR[77].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR78   AON__LPSPI1.RDBR[78].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR79   AON__LPSPI1.RDBR[79].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR80   AON__LPSPI1.RDBR[80].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR81   AON__LPSPI1.RDBR[81].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR82   AON__LPSPI1.RDBR[82].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR83   AON__LPSPI1.RDBR[83].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR84   AON__LPSPI1.RDBR[84].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR85   AON__LPSPI1.RDBR[85].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR86   AON__LPSPI1.RDBR[86].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR87   AON__LPSPI1.RDBR[87].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR88   AON__LPSPI1.RDBR[88].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR89   AON__LPSPI1.RDBR[89].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR90   AON__LPSPI1.RDBR[90].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR91   AON__LPSPI1.RDBR[91].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR92   AON__LPSPI1.RDBR[92].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR93   AON__LPSPI1.RDBR[93].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR94   AON__LPSPI1.RDBR[94].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR95   AON__LPSPI1.RDBR[95].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR96   AON__LPSPI1.RDBR[96].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR97   AON__LPSPI1.RDBR[97].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR98   AON__LPSPI1.RDBR[98].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR99   AON__LPSPI1.RDBR[99].R        /* Receive Data Burst */
#define AON__LPSPI1_RDBR100  AON__LPSPI1.RDBR[100].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR101  AON__LPSPI1.RDBR[101].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR102  AON__LPSPI1.RDBR[102].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR103  AON__LPSPI1.RDBR[103].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR104  AON__LPSPI1.RDBR[104].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR105  AON__LPSPI1.RDBR[105].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR106  AON__LPSPI1.RDBR[106].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR107  AON__LPSPI1.RDBR[107].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR108  AON__LPSPI1.RDBR[108].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR109  AON__LPSPI1.RDBR[109].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR110  AON__LPSPI1.RDBR[110].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR111  AON__LPSPI1.RDBR[111].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR112  AON__LPSPI1.RDBR[112].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR113  AON__LPSPI1.RDBR[113].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR114  AON__LPSPI1.RDBR[114].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR115  AON__LPSPI1.RDBR[115].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR116  AON__LPSPI1.RDBR[116].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR117  AON__LPSPI1.RDBR[117].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR118  AON__LPSPI1.RDBR[118].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR119  AON__LPSPI1.RDBR[119].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR120  AON__LPSPI1.RDBR[120].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR121  AON__LPSPI1.RDBR[121].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR122  AON__LPSPI1.RDBR[122].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR123  AON__LPSPI1.RDBR[123].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR124  AON__LPSPI1.RDBR[124].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR125  AON__LPSPI1.RDBR[125].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR126  AON__LPSPI1.RDBR[126].R       /* Receive Data Burst */
#define AON__LPSPI1_RDBR127  AON__LPSPI1.RDBR[127].R       /* Receive Data Burst */

#define AON__LPSPI2_VERID    AON__LPSPI2.VERID.R           /* Version ID */
#define AON__LPSPI2_PARAM    AON__LPSPI2.PARAM.R           /* Parameter */
#define AON__LPSPI2_CR       AON__LPSPI2.CR.R              /* Control */
#define AON__LPSPI2_SR       AON__LPSPI2.SR.R              /* Status */
#define AON__LPSPI2_IER      AON__LPSPI2.IER.R             /* Interrupt Enable */
#define AON__LPSPI2_DER      AON__LPSPI2.DER.R             /* DMA Enable */
#define AON__LPSPI2_CFGR0    AON__LPSPI2.CFGR0.R           /* Configuration 0 */
#define AON__LPSPI2_CFGR1    AON__LPSPI2.CFGR1.R           /* Configuration 1 */
#define AON__LPSPI2_DMR0     AON__LPSPI2.DMR0.R            /* Data Match 0 */
#define AON__LPSPI2_DMR1     AON__LPSPI2.DMR1.R            /* Data Match 1 */
#define AON__LPSPI2_CCR      AON__LPSPI2.CCR.R             /* Clock Configuration */
#define AON__LPSPI2_CCR1     AON__LPSPI2.CCR1.R            /* Clock Configuration 1 */
#define AON__LPSPI2_FCR      AON__LPSPI2.FCR.R             /* FIFO Control */
#define AON__LPSPI2_FSR      AON__LPSPI2.FSR.R             /* FIFO Status */
#define AON__LPSPI2_TCR      AON__LPSPI2.TCR.R             /* Transmit Command */
#define AON__LPSPI2_TDR      AON__LPSPI2.TDR.R             /* Transmit Data */
#define AON__LPSPI2_RSR      AON__LPSPI2.RSR.R             /* Receive Status */
#define AON__LPSPI2_RDR      AON__LPSPI2.RDR.R             /* Receive Data */
#define AON__LPSPI2_RDROR    AON__LPSPI2.RDROR.R           /* Receive Data Read Only */
#define AON__LPSPI2_TCBR     AON__LPSPI2.TCBR.R            /* Transmit Command Burst */
#define AON__LPSPI2_TDBR0    AON__LPSPI2.TDBR[0].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR1    AON__LPSPI2.TDBR[1].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR2    AON__LPSPI2.TDBR[2].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR3    AON__LPSPI2.TDBR[3].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR4    AON__LPSPI2.TDBR[4].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR5    AON__LPSPI2.TDBR[5].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR6    AON__LPSPI2.TDBR[6].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR7    AON__LPSPI2.TDBR[7].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR8    AON__LPSPI2.TDBR[8].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR9    AON__LPSPI2.TDBR[9].R         /* Transmit Data Burst */
#define AON__LPSPI2_TDBR10   AON__LPSPI2.TDBR[10].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR11   AON__LPSPI2.TDBR[11].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR12   AON__LPSPI2.TDBR[12].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR13   AON__LPSPI2.TDBR[13].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR14   AON__LPSPI2.TDBR[14].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR15   AON__LPSPI2.TDBR[15].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR16   AON__LPSPI2.TDBR[16].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR17   AON__LPSPI2.TDBR[17].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR18   AON__LPSPI2.TDBR[18].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR19   AON__LPSPI2.TDBR[19].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR20   AON__LPSPI2.TDBR[20].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR21   AON__LPSPI2.TDBR[21].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR22   AON__LPSPI2.TDBR[22].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR23   AON__LPSPI2.TDBR[23].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR24   AON__LPSPI2.TDBR[24].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR25   AON__LPSPI2.TDBR[25].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR26   AON__LPSPI2.TDBR[26].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR27   AON__LPSPI2.TDBR[27].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR28   AON__LPSPI2.TDBR[28].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR29   AON__LPSPI2.TDBR[29].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR30   AON__LPSPI2.TDBR[30].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR31   AON__LPSPI2.TDBR[31].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR32   AON__LPSPI2.TDBR[32].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR33   AON__LPSPI2.TDBR[33].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR34   AON__LPSPI2.TDBR[34].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR35   AON__LPSPI2.TDBR[35].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR36   AON__LPSPI2.TDBR[36].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR37   AON__LPSPI2.TDBR[37].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR38   AON__LPSPI2.TDBR[38].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR39   AON__LPSPI2.TDBR[39].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR40   AON__LPSPI2.TDBR[40].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR41   AON__LPSPI2.TDBR[41].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR42   AON__LPSPI2.TDBR[42].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR43   AON__LPSPI2.TDBR[43].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR44   AON__LPSPI2.TDBR[44].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR45   AON__LPSPI2.TDBR[45].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR46   AON__LPSPI2.TDBR[46].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR47   AON__LPSPI2.TDBR[47].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR48   AON__LPSPI2.TDBR[48].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR49   AON__LPSPI2.TDBR[49].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR50   AON__LPSPI2.TDBR[50].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR51   AON__LPSPI2.TDBR[51].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR52   AON__LPSPI2.TDBR[52].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR53   AON__LPSPI2.TDBR[53].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR54   AON__LPSPI2.TDBR[54].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR55   AON__LPSPI2.TDBR[55].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR56   AON__LPSPI2.TDBR[56].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR57   AON__LPSPI2.TDBR[57].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR58   AON__LPSPI2.TDBR[58].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR59   AON__LPSPI2.TDBR[59].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR60   AON__LPSPI2.TDBR[60].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR61   AON__LPSPI2.TDBR[61].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR62   AON__LPSPI2.TDBR[62].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR63   AON__LPSPI2.TDBR[63].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR64   AON__LPSPI2.TDBR[64].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR65   AON__LPSPI2.TDBR[65].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR66   AON__LPSPI2.TDBR[66].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR67   AON__LPSPI2.TDBR[67].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR68   AON__LPSPI2.TDBR[68].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR69   AON__LPSPI2.TDBR[69].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR70   AON__LPSPI2.TDBR[70].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR71   AON__LPSPI2.TDBR[71].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR72   AON__LPSPI2.TDBR[72].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR73   AON__LPSPI2.TDBR[73].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR74   AON__LPSPI2.TDBR[74].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR75   AON__LPSPI2.TDBR[75].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR76   AON__LPSPI2.TDBR[76].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR77   AON__LPSPI2.TDBR[77].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR78   AON__LPSPI2.TDBR[78].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR79   AON__LPSPI2.TDBR[79].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR80   AON__LPSPI2.TDBR[80].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR81   AON__LPSPI2.TDBR[81].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR82   AON__LPSPI2.TDBR[82].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR83   AON__LPSPI2.TDBR[83].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR84   AON__LPSPI2.TDBR[84].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR85   AON__LPSPI2.TDBR[85].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR86   AON__LPSPI2.TDBR[86].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR87   AON__LPSPI2.TDBR[87].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR88   AON__LPSPI2.TDBR[88].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR89   AON__LPSPI2.TDBR[89].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR90   AON__LPSPI2.TDBR[90].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR91   AON__LPSPI2.TDBR[91].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR92   AON__LPSPI2.TDBR[92].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR93   AON__LPSPI2.TDBR[93].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR94   AON__LPSPI2.TDBR[94].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR95   AON__LPSPI2.TDBR[95].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR96   AON__LPSPI2.TDBR[96].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR97   AON__LPSPI2.TDBR[97].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR98   AON__LPSPI2.TDBR[98].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR99   AON__LPSPI2.TDBR[99].R        /* Transmit Data Burst */
#define AON__LPSPI2_TDBR100  AON__LPSPI2.TDBR[100].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR101  AON__LPSPI2.TDBR[101].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR102  AON__LPSPI2.TDBR[102].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR103  AON__LPSPI2.TDBR[103].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR104  AON__LPSPI2.TDBR[104].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR105  AON__LPSPI2.TDBR[105].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR106  AON__LPSPI2.TDBR[106].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR107  AON__LPSPI2.TDBR[107].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR108  AON__LPSPI2.TDBR[108].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR109  AON__LPSPI2.TDBR[109].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR110  AON__LPSPI2.TDBR[110].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR111  AON__LPSPI2.TDBR[111].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR112  AON__LPSPI2.TDBR[112].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR113  AON__LPSPI2.TDBR[113].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR114  AON__LPSPI2.TDBR[114].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR115  AON__LPSPI2.TDBR[115].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR116  AON__LPSPI2.TDBR[116].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR117  AON__LPSPI2.TDBR[117].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR118  AON__LPSPI2.TDBR[118].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR119  AON__LPSPI2.TDBR[119].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR120  AON__LPSPI2.TDBR[120].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR121  AON__LPSPI2.TDBR[121].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR122  AON__LPSPI2.TDBR[122].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR123  AON__LPSPI2.TDBR[123].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR124  AON__LPSPI2.TDBR[124].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR125  AON__LPSPI2.TDBR[125].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR126  AON__LPSPI2.TDBR[126].R       /* Transmit Data Burst */
#define AON__LPSPI2_TDBR127  AON__LPSPI2.TDBR[127].R       /* Transmit Data Burst */
#define AON__LPSPI2_RDBR0    AON__LPSPI2.RDBR[0].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR1    AON__LPSPI2.RDBR[1].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR2    AON__LPSPI2.RDBR[2].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR3    AON__LPSPI2.RDBR[3].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR4    AON__LPSPI2.RDBR[4].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR5    AON__LPSPI2.RDBR[5].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR6    AON__LPSPI2.RDBR[6].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR7    AON__LPSPI2.RDBR[7].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR8    AON__LPSPI2.RDBR[8].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR9    AON__LPSPI2.RDBR[9].R         /* Receive Data Burst */
#define AON__LPSPI2_RDBR10   AON__LPSPI2.RDBR[10].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR11   AON__LPSPI2.RDBR[11].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR12   AON__LPSPI2.RDBR[12].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR13   AON__LPSPI2.RDBR[13].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR14   AON__LPSPI2.RDBR[14].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR15   AON__LPSPI2.RDBR[15].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR16   AON__LPSPI2.RDBR[16].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR17   AON__LPSPI2.RDBR[17].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR18   AON__LPSPI2.RDBR[18].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR19   AON__LPSPI2.RDBR[19].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR20   AON__LPSPI2.RDBR[20].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR21   AON__LPSPI2.RDBR[21].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR22   AON__LPSPI2.RDBR[22].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR23   AON__LPSPI2.RDBR[23].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR24   AON__LPSPI2.RDBR[24].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR25   AON__LPSPI2.RDBR[25].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR26   AON__LPSPI2.RDBR[26].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR27   AON__LPSPI2.RDBR[27].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR28   AON__LPSPI2.RDBR[28].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR29   AON__LPSPI2.RDBR[29].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR30   AON__LPSPI2.RDBR[30].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR31   AON__LPSPI2.RDBR[31].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR32   AON__LPSPI2.RDBR[32].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR33   AON__LPSPI2.RDBR[33].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR34   AON__LPSPI2.RDBR[34].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR35   AON__LPSPI2.RDBR[35].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR36   AON__LPSPI2.RDBR[36].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR37   AON__LPSPI2.RDBR[37].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR38   AON__LPSPI2.RDBR[38].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR39   AON__LPSPI2.RDBR[39].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR40   AON__LPSPI2.RDBR[40].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR41   AON__LPSPI2.RDBR[41].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR42   AON__LPSPI2.RDBR[42].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR43   AON__LPSPI2.RDBR[43].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR44   AON__LPSPI2.RDBR[44].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR45   AON__LPSPI2.RDBR[45].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR46   AON__LPSPI2.RDBR[46].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR47   AON__LPSPI2.RDBR[47].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR48   AON__LPSPI2.RDBR[48].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR49   AON__LPSPI2.RDBR[49].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR50   AON__LPSPI2.RDBR[50].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR51   AON__LPSPI2.RDBR[51].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR52   AON__LPSPI2.RDBR[52].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR53   AON__LPSPI2.RDBR[53].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR54   AON__LPSPI2.RDBR[54].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR55   AON__LPSPI2.RDBR[55].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR56   AON__LPSPI2.RDBR[56].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR57   AON__LPSPI2.RDBR[57].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR58   AON__LPSPI2.RDBR[58].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR59   AON__LPSPI2.RDBR[59].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR60   AON__LPSPI2.RDBR[60].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR61   AON__LPSPI2.RDBR[61].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR62   AON__LPSPI2.RDBR[62].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR63   AON__LPSPI2.RDBR[63].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR64   AON__LPSPI2.RDBR[64].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR65   AON__LPSPI2.RDBR[65].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR66   AON__LPSPI2.RDBR[66].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR67   AON__LPSPI2.RDBR[67].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR68   AON__LPSPI2.RDBR[68].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR69   AON__LPSPI2.RDBR[69].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR70   AON__LPSPI2.RDBR[70].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR71   AON__LPSPI2.RDBR[71].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR72   AON__LPSPI2.RDBR[72].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR73   AON__LPSPI2.RDBR[73].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR74   AON__LPSPI2.RDBR[74].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR75   AON__LPSPI2.RDBR[75].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR76   AON__LPSPI2.RDBR[76].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR77   AON__LPSPI2.RDBR[77].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR78   AON__LPSPI2.RDBR[78].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR79   AON__LPSPI2.RDBR[79].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR80   AON__LPSPI2.RDBR[80].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR81   AON__LPSPI2.RDBR[81].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR82   AON__LPSPI2.RDBR[82].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR83   AON__LPSPI2.RDBR[83].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR84   AON__LPSPI2.RDBR[84].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR85   AON__LPSPI2.RDBR[85].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR86   AON__LPSPI2.RDBR[86].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR87   AON__LPSPI2.RDBR[87].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR88   AON__LPSPI2.RDBR[88].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR89   AON__LPSPI2.RDBR[89].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR90   AON__LPSPI2.RDBR[90].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR91   AON__LPSPI2.RDBR[91].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR92   AON__LPSPI2.RDBR[92].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR93   AON__LPSPI2.RDBR[93].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR94   AON__LPSPI2.RDBR[94].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR95   AON__LPSPI2.RDBR[95].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR96   AON__LPSPI2.RDBR[96].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR97   AON__LPSPI2.RDBR[97].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR98   AON__LPSPI2.RDBR[98].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR99   AON__LPSPI2.RDBR[99].R        /* Receive Data Burst */
#define AON__LPSPI2_RDBR100  AON__LPSPI2.RDBR[100].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR101  AON__LPSPI2.RDBR[101].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR102  AON__LPSPI2.RDBR[102].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR103  AON__LPSPI2.RDBR[103].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR104  AON__LPSPI2.RDBR[104].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR105  AON__LPSPI2.RDBR[105].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR106  AON__LPSPI2.RDBR[106].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR107  AON__LPSPI2.RDBR[107].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR108  AON__LPSPI2.RDBR[108].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR109  AON__LPSPI2.RDBR[109].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR110  AON__LPSPI2.RDBR[110].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR111  AON__LPSPI2.RDBR[111].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR112  AON__LPSPI2.RDBR[112].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR113  AON__LPSPI2.RDBR[113].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR114  AON__LPSPI2.RDBR[114].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR115  AON__LPSPI2.RDBR[115].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR116  AON__LPSPI2.RDBR[116].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR117  AON__LPSPI2.RDBR[117].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR118  AON__LPSPI2.RDBR[118].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR119  AON__LPSPI2.RDBR[119].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR120  AON__LPSPI2.RDBR[120].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR121  AON__LPSPI2.RDBR[121].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR122  AON__LPSPI2.RDBR[122].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR123  AON__LPSPI2.RDBR[123].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR124  AON__LPSPI2.RDBR[124].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR125  AON__LPSPI2.RDBR[125].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR126  AON__LPSPI2.RDBR[126].R       /* Receive Data Burst */
#define AON__LPSPI2_RDBR127  AON__LPSPI2.RDBR[127].R       /* Receive Data Burst */

/* AON_LPTMR */
#define AON__LPTMR1_CSR      AON__LPTMR1.CSR.R             /* Control Status */
#define AON__LPTMR1_PSR      AON__LPTMR1.PSR.R             /* Prescaler and Glitch Filter */
#define AON__LPTMR1_CMR      AON__LPTMR1.CMR.R             /* Compare */
#define AON__LPTMR1_CNR      AON__LPTMR1.CNR.R             /* Counter */

/* AON_LPTPM */
#define AON__LPTPM1_VERID    AON__LPTPM1.VERID.R           /* Version ID */
#define AON__LPTPM1_PARAM    AON__LPTPM1.PARAM.R           /* Parameter */
#define AON__LPTPM1_GLOBAL   AON__LPTPM1.GLOBAL.R          /* TPM Global */
#define AON__LPTPM1_SC       AON__LPTPM1.SC.R              /* Status and Control */
#define AON__LPTPM1_CNT      AON__LPTPM1.CNT.R             /* Counter */
#define AON__LPTPM1_MOD      AON__LPTPM1.MOD.R             /* Modulo */
#define AON__LPTPM1_STATUS   AON__LPTPM1.STATUS.R          /* Capture and Compare Status */
#define AON__LPTPM1_C0SC     AON__LPTPM1.CHANNEL[0].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM1_C0V      AON__LPTPM1.CHANNEL[0].CV.R   /* Channel n Value */
#define AON__LPTPM1_C1SC     AON__LPTPM1.CHANNEL[1].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM1_C1V      AON__LPTPM1.CHANNEL[1].CV.R   /* Channel n Value */
#define AON__LPTPM1_C2SC     AON__LPTPM1.CHANNEL[2].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM1_C2V      AON__LPTPM1.CHANNEL[2].CV.R   /* Channel n Value */
#define AON__LPTPM1_C3SC     AON__LPTPM1.CHANNEL[3].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM1_C3V      AON__LPTPM1.CHANNEL[3].CV.R   /* Channel n Value */
#define AON__LPTPM1_COMBINE  AON__LPTPM1.COMBINE.R         /* Combine Channel */
#define AON__LPTPM1_TRIG     AON__LPTPM1.TRIG.R            /* Channel Trigger */
#define AON__LPTPM1_POL      AON__LPTPM1.POL.R             /* Channel Polarity */
#define AON__LPTPM1_FILTER   AON__LPTPM1.FILTER.R          /* Filter Control */
#define AON__LPTPM1_QDCTRL   AON__LPTPM1.QDCTRL.R          /* Quadrature Decoder Control and Status */
#define AON__LPTPM1_CONF     AON__LPTPM1.CONF.R            /* Configuration */

#define AON__LPTPM2_VERID    AON__LPTPM2.VERID.R           /* Version ID */
#define AON__LPTPM2_PARAM    AON__LPTPM2.PARAM.R           /* Parameter */
#define AON__LPTPM2_GLOBAL   AON__LPTPM2.GLOBAL.R          /* TPM Global */
#define AON__LPTPM2_SC       AON__LPTPM2.SC.R              /* Status and Control */
#define AON__LPTPM2_CNT      AON__LPTPM2.CNT.R             /* Counter */
#define AON__LPTPM2_MOD      AON__LPTPM2.MOD.R             /* Modulo */
#define AON__LPTPM2_STATUS   AON__LPTPM2.STATUS.R          /* Capture and Compare Status */
#define AON__LPTPM2_C0SC     AON__LPTPM2.CHANNEL[0].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM2_C0V      AON__LPTPM2.CHANNEL[0].CV.R   /* Channel n Value */
#define AON__LPTPM2_C1SC     AON__LPTPM2.CHANNEL[1].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM2_C1V      AON__LPTPM2.CHANNEL[1].CV.R   /* Channel n Value */
#define AON__LPTPM2_C2SC     AON__LPTPM2.CHANNEL[2].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM2_C2V      AON__LPTPM2.CHANNEL[2].CV.R   /* Channel n Value */
#define AON__LPTPM2_C3SC     AON__LPTPM2.CHANNEL[3].CSC.R  /* Channel n Status and Control */
#define AON__LPTPM2_C3V      AON__LPTPM2.CHANNEL[3].CV.R   /* Channel n Value */
#define AON__LPTPM2_COMBINE  AON__LPTPM2.COMBINE.R         /* Combine Channel */
#define AON__LPTPM2_TRIG     AON__LPTPM2.TRIG.R            /* Channel Trigger */
#define AON__LPTPM2_POL      AON__LPTPM2.POL.R             /* Channel Polarity */
#define AON__LPTPM2_FILTER   AON__LPTPM2.FILTER.R          /* Filter Control */
#define AON__LPTPM2_QDCTRL   AON__LPTPM2.QDCTRL.R          /* Quadrature Decoder Control and Status */
#define AON__LPTPM2_CONF     AON__LPTPM2.CONF.R            /* Configuration */

/* AON_LPUART */
#define AON__LPUART1_VERID   AON__LPUART1.VERID.R          /* Version ID */
#define AON__LPUART1_PARAM   AON__LPUART1.PARAM.R          /* Parameter */
#define AON__LPUART1_GLOBAL  AON__LPUART1.GLOBAL.R         /* Global */
#define AON__LPUART1_PINCFG  AON__LPUART1.PINCFG.R         /* Pin Configuration */
#define AON__LPUART1_BAUD    AON__LPUART1.BAUD.R           /* Baud Rate */
#define AON__LPUART1_STAT    AON__LPUART1.STAT.R           /* Status */
#define AON__LPUART1_CTRL    AON__LPUART1.CTRL.R           /* Control */
#define AON__LPUART1_DATA    AON__LPUART1.DATA.R           /* Data */
#define AON__LPUART1_MATCH   AON__LPUART1.MATCH.R          /* Match Address */
#define AON__LPUART1_MODIR   AON__LPUART1.MODIR.R          /* MODEM IrDA */
#define AON__LPUART1_FIFO    AON__LPUART1.FIFO.R           /* FIFO */
#define AON__LPUART1_WATER   AON__LPUART1.WATER.R          /* Watermark */
#define AON__LPUART1_DATARO  AON__LPUART1.DATARO.R         /* Data Read-Only */
#define AON__LPUART1_MCR     AON__LPUART1.MCR.R            /* MODEM Control */
#define AON__LPUART1_MSR     AON__LPUART1.MSR.R            /* MODEM Status */
#define AON__LPUART1_REIR    AON__LPUART1.REIR.R           /* Receiver Extended Idle */
#define AON__LPUART1_TEIR    AON__LPUART1.TEIR.R           /* Transmitter Extended Idle */
#define AON__LPUART1_HDCR    AON__LPUART1.HDCR.R           /* Half Duplex Control */
#define AON__LPUART1_TOCR    AON__LPUART1.TOCR.R           /* Timeout Control */
#define AON__LPUART1_TOSR    AON__LPUART1.TOSR.R           /* Timeout Status */
#define AON__LPUART1_TIMEOUT0 AON__LPUART1.TIMEOUT[0].R    /* Timeout N */
#define AON__LPUART1_TIMEOUT1 AON__LPUART1.TIMEOUT[1].R    /* Timeout N */
#define AON__LPUART1_TIMEOUT2 AON__LPUART1.TIMEOUT[2].R    /* Timeout N */
#define AON__LPUART1_TIMEOUT3 AON__LPUART1.TIMEOUT[3].R    /* Timeout N */
#define AON__LPUART1_TCBR0   AON__LPUART1.TCBR[0].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR1   AON__LPUART1.TCBR[1].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR2   AON__LPUART1.TCBR[2].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR3   AON__LPUART1.TCBR[3].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR4   AON__LPUART1.TCBR[4].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR5   AON__LPUART1.TCBR[5].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR6   AON__LPUART1.TCBR[6].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR7   AON__LPUART1.TCBR[7].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR8   AON__LPUART1.TCBR[8].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR9   AON__LPUART1.TCBR[9].R        /* Transmit Command Burst */
#define AON__LPUART1_TCBR10  AON__LPUART1.TCBR[10].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR11  AON__LPUART1.TCBR[11].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR12  AON__LPUART1.TCBR[12].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR13  AON__LPUART1.TCBR[13].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR14  AON__LPUART1.TCBR[14].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR15  AON__LPUART1.TCBR[15].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR16  AON__LPUART1.TCBR[16].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR17  AON__LPUART1.TCBR[17].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR18  AON__LPUART1.TCBR[18].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR19  AON__LPUART1.TCBR[19].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR20  AON__LPUART1.TCBR[20].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR21  AON__LPUART1.TCBR[21].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR22  AON__LPUART1.TCBR[22].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR23  AON__LPUART1.TCBR[23].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR24  AON__LPUART1.TCBR[24].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR25  AON__LPUART1.TCBR[25].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR26  AON__LPUART1.TCBR[26].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR27  AON__LPUART1.TCBR[27].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR28  AON__LPUART1.TCBR[28].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR29  AON__LPUART1.TCBR[29].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR30  AON__LPUART1.TCBR[30].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR31  AON__LPUART1.TCBR[31].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR32  AON__LPUART1.TCBR[32].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR33  AON__LPUART1.TCBR[33].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR34  AON__LPUART1.TCBR[34].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR35  AON__LPUART1.TCBR[35].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR36  AON__LPUART1.TCBR[36].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR37  AON__LPUART1.TCBR[37].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR38  AON__LPUART1.TCBR[38].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR39  AON__LPUART1.TCBR[39].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR40  AON__LPUART1.TCBR[40].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR41  AON__LPUART1.TCBR[41].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR42  AON__LPUART1.TCBR[42].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR43  AON__LPUART1.TCBR[43].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR44  AON__LPUART1.TCBR[44].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR45  AON__LPUART1.TCBR[45].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR46  AON__LPUART1.TCBR[46].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR47  AON__LPUART1.TCBR[47].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR48  AON__LPUART1.TCBR[48].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR49  AON__LPUART1.TCBR[49].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR50  AON__LPUART1.TCBR[50].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR51  AON__LPUART1.TCBR[51].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR52  AON__LPUART1.TCBR[52].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR53  AON__LPUART1.TCBR[53].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR54  AON__LPUART1.TCBR[54].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR55  AON__LPUART1.TCBR[55].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR56  AON__LPUART1.TCBR[56].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR57  AON__LPUART1.TCBR[57].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR58  AON__LPUART1.TCBR[58].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR59  AON__LPUART1.TCBR[59].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR60  AON__LPUART1.TCBR[60].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR61  AON__LPUART1.TCBR[61].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR62  AON__LPUART1.TCBR[62].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR63  AON__LPUART1.TCBR[63].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR64  AON__LPUART1.TCBR[64].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR65  AON__LPUART1.TCBR[65].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR66  AON__LPUART1.TCBR[66].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR67  AON__LPUART1.TCBR[67].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR68  AON__LPUART1.TCBR[68].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR69  AON__LPUART1.TCBR[69].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR70  AON__LPUART1.TCBR[70].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR71  AON__LPUART1.TCBR[71].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR72  AON__LPUART1.TCBR[72].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR73  AON__LPUART1.TCBR[73].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR74  AON__LPUART1.TCBR[74].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR75  AON__LPUART1.TCBR[75].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR76  AON__LPUART1.TCBR[76].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR77  AON__LPUART1.TCBR[77].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR78  AON__LPUART1.TCBR[78].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR79  AON__LPUART1.TCBR[79].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR80  AON__LPUART1.TCBR[80].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR81  AON__LPUART1.TCBR[81].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR82  AON__LPUART1.TCBR[82].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR83  AON__LPUART1.TCBR[83].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR84  AON__LPUART1.TCBR[84].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR85  AON__LPUART1.TCBR[85].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR86  AON__LPUART1.TCBR[86].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR87  AON__LPUART1.TCBR[87].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR88  AON__LPUART1.TCBR[88].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR89  AON__LPUART1.TCBR[89].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR90  AON__LPUART1.TCBR[90].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR91  AON__LPUART1.TCBR[91].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR92  AON__LPUART1.TCBR[92].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR93  AON__LPUART1.TCBR[93].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR94  AON__LPUART1.TCBR[94].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR95  AON__LPUART1.TCBR[95].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR96  AON__LPUART1.TCBR[96].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR97  AON__LPUART1.TCBR[97].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR98  AON__LPUART1.TCBR[98].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR99  AON__LPUART1.TCBR[99].R       /* Transmit Command Burst */
#define AON__LPUART1_TCBR100 AON__LPUART1.TCBR[100].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR101 AON__LPUART1.TCBR[101].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR102 AON__LPUART1.TCBR[102].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR103 AON__LPUART1.TCBR[103].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR104 AON__LPUART1.TCBR[104].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR105 AON__LPUART1.TCBR[105].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR106 AON__LPUART1.TCBR[106].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR107 AON__LPUART1.TCBR[107].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR108 AON__LPUART1.TCBR[108].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR109 AON__LPUART1.TCBR[109].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR110 AON__LPUART1.TCBR[110].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR111 AON__LPUART1.TCBR[111].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR112 AON__LPUART1.TCBR[112].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR113 AON__LPUART1.TCBR[113].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR114 AON__LPUART1.TCBR[114].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR115 AON__LPUART1.TCBR[115].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR116 AON__LPUART1.TCBR[116].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR117 AON__LPUART1.TCBR[117].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR118 AON__LPUART1.TCBR[118].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR119 AON__LPUART1.TCBR[119].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR120 AON__LPUART1.TCBR[120].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR121 AON__LPUART1.TCBR[121].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR122 AON__LPUART1.TCBR[122].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR123 AON__LPUART1.TCBR[123].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR124 AON__LPUART1.TCBR[124].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR125 AON__LPUART1.TCBR[125].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR126 AON__LPUART1.TCBR[126].R      /* Transmit Command Burst */
#define AON__LPUART1_TCBR127 AON__LPUART1.TCBR[127].R      /* Transmit Command Burst */
#define AON__LPUART1_TDBR0   AON__LPUART1.TDBR[0].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR1   AON__LPUART1.TDBR[1].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR2   AON__LPUART1.TDBR[2].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR3   AON__LPUART1.TDBR[3].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR4   AON__LPUART1.TDBR[4].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR5   AON__LPUART1.TDBR[5].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR6   AON__LPUART1.TDBR[6].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR7   AON__LPUART1.TDBR[7].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR8   AON__LPUART1.TDBR[8].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR9   AON__LPUART1.TDBR[9].R        /* Transmit Data Burst */
#define AON__LPUART1_TDBR10  AON__LPUART1.TDBR[10].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR11  AON__LPUART1.TDBR[11].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR12  AON__LPUART1.TDBR[12].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR13  AON__LPUART1.TDBR[13].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR14  AON__LPUART1.TDBR[14].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR15  AON__LPUART1.TDBR[15].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR16  AON__LPUART1.TDBR[16].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR17  AON__LPUART1.TDBR[17].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR18  AON__LPUART1.TDBR[18].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR19  AON__LPUART1.TDBR[19].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR20  AON__LPUART1.TDBR[20].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR21  AON__LPUART1.TDBR[21].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR22  AON__LPUART1.TDBR[22].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR23  AON__LPUART1.TDBR[23].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR24  AON__LPUART1.TDBR[24].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR25  AON__LPUART1.TDBR[25].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR26  AON__LPUART1.TDBR[26].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR27  AON__LPUART1.TDBR[27].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR28  AON__LPUART1.TDBR[28].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR29  AON__LPUART1.TDBR[29].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR30  AON__LPUART1.TDBR[30].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR31  AON__LPUART1.TDBR[31].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR32  AON__LPUART1.TDBR[32].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR33  AON__LPUART1.TDBR[33].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR34  AON__LPUART1.TDBR[34].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR35  AON__LPUART1.TDBR[35].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR36  AON__LPUART1.TDBR[36].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR37  AON__LPUART1.TDBR[37].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR38  AON__LPUART1.TDBR[38].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR39  AON__LPUART1.TDBR[39].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR40  AON__LPUART1.TDBR[40].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR41  AON__LPUART1.TDBR[41].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR42  AON__LPUART1.TDBR[42].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR43  AON__LPUART1.TDBR[43].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR44  AON__LPUART1.TDBR[44].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR45  AON__LPUART1.TDBR[45].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR46  AON__LPUART1.TDBR[46].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR47  AON__LPUART1.TDBR[47].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR48  AON__LPUART1.TDBR[48].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR49  AON__LPUART1.TDBR[49].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR50  AON__LPUART1.TDBR[50].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR51  AON__LPUART1.TDBR[51].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR52  AON__LPUART1.TDBR[52].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR53  AON__LPUART1.TDBR[53].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR54  AON__LPUART1.TDBR[54].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR55  AON__LPUART1.TDBR[55].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR56  AON__LPUART1.TDBR[56].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR57  AON__LPUART1.TDBR[57].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR58  AON__LPUART1.TDBR[58].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR59  AON__LPUART1.TDBR[59].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR60  AON__LPUART1.TDBR[60].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR61  AON__LPUART1.TDBR[61].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR62  AON__LPUART1.TDBR[62].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR63  AON__LPUART1.TDBR[63].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR64  AON__LPUART1.TDBR[64].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR65  AON__LPUART1.TDBR[65].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR66  AON__LPUART1.TDBR[66].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR67  AON__LPUART1.TDBR[67].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR68  AON__LPUART1.TDBR[68].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR69  AON__LPUART1.TDBR[69].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR70  AON__LPUART1.TDBR[70].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR71  AON__LPUART1.TDBR[71].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR72  AON__LPUART1.TDBR[72].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR73  AON__LPUART1.TDBR[73].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR74  AON__LPUART1.TDBR[74].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR75  AON__LPUART1.TDBR[75].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR76  AON__LPUART1.TDBR[76].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR77  AON__LPUART1.TDBR[77].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR78  AON__LPUART1.TDBR[78].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR79  AON__LPUART1.TDBR[79].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR80  AON__LPUART1.TDBR[80].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR81  AON__LPUART1.TDBR[81].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR82  AON__LPUART1.TDBR[82].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR83  AON__LPUART1.TDBR[83].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR84  AON__LPUART1.TDBR[84].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR85  AON__LPUART1.TDBR[85].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR86  AON__LPUART1.TDBR[86].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR87  AON__LPUART1.TDBR[87].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR88  AON__LPUART1.TDBR[88].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR89  AON__LPUART1.TDBR[89].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR90  AON__LPUART1.TDBR[90].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR91  AON__LPUART1.TDBR[91].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR92  AON__LPUART1.TDBR[92].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR93  AON__LPUART1.TDBR[93].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR94  AON__LPUART1.TDBR[94].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR95  AON__LPUART1.TDBR[95].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR96  AON__LPUART1.TDBR[96].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR97  AON__LPUART1.TDBR[97].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR98  AON__LPUART1.TDBR[98].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR99  AON__LPUART1.TDBR[99].R       /* Transmit Data Burst */
#define AON__LPUART1_TDBR100 AON__LPUART1.TDBR[100].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR101 AON__LPUART1.TDBR[101].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR102 AON__LPUART1.TDBR[102].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR103 AON__LPUART1.TDBR[103].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR104 AON__LPUART1.TDBR[104].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR105 AON__LPUART1.TDBR[105].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR106 AON__LPUART1.TDBR[106].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR107 AON__LPUART1.TDBR[107].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR108 AON__LPUART1.TDBR[108].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR109 AON__LPUART1.TDBR[109].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR110 AON__LPUART1.TDBR[110].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR111 AON__LPUART1.TDBR[111].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR112 AON__LPUART1.TDBR[112].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR113 AON__LPUART1.TDBR[113].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR114 AON__LPUART1.TDBR[114].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR115 AON__LPUART1.TDBR[115].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR116 AON__LPUART1.TDBR[116].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR117 AON__LPUART1.TDBR[117].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR118 AON__LPUART1.TDBR[118].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR119 AON__LPUART1.TDBR[119].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR120 AON__LPUART1.TDBR[120].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR121 AON__LPUART1.TDBR[121].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR122 AON__LPUART1.TDBR[122].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR123 AON__LPUART1.TDBR[123].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR124 AON__LPUART1.TDBR[124].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR125 AON__LPUART1.TDBR[125].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR126 AON__LPUART1.TDBR[126].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR127 AON__LPUART1.TDBR[127].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR128 AON__LPUART1.TDBR[128].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR129 AON__LPUART1.TDBR[129].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR130 AON__LPUART1.TDBR[130].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR131 AON__LPUART1.TDBR[131].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR132 AON__LPUART1.TDBR[132].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR133 AON__LPUART1.TDBR[133].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR134 AON__LPUART1.TDBR[134].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR135 AON__LPUART1.TDBR[135].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR136 AON__LPUART1.TDBR[136].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR137 AON__LPUART1.TDBR[137].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR138 AON__LPUART1.TDBR[138].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR139 AON__LPUART1.TDBR[139].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR140 AON__LPUART1.TDBR[140].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR141 AON__LPUART1.TDBR[141].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR142 AON__LPUART1.TDBR[142].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR143 AON__LPUART1.TDBR[143].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR144 AON__LPUART1.TDBR[144].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR145 AON__LPUART1.TDBR[145].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR146 AON__LPUART1.TDBR[146].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR147 AON__LPUART1.TDBR[147].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR148 AON__LPUART1.TDBR[148].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR149 AON__LPUART1.TDBR[149].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR150 AON__LPUART1.TDBR[150].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR151 AON__LPUART1.TDBR[151].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR152 AON__LPUART1.TDBR[152].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR153 AON__LPUART1.TDBR[153].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR154 AON__LPUART1.TDBR[154].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR155 AON__LPUART1.TDBR[155].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR156 AON__LPUART1.TDBR[156].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR157 AON__LPUART1.TDBR[157].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR158 AON__LPUART1.TDBR[158].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR159 AON__LPUART1.TDBR[159].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR160 AON__LPUART1.TDBR[160].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR161 AON__LPUART1.TDBR[161].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR162 AON__LPUART1.TDBR[162].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR163 AON__LPUART1.TDBR[163].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR164 AON__LPUART1.TDBR[164].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR165 AON__LPUART1.TDBR[165].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR166 AON__LPUART1.TDBR[166].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR167 AON__LPUART1.TDBR[167].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR168 AON__LPUART1.TDBR[168].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR169 AON__LPUART1.TDBR[169].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR170 AON__LPUART1.TDBR[170].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR171 AON__LPUART1.TDBR[171].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR172 AON__LPUART1.TDBR[172].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR173 AON__LPUART1.TDBR[173].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR174 AON__LPUART1.TDBR[174].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR175 AON__LPUART1.TDBR[175].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR176 AON__LPUART1.TDBR[176].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR177 AON__LPUART1.TDBR[177].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR178 AON__LPUART1.TDBR[178].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR179 AON__LPUART1.TDBR[179].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR180 AON__LPUART1.TDBR[180].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR181 AON__LPUART1.TDBR[181].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR182 AON__LPUART1.TDBR[182].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR183 AON__LPUART1.TDBR[183].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR184 AON__LPUART1.TDBR[184].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR185 AON__LPUART1.TDBR[185].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR186 AON__LPUART1.TDBR[186].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR187 AON__LPUART1.TDBR[187].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR188 AON__LPUART1.TDBR[188].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR189 AON__LPUART1.TDBR[189].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR190 AON__LPUART1.TDBR[190].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR191 AON__LPUART1.TDBR[191].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR192 AON__LPUART1.TDBR[192].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR193 AON__LPUART1.TDBR[193].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR194 AON__LPUART1.TDBR[194].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR195 AON__LPUART1.TDBR[195].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR196 AON__LPUART1.TDBR[196].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR197 AON__LPUART1.TDBR[197].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR198 AON__LPUART1.TDBR[198].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR199 AON__LPUART1.TDBR[199].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR200 AON__LPUART1.TDBR[200].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR201 AON__LPUART1.TDBR[201].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR202 AON__LPUART1.TDBR[202].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR203 AON__LPUART1.TDBR[203].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR204 AON__LPUART1.TDBR[204].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR205 AON__LPUART1.TDBR[205].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR206 AON__LPUART1.TDBR[206].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR207 AON__LPUART1.TDBR[207].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR208 AON__LPUART1.TDBR[208].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR209 AON__LPUART1.TDBR[209].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR210 AON__LPUART1.TDBR[210].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR211 AON__LPUART1.TDBR[211].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR212 AON__LPUART1.TDBR[212].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR213 AON__LPUART1.TDBR[213].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR214 AON__LPUART1.TDBR[214].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR215 AON__LPUART1.TDBR[215].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR216 AON__LPUART1.TDBR[216].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR217 AON__LPUART1.TDBR[217].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR218 AON__LPUART1.TDBR[218].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR219 AON__LPUART1.TDBR[219].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR220 AON__LPUART1.TDBR[220].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR221 AON__LPUART1.TDBR[221].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR222 AON__LPUART1.TDBR[222].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR223 AON__LPUART1.TDBR[223].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR224 AON__LPUART1.TDBR[224].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR225 AON__LPUART1.TDBR[225].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR226 AON__LPUART1.TDBR[226].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR227 AON__LPUART1.TDBR[227].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR228 AON__LPUART1.TDBR[228].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR229 AON__LPUART1.TDBR[229].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR230 AON__LPUART1.TDBR[230].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR231 AON__LPUART1.TDBR[231].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR232 AON__LPUART1.TDBR[232].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR233 AON__LPUART1.TDBR[233].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR234 AON__LPUART1.TDBR[234].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR235 AON__LPUART1.TDBR[235].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR236 AON__LPUART1.TDBR[236].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR237 AON__LPUART1.TDBR[237].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR238 AON__LPUART1.TDBR[238].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR239 AON__LPUART1.TDBR[239].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR240 AON__LPUART1.TDBR[240].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR241 AON__LPUART1.TDBR[241].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR242 AON__LPUART1.TDBR[242].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR243 AON__LPUART1.TDBR[243].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR244 AON__LPUART1.TDBR[244].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR245 AON__LPUART1.TDBR[245].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR246 AON__LPUART1.TDBR[246].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR247 AON__LPUART1.TDBR[247].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR248 AON__LPUART1.TDBR[248].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR249 AON__LPUART1.TDBR[249].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR250 AON__LPUART1.TDBR[250].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR251 AON__LPUART1.TDBR[251].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR252 AON__LPUART1.TDBR[252].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR253 AON__LPUART1.TDBR[253].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR254 AON__LPUART1.TDBR[254].R      /* Transmit Data Burst */
#define AON__LPUART1_TDBR255 AON__LPUART1.TDBR[255].R      /* Transmit Data Burst */

#define AON__LPUART2_VERID   AON__LPUART2.VERID.R          /* Version ID */
#define AON__LPUART2_PARAM   AON__LPUART2.PARAM.R          /* Parameter */
#define AON__LPUART2_GLOBAL  AON__LPUART2.GLOBAL.R         /* Global */
#define AON__LPUART2_PINCFG  AON__LPUART2.PINCFG.R         /* Pin Configuration */
#define AON__LPUART2_BAUD    AON__LPUART2.BAUD.R           /* Baud Rate */
#define AON__LPUART2_STAT    AON__LPUART2.STAT.R           /* Status */
#define AON__LPUART2_CTRL    AON__LPUART2.CTRL.R           /* Control */
#define AON__LPUART2_DATA    AON__LPUART2.DATA.R           /* Data */
#define AON__LPUART2_MATCH   AON__LPUART2.MATCH.R          /* Match Address */
#define AON__LPUART2_MODIR   AON__LPUART2.MODIR.R          /* MODEM IrDA */
#define AON__LPUART2_FIFO    AON__LPUART2.FIFO.R           /* FIFO */
#define AON__LPUART2_WATER   AON__LPUART2.WATER.R          /* Watermark */
#define AON__LPUART2_DATARO  AON__LPUART2.DATARO.R         /* Data Read-Only */
#define AON__LPUART2_MCR     AON__LPUART2.MCR.R            /* MODEM Control */
#define AON__LPUART2_MSR     AON__LPUART2.MSR.R            /* MODEM Status */
#define AON__LPUART2_REIR    AON__LPUART2.REIR.R           /* Receiver Extended Idle */
#define AON__LPUART2_TEIR    AON__LPUART2.TEIR.R           /* Transmitter Extended Idle */
#define AON__LPUART2_HDCR    AON__LPUART2.HDCR.R           /* Half Duplex Control */
#define AON__LPUART2_TOCR    AON__LPUART2.TOCR.R           /* Timeout Control */
#define AON__LPUART2_TOSR    AON__LPUART2.TOSR.R           /* Timeout Status */
#define AON__LPUART2_TIMEOUT0 AON__LPUART2.TIMEOUT[0].R    /* Timeout N */
#define AON__LPUART2_TIMEOUT1 AON__LPUART2.TIMEOUT[1].R    /* Timeout N */
#define AON__LPUART2_TIMEOUT2 AON__LPUART2.TIMEOUT[2].R    /* Timeout N */
#define AON__LPUART2_TIMEOUT3 AON__LPUART2.TIMEOUT[3].R    /* Timeout N */
#define AON__LPUART2_TCBR0   AON__LPUART2.TCBR[0].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR1   AON__LPUART2.TCBR[1].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR2   AON__LPUART2.TCBR[2].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR3   AON__LPUART2.TCBR[3].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR4   AON__LPUART2.TCBR[4].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR5   AON__LPUART2.TCBR[5].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR6   AON__LPUART2.TCBR[6].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR7   AON__LPUART2.TCBR[7].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR8   AON__LPUART2.TCBR[8].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR9   AON__LPUART2.TCBR[9].R        /* Transmit Command Burst */
#define AON__LPUART2_TCBR10  AON__LPUART2.TCBR[10].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR11  AON__LPUART2.TCBR[11].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR12  AON__LPUART2.TCBR[12].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR13  AON__LPUART2.TCBR[13].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR14  AON__LPUART2.TCBR[14].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR15  AON__LPUART2.TCBR[15].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR16  AON__LPUART2.TCBR[16].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR17  AON__LPUART2.TCBR[17].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR18  AON__LPUART2.TCBR[18].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR19  AON__LPUART2.TCBR[19].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR20  AON__LPUART2.TCBR[20].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR21  AON__LPUART2.TCBR[21].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR22  AON__LPUART2.TCBR[22].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR23  AON__LPUART2.TCBR[23].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR24  AON__LPUART2.TCBR[24].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR25  AON__LPUART2.TCBR[25].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR26  AON__LPUART2.TCBR[26].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR27  AON__LPUART2.TCBR[27].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR28  AON__LPUART2.TCBR[28].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR29  AON__LPUART2.TCBR[29].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR30  AON__LPUART2.TCBR[30].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR31  AON__LPUART2.TCBR[31].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR32  AON__LPUART2.TCBR[32].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR33  AON__LPUART2.TCBR[33].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR34  AON__LPUART2.TCBR[34].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR35  AON__LPUART2.TCBR[35].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR36  AON__LPUART2.TCBR[36].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR37  AON__LPUART2.TCBR[37].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR38  AON__LPUART2.TCBR[38].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR39  AON__LPUART2.TCBR[39].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR40  AON__LPUART2.TCBR[40].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR41  AON__LPUART2.TCBR[41].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR42  AON__LPUART2.TCBR[42].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR43  AON__LPUART2.TCBR[43].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR44  AON__LPUART2.TCBR[44].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR45  AON__LPUART2.TCBR[45].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR46  AON__LPUART2.TCBR[46].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR47  AON__LPUART2.TCBR[47].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR48  AON__LPUART2.TCBR[48].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR49  AON__LPUART2.TCBR[49].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR50  AON__LPUART2.TCBR[50].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR51  AON__LPUART2.TCBR[51].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR52  AON__LPUART2.TCBR[52].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR53  AON__LPUART2.TCBR[53].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR54  AON__LPUART2.TCBR[54].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR55  AON__LPUART2.TCBR[55].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR56  AON__LPUART2.TCBR[56].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR57  AON__LPUART2.TCBR[57].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR58  AON__LPUART2.TCBR[58].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR59  AON__LPUART2.TCBR[59].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR60  AON__LPUART2.TCBR[60].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR61  AON__LPUART2.TCBR[61].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR62  AON__LPUART2.TCBR[62].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR63  AON__LPUART2.TCBR[63].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR64  AON__LPUART2.TCBR[64].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR65  AON__LPUART2.TCBR[65].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR66  AON__LPUART2.TCBR[66].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR67  AON__LPUART2.TCBR[67].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR68  AON__LPUART2.TCBR[68].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR69  AON__LPUART2.TCBR[69].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR70  AON__LPUART2.TCBR[70].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR71  AON__LPUART2.TCBR[71].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR72  AON__LPUART2.TCBR[72].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR73  AON__LPUART2.TCBR[73].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR74  AON__LPUART2.TCBR[74].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR75  AON__LPUART2.TCBR[75].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR76  AON__LPUART2.TCBR[76].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR77  AON__LPUART2.TCBR[77].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR78  AON__LPUART2.TCBR[78].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR79  AON__LPUART2.TCBR[79].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR80  AON__LPUART2.TCBR[80].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR81  AON__LPUART2.TCBR[81].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR82  AON__LPUART2.TCBR[82].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR83  AON__LPUART2.TCBR[83].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR84  AON__LPUART2.TCBR[84].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR85  AON__LPUART2.TCBR[85].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR86  AON__LPUART2.TCBR[86].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR87  AON__LPUART2.TCBR[87].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR88  AON__LPUART2.TCBR[88].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR89  AON__LPUART2.TCBR[89].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR90  AON__LPUART2.TCBR[90].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR91  AON__LPUART2.TCBR[91].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR92  AON__LPUART2.TCBR[92].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR93  AON__LPUART2.TCBR[93].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR94  AON__LPUART2.TCBR[94].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR95  AON__LPUART2.TCBR[95].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR96  AON__LPUART2.TCBR[96].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR97  AON__LPUART2.TCBR[97].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR98  AON__LPUART2.TCBR[98].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR99  AON__LPUART2.TCBR[99].R       /* Transmit Command Burst */
#define AON__LPUART2_TCBR100 AON__LPUART2.TCBR[100].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR101 AON__LPUART2.TCBR[101].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR102 AON__LPUART2.TCBR[102].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR103 AON__LPUART2.TCBR[103].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR104 AON__LPUART2.TCBR[104].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR105 AON__LPUART2.TCBR[105].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR106 AON__LPUART2.TCBR[106].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR107 AON__LPUART2.TCBR[107].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR108 AON__LPUART2.TCBR[108].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR109 AON__LPUART2.TCBR[109].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR110 AON__LPUART2.TCBR[110].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR111 AON__LPUART2.TCBR[111].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR112 AON__LPUART2.TCBR[112].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR113 AON__LPUART2.TCBR[113].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR114 AON__LPUART2.TCBR[114].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR115 AON__LPUART2.TCBR[115].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR116 AON__LPUART2.TCBR[116].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR117 AON__LPUART2.TCBR[117].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR118 AON__LPUART2.TCBR[118].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR119 AON__LPUART2.TCBR[119].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR120 AON__LPUART2.TCBR[120].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR121 AON__LPUART2.TCBR[121].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR122 AON__LPUART2.TCBR[122].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR123 AON__LPUART2.TCBR[123].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR124 AON__LPUART2.TCBR[124].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR125 AON__LPUART2.TCBR[125].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR126 AON__LPUART2.TCBR[126].R      /* Transmit Command Burst */
#define AON__LPUART2_TCBR127 AON__LPUART2.TCBR[127].R      /* Transmit Command Burst */
#define AON__LPUART2_TDBR0   AON__LPUART2.TDBR[0].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR1   AON__LPUART2.TDBR[1].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR2   AON__LPUART2.TDBR[2].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR3   AON__LPUART2.TDBR[3].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR4   AON__LPUART2.TDBR[4].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR5   AON__LPUART2.TDBR[5].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR6   AON__LPUART2.TDBR[6].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR7   AON__LPUART2.TDBR[7].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR8   AON__LPUART2.TDBR[8].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR9   AON__LPUART2.TDBR[9].R        /* Transmit Data Burst */
#define AON__LPUART2_TDBR10  AON__LPUART2.TDBR[10].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR11  AON__LPUART2.TDBR[11].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR12  AON__LPUART2.TDBR[12].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR13  AON__LPUART2.TDBR[13].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR14  AON__LPUART2.TDBR[14].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR15  AON__LPUART2.TDBR[15].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR16  AON__LPUART2.TDBR[16].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR17  AON__LPUART2.TDBR[17].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR18  AON__LPUART2.TDBR[18].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR19  AON__LPUART2.TDBR[19].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR20  AON__LPUART2.TDBR[20].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR21  AON__LPUART2.TDBR[21].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR22  AON__LPUART2.TDBR[22].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR23  AON__LPUART2.TDBR[23].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR24  AON__LPUART2.TDBR[24].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR25  AON__LPUART2.TDBR[25].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR26  AON__LPUART2.TDBR[26].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR27  AON__LPUART2.TDBR[27].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR28  AON__LPUART2.TDBR[28].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR29  AON__LPUART2.TDBR[29].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR30  AON__LPUART2.TDBR[30].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR31  AON__LPUART2.TDBR[31].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR32  AON__LPUART2.TDBR[32].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR33  AON__LPUART2.TDBR[33].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR34  AON__LPUART2.TDBR[34].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR35  AON__LPUART2.TDBR[35].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR36  AON__LPUART2.TDBR[36].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR37  AON__LPUART2.TDBR[37].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR38  AON__LPUART2.TDBR[38].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR39  AON__LPUART2.TDBR[39].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR40  AON__LPUART2.TDBR[40].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR41  AON__LPUART2.TDBR[41].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR42  AON__LPUART2.TDBR[42].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR43  AON__LPUART2.TDBR[43].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR44  AON__LPUART2.TDBR[44].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR45  AON__LPUART2.TDBR[45].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR46  AON__LPUART2.TDBR[46].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR47  AON__LPUART2.TDBR[47].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR48  AON__LPUART2.TDBR[48].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR49  AON__LPUART2.TDBR[49].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR50  AON__LPUART2.TDBR[50].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR51  AON__LPUART2.TDBR[51].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR52  AON__LPUART2.TDBR[52].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR53  AON__LPUART2.TDBR[53].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR54  AON__LPUART2.TDBR[54].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR55  AON__LPUART2.TDBR[55].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR56  AON__LPUART2.TDBR[56].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR57  AON__LPUART2.TDBR[57].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR58  AON__LPUART2.TDBR[58].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR59  AON__LPUART2.TDBR[59].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR60  AON__LPUART2.TDBR[60].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR61  AON__LPUART2.TDBR[61].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR62  AON__LPUART2.TDBR[62].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR63  AON__LPUART2.TDBR[63].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR64  AON__LPUART2.TDBR[64].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR65  AON__LPUART2.TDBR[65].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR66  AON__LPUART2.TDBR[66].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR67  AON__LPUART2.TDBR[67].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR68  AON__LPUART2.TDBR[68].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR69  AON__LPUART2.TDBR[69].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR70  AON__LPUART2.TDBR[70].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR71  AON__LPUART2.TDBR[71].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR72  AON__LPUART2.TDBR[72].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR73  AON__LPUART2.TDBR[73].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR74  AON__LPUART2.TDBR[74].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR75  AON__LPUART2.TDBR[75].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR76  AON__LPUART2.TDBR[76].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR77  AON__LPUART2.TDBR[77].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR78  AON__LPUART2.TDBR[78].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR79  AON__LPUART2.TDBR[79].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR80  AON__LPUART2.TDBR[80].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR81  AON__LPUART2.TDBR[81].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR82  AON__LPUART2.TDBR[82].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR83  AON__LPUART2.TDBR[83].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR84  AON__LPUART2.TDBR[84].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR85  AON__LPUART2.TDBR[85].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR86  AON__LPUART2.TDBR[86].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR87  AON__LPUART2.TDBR[87].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR88  AON__LPUART2.TDBR[88].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR89  AON__LPUART2.TDBR[89].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR90  AON__LPUART2.TDBR[90].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR91  AON__LPUART2.TDBR[91].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR92  AON__LPUART2.TDBR[92].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR93  AON__LPUART2.TDBR[93].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR94  AON__LPUART2.TDBR[94].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR95  AON__LPUART2.TDBR[95].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR96  AON__LPUART2.TDBR[96].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR97  AON__LPUART2.TDBR[97].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR98  AON__LPUART2.TDBR[98].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR99  AON__LPUART2.TDBR[99].R       /* Transmit Data Burst */
#define AON__LPUART2_TDBR100 AON__LPUART2.TDBR[100].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR101 AON__LPUART2.TDBR[101].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR102 AON__LPUART2.TDBR[102].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR103 AON__LPUART2.TDBR[103].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR104 AON__LPUART2.TDBR[104].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR105 AON__LPUART2.TDBR[105].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR106 AON__LPUART2.TDBR[106].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR107 AON__LPUART2.TDBR[107].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR108 AON__LPUART2.TDBR[108].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR109 AON__LPUART2.TDBR[109].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR110 AON__LPUART2.TDBR[110].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR111 AON__LPUART2.TDBR[111].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR112 AON__LPUART2.TDBR[112].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR113 AON__LPUART2.TDBR[113].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR114 AON__LPUART2.TDBR[114].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR115 AON__LPUART2.TDBR[115].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR116 AON__LPUART2.TDBR[116].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR117 AON__LPUART2.TDBR[117].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR118 AON__LPUART2.TDBR[118].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR119 AON__LPUART2.TDBR[119].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR120 AON__LPUART2.TDBR[120].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR121 AON__LPUART2.TDBR[121].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR122 AON__LPUART2.TDBR[122].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR123 AON__LPUART2.TDBR[123].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR124 AON__LPUART2.TDBR[124].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR125 AON__LPUART2.TDBR[125].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR126 AON__LPUART2.TDBR[126].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR127 AON__LPUART2.TDBR[127].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR128 AON__LPUART2.TDBR[128].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR129 AON__LPUART2.TDBR[129].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR130 AON__LPUART2.TDBR[130].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR131 AON__LPUART2.TDBR[131].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR132 AON__LPUART2.TDBR[132].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR133 AON__LPUART2.TDBR[133].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR134 AON__LPUART2.TDBR[134].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR135 AON__LPUART2.TDBR[135].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR136 AON__LPUART2.TDBR[136].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR137 AON__LPUART2.TDBR[137].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR138 AON__LPUART2.TDBR[138].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR139 AON__LPUART2.TDBR[139].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR140 AON__LPUART2.TDBR[140].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR141 AON__LPUART2.TDBR[141].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR142 AON__LPUART2.TDBR[142].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR143 AON__LPUART2.TDBR[143].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR144 AON__LPUART2.TDBR[144].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR145 AON__LPUART2.TDBR[145].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR146 AON__LPUART2.TDBR[146].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR147 AON__LPUART2.TDBR[147].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR148 AON__LPUART2.TDBR[148].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR149 AON__LPUART2.TDBR[149].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR150 AON__LPUART2.TDBR[150].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR151 AON__LPUART2.TDBR[151].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR152 AON__LPUART2.TDBR[152].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR153 AON__LPUART2.TDBR[153].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR154 AON__LPUART2.TDBR[154].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR155 AON__LPUART2.TDBR[155].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR156 AON__LPUART2.TDBR[156].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR157 AON__LPUART2.TDBR[157].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR158 AON__LPUART2.TDBR[158].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR159 AON__LPUART2.TDBR[159].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR160 AON__LPUART2.TDBR[160].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR161 AON__LPUART2.TDBR[161].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR162 AON__LPUART2.TDBR[162].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR163 AON__LPUART2.TDBR[163].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR164 AON__LPUART2.TDBR[164].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR165 AON__LPUART2.TDBR[165].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR166 AON__LPUART2.TDBR[166].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR167 AON__LPUART2.TDBR[167].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR168 AON__LPUART2.TDBR[168].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR169 AON__LPUART2.TDBR[169].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR170 AON__LPUART2.TDBR[170].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR171 AON__LPUART2.TDBR[171].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR172 AON__LPUART2.TDBR[172].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR173 AON__LPUART2.TDBR[173].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR174 AON__LPUART2.TDBR[174].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR175 AON__LPUART2.TDBR[175].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR176 AON__LPUART2.TDBR[176].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR177 AON__LPUART2.TDBR[177].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR178 AON__LPUART2.TDBR[178].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR179 AON__LPUART2.TDBR[179].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR180 AON__LPUART2.TDBR[180].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR181 AON__LPUART2.TDBR[181].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR182 AON__LPUART2.TDBR[182].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR183 AON__LPUART2.TDBR[183].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR184 AON__LPUART2.TDBR[184].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR185 AON__LPUART2.TDBR[185].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR186 AON__LPUART2.TDBR[186].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR187 AON__LPUART2.TDBR[187].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR188 AON__LPUART2.TDBR[188].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR189 AON__LPUART2.TDBR[189].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR190 AON__LPUART2.TDBR[190].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR191 AON__LPUART2.TDBR[191].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR192 AON__LPUART2.TDBR[192].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR193 AON__LPUART2.TDBR[193].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR194 AON__LPUART2.TDBR[194].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR195 AON__LPUART2.TDBR[195].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR196 AON__LPUART2.TDBR[196].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR197 AON__LPUART2.TDBR[197].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR198 AON__LPUART2.TDBR[198].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR199 AON__LPUART2.TDBR[199].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR200 AON__LPUART2.TDBR[200].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR201 AON__LPUART2.TDBR[201].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR202 AON__LPUART2.TDBR[202].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR203 AON__LPUART2.TDBR[203].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR204 AON__LPUART2.TDBR[204].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR205 AON__LPUART2.TDBR[205].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR206 AON__LPUART2.TDBR[206].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR207 AON__LPUART2.TDBR[207].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR208 AON__LPUART2.TDBR[208].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR209 AON__LPUART2.TDBR[209].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR210 AON__LPUART2.TDBR[210].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR211 AON__LPUART2.TDBR[211].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR212 AON__LPUART2.TDBR[212].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR213 AON__LPUART2.TDBR[213].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR214 AON__LPUART2.TDBR[214].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR215 AON__LPUART2.TDBR[215].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR216 AON__LPUART2.TDBR[216].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR217 AON__LPUART2.TDBR[217].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR218 AON__LPUART2.TDBR[218].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR219 AON__LPUART2.TDBR[219].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR220 AON__LPUART2.TDBR[220].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR221 AON__LPUART2.TDBR[221].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR222 AON__LPUART2.TDBR[222].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR223 AON__LPUART2.TDBR[223].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR224 AON__LPUART2.TDBR[224].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR225 AON__LPUART2.TDBR[225].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR226 AON__LPUART2.TDBR[226].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR227 AON__LPUART2.TDBR[227].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR228 AON__LPUART2.TDBR[228].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR229 AON__LPUART2.TDBR[229].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR230 AON__LPUART2.TDBR[230].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR231 AON__LPUART2.TDBR[231].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR232 AON__LPUART2.TDBR[232].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR233 AON__LPUART2.TDBR[233].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR234 AON__LPUART2.TDBR[234].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR235 AON__LPUART2.TDBR[235].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR236 AON__LPUART2.TDBR[236].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR237 AON__LPUART2.TDBR[237].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR238 AON__LPUART2.TDBR[238].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR239 AON__LPUART2.TDBR[239].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR240 AON__LPUART2.TDBR[240].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR241 AON__LPUART2.TDBR[241].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR242 AON__LPUART2.TDBR[242].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR243 AON__LPUART2.TDBR[243].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR244 AON__LPUART2.TDBR[244].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR245 AON__LPUART2.TDBR[245].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR246 AON__LPUART2.TDBR[246].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR247 AON__LPUART2.TDBR[247].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR248 AON__LPUART2.TDBR[248].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR249 AON__LPUART2.TDBR[249].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR250 AON__LPUART2.TDBR[250].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR251 AON__LPUART2.TDBR[251].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR252 AON__LPUART2.TDBR[252].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR253 AON__LPUART2.TDBR[253].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR254 AON__LPUART2.TDBR[254].R      /* Transmit Data Burst */
#define AON__LPUART2_TDBR255 AON__LPUART2.TDBR[255].R      /* Transmit Data Burst */

/* AON_LSTCU */
#define AON__LSTCUA_ERR_STAT AON__LSTCUA.ERR_STAT.R        /* Error Status */
#define AON__LSTCUA_ERR_FM   AON__LSTCUA.ERR_FM.R          /* Error Fault Mapping */
#define AON__LSTCUA_MB_RSTAT0 AON__LSTCUA.MB_RSTAT0.R      /* MBIST Run Status 0 */
#define AON__LSTCUA_MBFM0    AON__LSTCUA.MBFM0.R           /* MBIST Fault Mapping 0 */
#define AON__LSTCUA_STAG     AON__LSTCUA.STAG.R            /* Stagger */
#define AON__LSTCUA_PH1_DUR  AON__LSTCUA.PH1_DUR.R         /* Phase 1 Duration */
#define AON__LSTCUA_MBPTR0   AON__LSTCUA.MBPTR[0].R        /* MBIST Scheduler Pointer */

/* AON_M33_CACHE_CTRL */
#define AON__M33_CACHE_CTRLPC_CCR AON__M33_CACHE_CTRLPC.CCR.R /* Cache Control */
#define AON__M33_CACHE_CTRLPC_CLCR AON__M33_CACHE_CTRLPC.CLCR.R /* Cache Line Control */
#define AON__M33_CACHE_CTRLPC_CSAR AON__M33_CACHE_CTRLPC.CSAR.R /* Cache Search Address */
#define AON__M33_CACHE_CTRLPC_CCVR AON__M33_CACHE_CTRLPC.CCVR.R /* Cache Read/Write Value */

#define AON__M33_CACHE_CTRLPS_CCR AON__M33_CACHE_CTRLPS.CCR.R /* Cache Control */
#define AON__M33_CACHE_CTRLPS_CLCR AON__M33_CACHE_CTRLPS.CLCR.R /* Cache Line Control */
#define AON__M33_CACHE_CTRLPS_CSAR AON__M33_CACHE_CTRLPS.CSAR.R /* Cache Search Address */
#define AON__M33_CACHE_CTRLPS_CCVR AON__M33_CACHE_CTRLPS.CCVR.R /* Cache Read/Write Value */

/* AON_MCM */
#define AON__MCM_ISCR        AON__MCM.ISCR.R               /* Interrupt Status and Control */
#define AON__MCM_ETBCC       AON__MCM.ETBCC.R              /* ETB Counter Control */
#define AON__MCM_ETBRR       AON__MCM.ETBRR.R              /* ETB Reload */
#define AON__MCM_ETBCV       AON__MCM.ETBCV.R              /* ETB Counter Value */
#define AON__MCM_FADR        AON__MCM.FADR.R               /* Write Buffer Fault Address */
#define AON__MCM_FATR        AON__MCM.FATR.R               /* Store Buffer Fault Attributes */
#define AON__MCM_FDR         AON__MCM.FDR.R                /* Store Buffer Fault Data */

/* AON_MICFIL */
#define AON__MICFIL_CTRL_1   AON__MICFIL.CTRL_1.R          /* MICFIL Control 1 */
#define AON__MICFIL_CTRL_2   AON__MICFIL.CTRL_2.R          /* MICFIL Control 2 */
#define AON__MICFIL_STAT     AON__MICFIL.STAT.R            /* MICFIL Status */
#define AON__MICFIL_FIFO_CTRL AON__MICFIL.FIFO_CTRL.R      /* MICFIL FIFO Control */
#define AON__MICFIL_FIFO_STAT AON__MICFIL.FIFO_STAT.R      /* MICFIL FIFO Status */
#define AON__MICFIL_DATACH0  AON__MICFIL.DATACH[0].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH1  AON__MICFIL.DATACH[1].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH2  AON__MICFIL.DATACH[2].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH3  AON__MICFIL.DATACH[3].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH4  AON__MICFIL.DATACH[4].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH5  AON__MICFIL.DATACH[5].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH6  AON__MICFIL.DATACH[6].R       /* MICFIL Output Result */
#define AON__MICFIL_DATACH7  AON__MICFIL.DATACH[7].R       /* MICFIL Output Result */
#define AON__MICFIL_DC_CTRL  AON__MICFIL.DC_CTRL.R         /* MICFIL DC Remover Control */
#define AON__MICFIL_DC_OUT_CTRL AON__MICFIL.DC_OUT_CTRL.R  /* MICFIL Output DC Remover Control */
#define AON__MICFIL_RANGE_CTRL AON__MICFIL.RANGE_CTRL.R    /* MICFIL Range Control */
#define AON__MICFIL_RANGE_STAT AON__MICFIL.RANGE_STAT.R    /* MICFIL Range Status */
#define AON__MICFIL_FSYNC_CTRL AON__MICFIL.FSYNC_CTRL.R    /* Frame Synchronization Control */
#define AON__MICFIL_VERID    AON__MICFIL.VERID.R           /* Version ID */
#define AON__MICFIL_PARAM    AON__MICFIL.PARAM.R           /* Parameter */
#define AON__MICFIL_VAD0_CTRL_1 AON__MICFIL.VADN[0].VAD_CTRL_1.R /* Voice Activity Detector 0 Control */
#define AON__MICFIL_VAD0_CTRL_2 AON__MICFIL.VADN[0].VAD_CTRL_2.R /* Voice Activity Detector 0 Control */
#define AON__MICFIL_VAD0_STAT AON__MICFIL.VADN[0].VAD_STAT.R /* Voice Activity Detector 0 Status */
#define AON__MICFIL_VAD0_SCONFIG AON__MICFIL.VADN[0].VAD_SCONFIG.R /* Voice Activity Detector 0 Signal Configuration */
#define AON__MICFIL_VAD0_NCONFIG AON__MICFIL.VADN[0].VAD_NCONFIG.R /* Voice Activity Detector 0 Noise Configuration */
#define AON__MICFIL_VAD0_NDATA AON__MICFIL.VADN[0].VAD_NDATA.R /* Voice Activity Detector 0 Noise Data */
#define AON__MICFIL_VAD0_ZCD AON__MICFIL.VADN[0].VAD_ZCD.R /* Voice Activity Detector 0 Zero-Crossing Detector */

/* AON_MSGINTR */
#define AON__MSGINTR1_MSIIR0 AON__MSGINTR1.MSIIR0.R        /* Message Signaled Interrupt Index Register 0 */
#define AON__MSGINTR1_MSIR0  AON__MSGINTR1.MSIR0.R         /* Message Signaled Interrupt Register 0 */
#define AON__MSGINTR1_MSIIR1 AON__MSGINTR1.MSIIR1.R        /* Message Signaled Interrupt Index Register 1 */
#define AON__MSGINTR1_MSIR1  AON__MSGINTR1.MSIR1.R         /* Message Signaled Interrupt Register 1 */
#define AON__MSGINTR1_MSIIR2 AON__MSGINTR1.MSIIR2.R        /* Message Signaled Interrupt Index Register 2 */
#define AON__MSGINTR1_MSIR2  AON__MSGINTR1.MSIR2.R         /* Message Signaled Interrupt Register 2 */

#define AON__MSGINTR2_MSIIR0 AON__MSGINTR2.MSIIR0.R        /* Message Signaled Interrupt Index Register 0 */
#define AON__MSGINTR2_MSIR0  AON__MSGINTR2.MSIR0.R         /* Message Signaled Interrupt Register 0 */
#define AON__MSGINTR2_MSIIR1 AON__MSGINTR2.MSIIR1.R        /* Message Signaled Interrupt Index Register 1 */
#define AON__MSGINTR2_MSIR1  AON__MSGINTR2.MSIR1.R         /* Message Signaled Interrupt Register 1 */
#define AON__MSGINTR2_MSIIR2 AON__MSGINTR2.MSIIR2.R        /* Message Signaled Interrupt Index Register 2 */
#define AON__MSGINTR2_MSIR2  AON__MSGINTR2.MSIR2.R         /* Message Signaled Interrupt Register 2 */

/* AON_RGPIO */
#define AON__RGPIO1_VERID    AON__RGPIO1.VERID.R           /* Version ID */
#define AON__RGPIO1_PARAM    AON__RGPIO1.PARAM.R           /* Parameter */
#define AON__RGPIO1_LOCK     AON__RGPIO1.LOCK.R            /* Lock */
#define AON__RGPIO1_PCNS     AON__RGPIO1.PCNS.R            /* Pin Control Nonsecure */
#define AON__RGPIO1_ICNS     AON__RGPIO1.ICNS.R            /* Interrupt Control Nonsecure */
#define AON__RGPIO1_PCNP     AON__RGPIO1.PCNP.R            /* Pin Control Nonprivilege */
#define AON__RGPIO1_ICNP     AON__RGPIO1.ICNP.R            /* Interrupt Control Nonprivilege */
#define AON__RGPIO1_PDOR     AON__RGPIO1.PDOR.R            /* Port Data Output */
#define AON__RGPIO1_PSOR     AON__RGPIO1.PSOR.R            /* Port Set Output */
#define AON__RGPIO1_PCOR     AON__RGPIO1.PCOR.R            /* Port Clear Output */
#define AON__RGPIO1_PTOR     AON__RGPIO1.PTOR.R            /* Port Toggle Output */
#define AON__RGPIO1_PDIR     AON__RGPIO1.PDIR.R            /* Port Data Input */
#define AON__RGPIO1_PDDR     AON__RGPIO1.PDDR.R            /* Port Data Direction */
#define AON__RGPIO1_PIDR     AON__RGPIO1.PIDR.R            /* Port Input Disable */
#define AON__RGPIO1_P0DR     AON__RGPIO1.PDR[0].R          /* Pin Data */
#define AON__RGPIO1_P1DR     AON__RGPIO1.PDR[1].R          /* Pin Data */
#define AON__RGPIO1_P2DR     AON__RGPIO1.PDR[2].R          /* Pin Data */
#define AON__RGPIO1_P3DR     AON__RGPIO1.PDR[3].R          /* Pin Data */
#define AON__RGPIO1_P4DR     AON__RGPIO1.PDR[4].R          /* Pin Data */
#define AON__RGPIO1_P5DR     AON__RGPIO1.PDR[5].R          /* Pin Data */
#define AON__RGPIO1_P6DR     AON__RGPIO1.PDR[6].R          /* Pin Data */
#define AON__RGPIO1_P7DR     AON__RGPIO1.PDR[7].R          /* Pin Data */
#define AON__RGPIO1_P8DR     AON__RGPIO1.PDR[8].R          /* Pin Data */
#define AON__RGPIO1_P9DR     AON__RGPIO1.PDR[9].R          /* Pin Data */
#define AON__RGPIO1_P10DR    AON__RGPIO1.PDR[10].R         /* Pin Data */
#define AON__RGPIO1_P11DR    AON__RGPIO1.PDR[11].R         /* Pin Data */
#define AON__RGPIO1_P12DR    AON__RGPIO1.PDR[12].R         /* Pin Data */
#define AON__RGPIO1_P13DR    AON__RGPIO1.PDR[13].R         /* Pin Data */
#define AON__RGPIO1_P14DR    AON__RGPIO1.PDR[14].R         /* Pin Data */
#define AON__RGPIO1_P15DR    AON__RGPIO1.PDR[15].R         /* Pin Data */
#define AON__RGPIO1_P16DR    AON__RGPIO1.PDR[16].R         /* Pin Data */
#define AON__RGPIO1_P17DR    AON__RGPIO1.PDR[17].R         /* Pin Data */
#define AON__RGPIO1_P18DR    AON__RGPIO1.PDR[18].R         /* Pin Data */
#define AON__RGPIO1_P19DR    AON__RGPIO1.PDR[19].R         /* Pin Data */
#define AON__RGPIO1_P20DR    AON__RGPIO1.PDR[20].R         /* Pin Data */
#define AON__RGPIO1_P21DR    AON__RGPIO1.PDR[21].R         /* Pin Data */
#define AON__RGPIO1_P22DR    AON__RGPIO1.PDR[22].R         /* Pin Data */
#define AON__RGPIO1_P23DR    AON__RGPIO1.PDR[23].R         /* Pin Data */
#define AON__RGPIO1_P24DR    AON__RGPIO1.PDR[24].R         /* Pin Data */
#define AON__RGPIO1_P25DR    AON__RGPIO1.PDR[25].R         /* Pin Data */
#define AON__RGPIO1_P26DR    AON__RGPIO1.PDR[26].R         /* Pin Data */
#define AON__RGPIO1_P27DR    AON__RGPIO1.PDR[27].R         /* Pin Data */
#define AON__RGPIO1_P28DR    AON__RGPIO1.PDR[28].R         /* Pin Data */
#define AON__RGPIO1_P29DR    AON__RGPIO1.PDR[29].R         /* Pin Data */
#define AON__RGPIO1_P30DR    AON__RGPIO1.PDR[30].R         /* Pin Data */
#define AON__RGPIO1_P31DR    AON__RGPIO1.PDR[31].R         /* Pin Data */
#define AON__RGPIO1_ICR0     AON__RGPIO1.ICR0.R            /* Interrupt Control 0 */
#define AON__RGPIO1_ICR1     AON__RGPIO1.ICR1.R            /* Interrupt Control 1 */
#define AON__RGPIO1_ICR2     AON__RGPIO1.ICR2.R            /* Interrupt Control 2 */
#define AON__RGPIO1_ICR3     AON__RGPIO1.ICR3.R            /* Interrupt Control 3 */
#define AON__RGPIO1_ICR4     AON__RGPIO1.ICR4.R            /* Interrupt Control 4 */
#define AON__RGPIO1_ICR5     AON__RGPIO1.ICR5.R            /* Interrupt Control 5 */
#define AON__RGPIO1_ICR6     AON__RGPIO1.ICR6.R            /* Interrupt Control 6 */
#define AON__RGPIO1_ICR7     AON__RGPIO1.ICR7.R            /* Interrupt Control 7 */
#define AON__RGPIO1_ICR8     AON__RGPIO1.ICR8.R            /* Interrupt Control 8 */
#define AON__RGPIO1_ICR9     AON__RGPIO1.ICR9.R            /* Interrupt Control 9 */
#define AON__RGPIO1_ICR10    AON__RGPIO1.ICR10.R           /* Interrupt Control 10 */
#define AON__RGPIO1_ICR11    AON__RGPIO1.ICR11.R           /* Interrupt Control 11 */
#define AON__RGPIO1_ICR12    AON__RGPIO1.ICR12.R           /* Interrupt Control 12 */
#define AON__RGPIO1_ICR13    AON__RGPIO1.ICR13.R           /* Interrupt Control 13 */
#define AON__RGPIO1_ICR14    AON__RGPIO1.ICR14.R           /* Interrupt Control 14 */
#define AON__RGPIO1_ICR15    AON__RGPIO1.ICR15.R           /* Interrupt Control 15 */
#define AON__RGPIO1_ICR16    AON__RGPIO1.ICR16.R           /* Interrupt Control 16 */
#define AON__RGPIO1_ICR17    AON__RGPIO1.ICR17.R           /* Interrupt Control 17 */
#define AON__RGPIO1_ICR18    AON__RGPIO1.ICR18.R           /* Interrupt Control 18 */
#define AON__RGPIO1_ICR19    AON__RGPIO1.ICR19.R           /* Interrupt Control 19 */
#define AON__RGPIO1_ICR20    AON__RGPIO1.ICR20.R           /* Interrupt Control 20 */
#define AON__RGPIO1_ICR21    AON__RGPIO1.ICR21.R           /* Interrupt Control 21 */
#define AON__RGPIO1_ICR22    AON__RGPIO1.ICR22.R           /* Interrupt Control 22 */
#define AON__RGPIO1_ICR23    AON__RGPIO1.ICR23.R           /* Interrupt Control 23 */
#define AON__RGPIO1_ICR24    AON__RGPIO1.ICR24.R           /* Interrupt Control 24 */
#define AON__RGPIO1_ICR25    AON__RGPIO1.ICR25.R           /* Interrupt Control 25 */
#define AON__RGPIO1_ICR26    AON__RGPIO1.ICR26.R           /* Interrupt Control 26 */
#define AON__RGPIO1_ICR27    AON__RGPIO1.ICR27.R           /* Interrupt Control 27 */
#define AON__RGPIO1_ICR28    AON__RGPIO1.ICR28.R           /* Interrupt Control 28 */
#define AON__RGPIO1_ICR29    AON__RGPIO1.ICR29.R           /* Interrupt Control 29 */
#define AON__RGPIO1_ICR30    AON__RGPIO1.ICR30.R           /* Interrupt Control 30 */
#define AON__RGPIO1_ICR31    AON__RGPIO1.ICR31.R           /* Interrupt Control 31 */
#define AON__RGPIO1_GICLR    AON__RGPIO1.GICLR.R           /* Global Interrupt Control Low */
#define AON__RGPIO1_GICHR    AON__RGPIO1.GICHR.R           /* Global Interrupt Control High */
#define AON__RGPIO1_ISFR0    AON__RGPIO1.ISFR[0].R         /* Interrupt Status Flag */
#define AON__RGPIO1_ISFR1    AON__RGPIO1.ISFR[1].R         /* Interrupt Status Flag */

/* AON_ROMCP */
#define AON__ROMCP1_ROMPATCH15D AON__ROMCP1.ROMPATCHD[0].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH14D AON__ROMCP1.ROMPATCHD[1].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH13D AON__ROMCP1.ROMPATCHD[2].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH12D AON__ROMCP1.ROMPATCHD[3].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH11D AON__ROMCP1.ROMPATCHD[4].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH10D AON__ROMCP1.ROMPATCHD[5].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH9D AON__ROMCP1.ROMPATCHD[6].R  /* Data Registers */
#define AON__ROMCP1_ROMPATCH8D AON__ROMCP1.ROMPATCHD[7].R  /* Data Registers */
#define AON__ROMCP1_ROMPATCH7D AON__ROMCP1.ROMPATCHD[8].R  /* Data Registers */
#define AON__ROMCP1_ROMPATCH6D AON__ROMCP1.ROMPATCHD[9].R  /* Data Registers */
#define AON__ROMCP1_ROMPATCH5D AON__ROMCP1.ROMPATCHD[10].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH4D AON__ROMCP1.ROMPATCHD[11].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH3D AON__ROMCP1.ROMPATCHD[12].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH2D AON__ROMCP1.ROMPATCHD[13].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH1D AON__ROMCP1.ROMPATCHD[14].R /* Data Registers */
#define AON__ROMCP1_ROMPATCH0D AON__ROMCP1.ROMPATCHD[15].R /* Data Registers */
#define AON__ROMCP1_ROMPATCHCNTL AON__ROMCP1.ROMPATCHCNTL.R /* Control Register */
#define AON__ROMCP1_ROMPATCHENH AON__ROMCP1.ROMPATCHENH.R  /* Enable Register High */
#define AON__ROMCP1_ROMPATCHENL AON__ROMCP1.ROMPATCHENL.R  /* Enable Register Low */
#define AON__ROMCP1_ROMPATCH0A AON__ROMCP1.ROMPATCHA[0].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH1A AON__ROMCP1.ROMPATCHA[1].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH2A AON__ROMCP1.ROMPATCHA[2].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH3A AON__ROMCP1.ROMPATCHA[3].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH4A AON__ROMCP1.ROMPATCHA[4].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH5A AON__ROMCP1.ROMPATCHA[5].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH6A AON__ROMCP1.ROMPATCHA[6].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH7A AON__ROMCP1.ROMPATCHA[7].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH8A AON__ROMCP1.ROMPATCHA[8].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH9A AON__ROMCP1.ROMPATCHA[9].R  /* Address Registers */
#define AON__ROMCP1_ROMPATCH10A AON__ROMCP1.ROMPATCHA[10].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH11A AON__ROMCP1.ROMPATCHA[11].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH12A AON__ROMCP1.ROMPATCHA[12].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH13A AON__ROMCP1.ROMPATCHA[13].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH14A AON__ROMCP1.ROMPATCHA[14].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH15A AON__ROMCP1.ROMPATCHA[15].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH16A AON__ROMCP1.ROMPATCHA[16].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH17A AON__ROMCP1.ROMPATCHA[17].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH18A AON__ROMCP1.ROMPATCHA[18].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH19A AON__ROMCP1.ROMPATCHA[19].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH20A AON__ROMCP1.ROMPATCHA[20].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH21A AON__ROMCP1.ROMPATCHA[21].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH22A AON__ROMCP1.ROMPATCHA[22].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH23A AON__ROMCP1.ROMPATCHA[23].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH24A AON__ROMCP1.ROMPATCHA[24].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH25A AON__ROMCP1.ROMPATCHA[25].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH26A AON__ROMCP1.ROMPATCHA[26].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH27A AON__ROMCP1.ROMPATCHA[27].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH28A AON__ROMCP1.ROMPATCHA[28].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH29A AON__ROMCP1.ROMPATCHA[29].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH30A AON__ROMCP1.ROMPATCHA[30].R /* Address Registers */
#define AON__ROMCP1_ROMPATCH31A AON__ROMCP1.ROMPATCHA[31].R /* Address Registers */
#define AON__ROMCP1_ROMPATCHSR AON__ROMCP1.ROMPATCHSR.R    /* Status Register */

/* AON_SAI */
#define AON__SAI1_VERID      AON__SAI1.VERID.R             /* Version ID */
#define AON__SAI1_PARAM      AON__SAI1.PARAM.R             /* Parameter */
#define AON__SAI1_TCSR       AON__SAI1.TCSR.R              /* Transmit Control */
#define AON__SAI1_TCR1       AON__SAI1.TCR1.R              /* Transmit Configuration 1 */
#define AON__SAI1_TCR2       AON__SAI1.TCR2.R              /* Transmit Configuration 2 */
#define AON__SAI1_TCR3       AON__SAI1.TCR3.R              /* Transmit Configuration 3 */
#define AON__SAI1_TCR4       AON__SAI1.TCR4.R              /* Transmit Configuration 4 */
#define AON__SAI1_TCR5       AON__SAI1.TCR5.R              /* Transmit Configuration 5 */
#define AON__SAI1_TDR0       AON__SAI1.TDR[0].R            /* Transmit Data */
#define AON__SAI1_TDR1       AON__SAI1.TDR[1].R            /* Transmit Data */
#define AON__SAI1_TFR0       AON__SAI1.TFR[0].R            /* Transmit FIFO */
#define AON__SAI1_TFR1       AON__SAI1.TFR[1].R            /* Transmit FIFO */
#define AON__SAI1_TMR        AON__SAI1.TMR.R               /* Transmit Mask */
#define AON__SAI1_TTCR       AON__SAI1.TTCR.R              /* Transmit Timestamp Control */
#define AON__SAI1_TTSR       AON__SAI1.TTSR.R              /* Transmit Timestamp */
#define AON__SAI1_TBCR       AON__SAI1.TBCR.R              /* Transmit Bit Count */
#define AON__SAI1_TBCTR      AON__SAI1.TBCTR.R             /* Transmit Bit Count Timestamp */
#define AON__SAI1_RCSR       AON__SAI1.RCSR.R              /* Receive Control */
#define AON__SAI1_RCR1       AON__SAI1.RCR1.R              /* Receive Configuration 1 */
#define AON__SAI1_RCR2       AON__SAI1.RCR2.R              /* Receive Configuration 2 */
#define AON__SAI1_RCR3       AON__SAI1.RCR3.R              /* Receive Configuration 3 */
#define AON__SAI1_RCR4       AON__SAI1.RCR4.R              /* Receive Configuration 4 */
#define AON__SAI1_RCR5       AON__SAI1.RCR5.R              /* Receive Configuration 5 */
#define AON__SAI1_RDR0       AON__SAI1.RDR[0].R            /* Receive Data */
#define AON__SAI1_RDR1       AON__SAI1.RDR[1].R            /* Receive Data */
#define AON__SAI1_RFR0       AON__SAI1.RFR[0].R            /* Receive FIFO */
#define AON__SAI1_RFR1       AON__SAI1.RFR[1].R            /* Receive FIFO */
#define AON__SAI1_RMR        AON__SAI1.RMR.R               /* Receive Mask */
#define AON__SAI1_RTCR       AON__SAI1.RTCR.R              /* Receive Timestamp Control */
#define AON__SAI1_RTSR       AON__SAI1.RTSR.R              /* Receive Timestamp */
#define AON__SAI1_RBCR       AON__SAI1.RBCR.R              /* Receive Bit Count */
#define AON__SAI1_RBCTR      AON__SAI1.RBCTR.R             /* Receive Bit Count Timestamp */
#define AON__SAI1_MCR        AON__SAI1.MCR.R               /* MCLK Control */

/* AON_SEMA42 */
#define AON__SEMA42_1_GATE3  AON__SEMA42_1.GATE[0].R       /* Gate */
#define AON__SEMA42_1_GATE2  AON__SEMA42_1.GATE[1].R       /* Gate */
#define AON__SEMA42_1_GATE1  AON__SEMA42_1.GATE[2].R       /* Gate */
#define AON__SEMA42_1_GATE0  AON__SEMA42_1.GATE[3].R       /* Gate */
#define AON__SEMA42_1_GATE7  AON__SEMA42_1.GATE[4].R       /* Gate */
#define AON__SEMA42_1_GATE6  AON__SEMA42_1.GATE[5].R       /* Gate */
#define AON__SEMA42_1_GATE5  AON__SEMA42_1.GATE[6].R       /* Gate */
#define AON__SEMA42_1_GATE4  AON__SEMA42_1.GATE[7].R       /* Gate */
#define AON__SEMA42_1_GATE11 AON__SEMA42_1.GATE[8].R       /* Gate */
#define AON__SEMA42_1_GATE10 AON__SEMA42_1.GATE[9].R       /* Gate */
#define AON__SEMA42_1_GATE9  AON__SEMA42_1.GATE[10].R      /* Gate */
#define AON__SEMA42_1_GATE8  AON__SEMA42_1.GATE[11].R      /* Gate */
#define AON__SEMA42_1_GATE15 AON__SEMA42_1.GATE[12].R      /* Gate */
#define AON__SEMA42_1_GATE14 AON__SEMA42_1.GATE[13].R      /* Gate */
#define AON__SEMA42_1_GATE13 AON__SEMA42_1.GATE[14].R      /* Gate */
#define AON__SEMA42_1_GATE12 AON__SEMA42_1.GATE[15].R      /* Gate */
#define AON__SEMA42_1_GATE19 AON__SEMA42_1.GATE[16].R      /* Gate */
#define AON__SEMA42_1_GATE18 AON__SEMA42_1.GATE[17].R      /* Gate */
#define AON__SEMA42_1_GATE17 AON__SEMA42_1.GATE[18].R      /* Gate */
#define AON__SEMA42_1_GATE16 AON__SEMA42_1.GATE[19].R      /* Gate */
#define AON__SEMA42_1_GATE23 AON__SEMA42_1.GATE[20].R      /* Gate */
#define AON__SEMA42_1_GATE22 AON__SEMA42_1.GATE[21].R      /* Gate */
#define AON__SEMA42_1_GATE21 AON__SEMA42_1.GATE[22].R      /* Gate */
#define AON__SEMA42_1_GATE20 AON__SEMA42_1.GATE[23].R      /* Gate */
#define AON__SEMA42_1_GATE27 AON__SEMA42_1.GATE[24].R      /* Gate */
#define AON__SEMA42_1_GATE26 AON__SEMA42_1.GATE[25].R      /* Gate */
#define AON__SEMA42_1_GATE25 AON__SEMA42_1.GATE[26].R      /* Gate */
#define AON__SEMA42_1_GATE24 AON__SEMA42_1.GATE[27].R      /* Gate */
#define AON__SEMA42_1_GATE31 AON__SEMA42_1.GATE[28].R      /* Gate */
#define AON__SEMA42_1_GATE30 AON__SEMA42_1.GATE[29].R      /* Gate */
#define AON__SEMA42_1_GATE29 AON__SEMA42_1.GATE[30].R      /* Gate */
#define AON__SEMA42_1_GATE28 AON__SEMA42_1.GATE[31].R      /* Gate */
#define AON__SEMA42_1_GATE35 AON__SEMA42_1.GATE[32].R      /* Gate */
#define AON__SEMA42_1_GATE34 AON__SEMA42_1.GATE[33].R      /* Gate */
#define AON__SEMA42_1_GATE33 AON__SEMA42_1.GATE[34].R      /* Gate */
#define AON__SEMA42_1_GATE32 AON__SEMA42_1.GATE[35].R      /* Gate */
#define AON__SEMA42_1_GATE39 AON__SEMA42_1.GATE[36].R      /* Gate */
#define AON__SEMA42_1_GATE38 AON__SEMA42_1.GATE[37].R      /* Gate */
#define AON__SEMA42_1_GATE37 AON__SEMA42_1.GATE[38].R      /* Gate */
#define AON__SEMA42_1_GATE36 AON__SEMA42_1.GATE[39].R      /* Gate */
#define AON__SEMA42_1_GATE43 AON__SEMA42_1.GATE[40].R      /* Gate */
#define AON__SEMA42_1_GATE42 AON__SEMA42_1.GATE[41].R      /* Gate */
#define AON__SEMA42_1_GATE41 AON__SEMA42_1.GATE[42].R      /* Gate */
#define AON__SEMA42_1_GATE40 AON__SEMA42_1.GATE[43].R      /* Gate */
#define AON__SEMA42_1_GATE47 AON__SEMA42_1.GATE[44].R      /* Gate */
#define AON__SEMA42_1_GATE46 AON__SEMA42_1.GATE[45].R      /* Gate */
#define AON__SEMA42_1_GATE45 AON__SEMA42_1.GATE[46].R      /* Gate */
#define AON__SEMA42_1_GATE44 AON__SEMA42_1.GATE[47].R      /* Gate */
#define AON__SEMA42_1_GATE51 AON__SEMA42_1.GATE[48].R      /* Gate */
#define AON__SEMA42_1_GATE50 AON__SEMA42_1.GATE[49].R      /* Gate */
#define AON__SEMA42_1_GATE49 AON__SEMA42_1.GATE[50].R      /* Gate */
#define AON__SEMA42_1_GATE48 AON__SEMA42_1.GATE[51].R      /* Gate */
#define AON__SEMA42_1_GATE55 AON__SEMA42_1.GATE[52].R      /* Gate */
#define AON__SEMA42_1_GATE54 AON__SEMA42_1.GATE[53].R      /* Gate */
#define AON__SEMA42_1_GATE53 AON__SEMA42_1.GATE[54].R      /* Gate */
#define AON__SEMA42_1_GATE52 AON__SEMA42_1.GATE[55].R      /* Gate */
#define AON__SEMA42_1_GATE59 AON__SEMA42_1.GATE[56].R      /* Gate */
#define AON__SEMA42_1_GATE58 AON__SEMA42_1.GATE[57].R      /* Gate */
#define AON__SEMA42_1_GATE57 AON__SEMA42_1.GATE[58].R      /* Gate */
#define AON__SEMA42_1_GATE56 AON__SEMA42_1.GATE[59].R      /* Gate */
#define AON__SEMA42_1_GATE63 AON__SEMA42_1.GATE[60].R      /* Gate */
#define AON__SEMA42_1_GATE62 AON__SEMA42_1.GATE[61].R      /* Gate */
#define AON__SEMA42_1_GATE61 AON__SEMA42_1.GATE[62].R      /* Gate */
#define AON__SEMA42_1_GATE60 AON__SEMA42_1.GATE[63].R      /* Gate */
#define AON__SEMA42_1_RSTGT_R AON__SEMA42_1.RSTGT.R.R      /* Reset Gate Read */
#define AON__SEMA42_1_RSTGT_W AON__SEMA42_1.RSTGT.W.R      /* Reset Gate Write */

/* AON_SYSPM */
#define AON__M33_PCF1_PMCR   AON__M33_PCF1.PMCR[0].PMCR.R  /* Performance Monitor Control */
#define AON__M33_PCF1_PMICTR_HI AON__M33_PCF1.PMCR[0].PMICTR_HI.R /* Performance Monitor Instruction Counter */
#define AON__M33_PCF1_PMICTR_LO AON__M33_PCF1.PMCR[0].PMICTR_LO.R /* Performance Monitor Instruction Counter */
#define AON__M33_PCF1_PMECTR1_HI AON__M33_PCF1.PMCR[0].PMECTR[0].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PCF1_PMECTR1_LO AON__M33_PCF1.PMCR[0].PMECTR[0].LO.R /* Performance Monitor Event Counter */
#define AON__M33_PCF1_PMECTR2_HI AON__M33_PCF1.PMCR[0].PMECTR[1].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PCF1_PMECTR2_LO AON__M33_PCF1.PMCR[0].PMECTR[1].LO.R /* Performance Monitor Event Counter */
#define AON__M33_PCF1_PMECTR3_HI AON__M33_PCF1.PMCR[0].PMECTR[2].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PCF1_PMECTR3_LO AON__M33_PCF1.PMCR[0].PMECTR[2].LO.R /* Performance Monitor Event Counter */

#define AON__M33_PSF1_PMCR   AON__M33_PSF1.PMCR[0].PMCR.R  /* Performance Monitor Control */
#define AON__M33_PSF1_PMICTR_HI AON__M33_PSF1.PMCR[0].PMICTR_HI.R /* Performance Monitor Instruction Counter */
#define AON__M33_PSF1_PMICTR_LO AON__M33_PSF1.PMCR[0].PMICTR_LO.R /* Performance Monitor Instruction Counter */
#define AON__M33_PSF1_PMECTR1_HI AON__M33_PSF1.PMCR[0].PMECTR[0].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PSF1_PMECTR1_LO AON__M33_PSF1.PMCR[0].PMECTR[0].LO.R /* Performance Monitor Event Counter */
#define AON__M33_PSF1_PMECTR2_HI AON__M33_PSF1.PMCR[0].PMECTR[1].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PSF1_PMECTR2_LO AON__M33_PSF1.PMCR[0].PMECTR[1].LO.R /* Performance Monitor Event Counter */
#define AON__M33_PSF1_PMECTR3_HI AON__M33_PSF1.PMCR[0].PMECTR[2].HI.R /* Performance Monitor Event Counter */
#define AON__M33_PSF1_PMECTR3_LO AON__M33_PSF1.PMCR[0].PMECTR[2].LO.R /* Performance Monitor Event Counter */

/* AON_TCU */
#define AON__TCU_tcu_magic_kw__magic_kw0 AON__TCU.TCU_MAGIC_KW__MAGIC_KW0.R /* Magic KW0 */
#define AON__TCU_tcu_magic_kw__magic_kw1 AON__TCU.TCU_MAGIC_KW__MAGIC_KW1.R /* Magic KW1 */
#define AON__TCU_tcu_crr_ipt_core_hold AON__TCU.TCU_CRR_IPT_CORE_HOLD.R /* ipc_core_hold */
#define AON__TCU_tcu_mtr_mct_access_ AON__TCU.TCU_MTR_MCT_ACCESS_.R /* MCT Test Mode CTRL Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_algosel0 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL0.R /* MCT Launch ALGOSEL0 Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_algosel1 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_ALGOSEL1.R /* MCT Launch ALGOSEL1 Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_bistsel0 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL0.R /* MCT Launch BISTSEL0 Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_bistsel1 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL1.R /* MCT Launch BISTSEL1 Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_bistsel2 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL2.R /* MCT Launch BISTSEL2 Reg */
#define AON__TCU_tcu_mtr_mct_access__mct_launch_bistsel3 AON__TCU.TCU_MTR_MCT_ACCESS__MCT_LAUNCH_BISTSEL3.R /* MCT Launch BISTSEL2 Reg */
#define AON__TCU_tcu_mtr_direct_bist_access_ AON__TCU.TCU_MTR_DIRECT_BIST_ACCESS_.R /* Direct BIST Access CTRL Reg */
#define AON__TCU_tcu_pll_counter AON__TCU.TCU_PLL_COUNTER.R /* tcu pll counter reg */
#define AON__TCU_tcu_dft_fuse AON__TCU.TCU_DFT_FUSE.R      /* observe MIX fuse state and override it */

/* AON_TRDC_MGR */
#define AON__TRDC_MGR_TRDC_CR AON__TRDC_MGR.TRDC_CR.R      /* TRDC Register */
#define AON__TRDC_MGR_TRDC_HWCFG0 AON__TRDC_MGR.TRDC_HWCFG0.R /* TRDC Hardware Configuration Register 0 */
#define AON__TRDC_MGR_TRDC_HWCFG1 AON__TRDC_MGR.TRDC_HWCFG1.R /* TRDC Hardware Configuration Register 1 */
#define AON__TRDC_MGR_TRDC_HWCFG2 AON__TRDC_MGR.TRDC_HWCFG2.R /* TRDC Hardware Configuration Register 2 */
#define AON__TRDC_MGR_TRDC_HWCFG3 AON__TRDC_MGR.TRDC_HWCFG3.R /* TRDC Hardware Configuration Register 3 */
#define AON__TRDC_MGR_DACFG0 AON__TRDC_MGR.DACFG0.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG1 AON__TRDC_MGR.DACFG1.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG2 AON__TRDC_MGR.DACFG2.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG3 AON__TRDC_MGR.DACFG3.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG4 AON__TRDC_MGR.DACFG4.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG5 AON__TRDC_MGR.DACFG5.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG6 AON__TRDC_MGR.DACFG6.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG7 AON__TRDC_MGR.DACFG7.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG8 AON__TRDC_MGR.DACFG8.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG9 AON__TRDC_MGR.DACFG9.R        /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG10 AON__TRDC_MGR.DACFG10.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG11 AON__TRDC_MGR.DACFG11.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG12 AON__TRDC_MGR.DACFG12.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG13 AON__TRDC_MGR.DACFG13.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG14 AON__TRDC_MGR.DACFG14.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG15 AON__TRDC_MGR.DACFG15.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG16 AON__TRDC_MGR.DACFG16.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG17 AON__TRDC_MGR.DACFG17.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG18 AON__TRDC_MGR.DACFG18.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG19 AON__TRDC_MGR.DACFG19.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG20 AON__TRDC_MGR.DACFG20.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG21 AON__TRDC_MGR.DACFG21.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG22 AON__TRDC_MGR.DACFG22.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG23 AON__TRDC_MGR.DACFG23.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG24 AON__TRDC_MGR.DACFG24.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG25 AON__TRDC_MGR.DACFG25.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG26 AON__TRDC_MGR.DACFG26.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG27 AON__TRDC_MGR.DACFG27.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG28 AON__TRDC_MGR.DACFG28.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG29 AON__TRDC_MGR.DACFG29.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG30 AON__TRDC_MGR.DACFG30.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG31 AON__TRDC_MGR.DACFG31.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG32 AON__TRDC_MGR.DACFG32.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG33 AON__TRDC_MGR.DACFG33.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG34 AON__TRDC_MGR.DACFG34.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG35 AON__TRDC_MGR.DACFG35.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG36 AON__TRDC_MGR.DACFG36.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG37 AON__TRDC_MGR.DACFG37.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG38 AON__TRDC_MGR.DACFG38.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_DACFG39 AON__TRDC_MGR.DACFG39.R      /* Domain Assignment Configuration Register */
#define AON__TRDC_MGR_TRDC_IDAU_CR AON__TRDC_MGR.TRDC_IDAU_CR.R /* TRDC IDAU Control Register */
#define AON__TRDC_MGR_TRDC_FLW_CTL AON__TRDC_MGR.TRDC_FLW_CTL.R /* TRDC FLW Control */
#define AON__TRDC_MGR_TRDC_FLW_PBASE AON__TRDC_MGR.TRDC_FLW_PBASE.R /* TRDC FLW Physical Base */
#define AON__TRDC_MGR_TRDC_FLW_ABASE AON__TRDC_MGR.TRDC_FLW_ABASE.R /* TRDC FLW Array Base */
#define AON__TRDC_MGR_TRDC_FLW_BCNT AON__TRDC_MGR.TRDC_FLW_BCNT.R /* TRDC FLW Block Count */
#define AON__TRDC_MGR_TRDC_FDID AON__TRDC_MGR.TRDC_FDID.R  /* TRDC Fault Domain ID */
#define AON__TRDC_MGR_TRDC_DERRLOC0 AON__TRDC_MGR.TRDC_DERRLOC[0].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC1 AON__TRDC_MGR.TRDC_DERRLOC[1].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC2 AON__TRDC_MGR.TRDC_DERRLOC[2].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC3 AON__TRDC_MGR.TRDC_DERRLOC[3].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC4 AON__TRDC_MGR.TRDC_DERRLOC[4].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC5 AON__TRDC_MGR.TRDC_DERRLOC[5].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC6 AON__TRDC_MGR.TRDC_DERRLOC[6].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC7 AON__TRDC_MGR.TRDC_DERRLOC[7].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC8 AON__TRDC_MGR.TRDC_DERRLOC[8].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC9 AON__TRDC_MGR.TRDC_DERRLOC[9].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC10 AON__TRDC_MGR.TRDC_DERRLOC[10].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC11 AON__TRDC_MGR.TRDC_DERRLOC[11].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC12 AON__TRDC_MGR.TRDC_DERRLOC[12].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC13 AON__TRDC_MGR.TRDC_DERRLOC[13].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC14 AON__TRDC_MGR.TRDC_DERRLOC[14].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_TRDC_DERRLOC15 AON__TRDC_MGR.TRDC_DERRLOC[15].R /* TRDC Domain Error Location Register */
#define AON__TRDC_MGR_MBC0_DERR_W0 AON__TRDC_MGR.MBC_DERR[0].W0.R /* MBC Domain Error Word0 Register */
#define AON__TRDC_MGR_MBC0_DERR_W1 AON__TRDC_MGR.MBC_DERR[0].W1.R /* MBC Domain Error Word1 Register */
#define AON__TRDC_MGR_MBC0_DERR_W3 AON__TRDC_MGR.MBC_DERR[0].W3.R /* MBC Domain Error Word3 Register */
#define AON__TRDC_MGR_MBC1_DERR_W0 AON__TRDC_MGR.MBC_DERR[1].W0.R /* MBC Domain Error Word0 Register */
#define AON__TRDC_MGR_MBC1_DERR_W1 AON__TRDC_MGR.MBC_DERR[1].W1.R /* MBC Domain Error Word1 Register */
#define AON__TRDC_MGR_MBC1_DERR_W3 AON__TRDC_MGR.MBC_DERR[1].W3.R /* MBC Domain Error Word3 Register */
#define AON__TRDC_MGR_MRC0_DERR_W0 AON__TRDC_MGR.MRC_DERR[0].W0.R /* MRC Domain Error Word0 Register */
#define AON__TRDC_MGR_MRC0_DERR_W1 AON__TRDC_MGR.MRC_DERR[0].W1.R /* MRC Domain Error Word1 Register */
#define AON__TRDC_MGR_MRC0_DERR_W3 AON__TRDC_MGR.MRC_DERR[0].W3.R /* MRC Domain Error Word3 Register */
#define AON__TRDC_MGR_PID16  AON__TRDC_MGR.PID16.R         /* Process Identifier */
#define AON__TRDC_MGR_MDA_W0_0_DFMT1 AON__TRDC_MGR.MDA_W0_0_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_1_DFMT1 AON__TRDC_MGR.MDA_W0_1_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_2_DFMT1 AON__TRDC_MGR.MDA_W0_2_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_3_DFMT1 AON__TRDC_MGR.MDA_W0_3_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_4_DFMT1 AON__TRDC_MGR.MDA_W0_4_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_5_DFMT1 AON__TRDC_MGR.MDA_W0_5_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_6_DFMT1 AON__TRDC_MGR.MDA_W0_6_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_7_DFMT1 AON__TRDC_MGR.MDA_W0_7_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_8_DFMT1 AON__TRDC_MGR.MDA_W0_8_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_9_DFMT1 AON__TRDC_MGR.MDA_W0_9_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_10_DFMT1 AON__TRDC_MGR.MDA_W0_10_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_11_DFMT1 AON__TRDC_MGR.MDA_W0_11_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_12_DFMT1 AON__TRDC_MGR.MDA_W0_12_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_13_DFMT1 AON__TRDC_MGR.MDA_W0_13_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_14_DFMT1 AON__TRDC_MGR.MDA_W0_14_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_15_DFMT1 AON__TRDC_MGR.MDA_W0_15_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_16_DFMT0 AON__TRDC_MGR.MDA_W0_16_DFMT0.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W1_16_DFMT0 AON__TRDC_MGR.MDA_W1_16_DFMT0.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W2_16_DFMT0 AON__TRDC_MGR.MDA_W2_16_DFMT0.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_17_DFMT1 AON__TRDC_MGR.MDA_W0_17_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_18_DFMT1 AON__TRDC_MGR.MDA_W0_18_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_19_DFMT1 AON__TRDC_MGR.MDA_W0_19_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_20_DFMT1 AON__TRDC_MGR.MDA_W0_20_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_21_DFMT1 AON__TRDC_MGR.MDA_W0_21_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_22_DFMT1 AON__TRDC_MGR.MDA_W0_22_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_23_DFMT1 AON__TRDC_MGR.MDA_W0_23_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_24_DFMT1 AON__TRDC_MGR.MDA_W0_24_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_25_DFMT1 AON__TRDC_MGR.MDA_W0_25_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_26_DFMT1 AON__TRDC_MGR.MDA_W0_26_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_27_DFMT1 AON__TRDC_MGR.MDA_W0_27_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_28_DFMT1 AON__TRDC_MGR.MDA_W0_28_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_29_DFMT1 AON__TRDC_MGR.MDA_W0_29_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_30_DFMT1 AON__TRDC_MGR.MDA_W0_30_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_31_DFMT1 AON__TRDC_MGR.MDA_W0_31_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_32_DFMT1 AON__TRDC_MGR.MDA_W0_32_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_33_DFMT1 AON__TRDC_MGR.MDA_W0_33_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_34_DFMT1 AON__TRDC_MGR.MDA_W0_34_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_35_DFMT1 AON__TRDC_MGR.MDA_W0_35_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_36_DFMT1 AON__TRDC_MGR.MDA_W0_36_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_37_DFMT1 AON__TRDC_MGR.MDA_W0_37_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_38_DFMT1 AON__TRDC_MGR.MDA_W0_38_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MDA_W0_39_DFMT1 AON__TRDC_MGR.MDA_W0_39_DFMT1.R /* DAC Master Domain Assignment Register */
#define AON__TRDC_MGR_MBC0_MEM0_GLBCFG AON__TRDC_MGR.MBC0_MEM_GLBCFG[0].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC0_MEM1_GLBCFG AON__TRDC_MGR.MBC0_MEM_GLBCFG[1].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC0_MEM2_GLBCFG AON__TRDC_MGR.MBC0_MEM_GLBCFG[2].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC0_MEM3_GLBCFG AON__TRDC_MGR.MBC0_MEM_GLBCFG[3].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC0_NSE_BLK_INDEX AON__TRDC_MGR.MBC0_NSE_BLK_INDEX.R /* MBC NonSecure Enable Block Index */
#define AON__TRDC_MGR_MBC0_NSE_BLK_SET AON__TRDC_MGR.MBC0_NSE_BLK_SET.R /* MBC NonSecure Enable Block Set */
#define AON__TRDC_MGR_MBC0_NSE_BLK_CLR AON__TRDC_MGR.MBC0_NSE_BLK_CLR.R /* MBC NonSecure Enable Block Clear */
#define AON__TRDC_MGR_MBC0_NSE_BLK_CLR_ALL AON__TRDC_MGR.MBC0_NSE_BLK_CLR_ALL.R /* MBC NonSecure Enable Block Clear All */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC0 AON__TRDC_MGR.MBC0_MEMN_GLBAC[0].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC1 AON__TRDC_MGR.MBC0_MEMN_GLBAC[1].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC2 AON__TRDC_MGR.MBC0_MEMN_GLBAC[2].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC3 AON__TRDC_MGR.MBC0_MEMN_GLBAC[3].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC4 AON__TRDC_MGR.MBC0_MEMN_GLBAC[4].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC5 AON__TRDC_MGR.MBC0_MEMN_GLBAC[5].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC6 AON__TRDC_MGR.MBC0_MEMN_GLBAC[6].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_MEMN_GLBAC7 AON__TRDC_MGR.MBC0_MEMN_GLBAC[7].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM0_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM0_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM0_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM0_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM0_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM0_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM1_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM1_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM1_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM1_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM1_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM1_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM2_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM2_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM2_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM2_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM2_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM2_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM3_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM3_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM3_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM3_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM3_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM3_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM4_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM4_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM4_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM4_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM4_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM4_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM5_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM5_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM5_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM5_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM5_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM5_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM6_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM6_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM6_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM6_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM6_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM6_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM7_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM7_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM7_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM7_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM7_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM7_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM8_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM8_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM8_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM8_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM8_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM8_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM9_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM9_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM9_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM9_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM9_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM9_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM10_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM10_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM10_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM10_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM10_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM10_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM11_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM11_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM11_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM11_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM11_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM11_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM12_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM12_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM12_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM12_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM12_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM12_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM13_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM13_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM13_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM13_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM13_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM13_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM14_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM14_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM14_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM14_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM14_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM14_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W4 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W4.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W5 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W5.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W6 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W6.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W7 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W7.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W8 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W8.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W9 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W9.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W10 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W10.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W11 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W11.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W12 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W12.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W13 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W13.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W14 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W14.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_CFG_W15 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_CFG_W15.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W1 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_NSE_W1.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W2 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_NSE_W2.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM0_BLK_NSE_W3 AON__TRDC_MGR.MBC0_DOM15_MEM0_BLK_NSE_W3.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM15_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM15_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM2_BLK_CFG_W0 AON__TRDC_MGR.MBC0_DOM15_MEM2_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC0_DOM15_MEM2_BLK_NSE_W0 AON__TRDC_MGR.MBC0_DOM15_MEM2_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_MEM0_GLBCFG AON__TRDC_MGR.MBC1_MEM_GLBCFG[0].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC1_MEM1_GLBCFG AON__TRDC_MGR.MBC1_MEM_GLBCFG[1].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC1_MEM2_GLBCFG AON__TRDC_MGR.MBC1_MEM_GLBCFG[2].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC1_MEM3_GLBCFG AON__TRDC_MGR.MBC1_MEM_GLBCFG[3].R /* MBC Global Configuration Register */
#define AON__TRDC_MGR_MBC1_NSE_BLK_INDEX AON__TRDC_MGR.MBC1_NSE_BLK_INDEX.R /* MBC NonSecure Enable Block Index */
#define AON__TRDC_MGR_MBC1_NSE_BLK_SET AON__TRDC_MGR.MBC1_NSE_BLK_SET.R /* MBC NonSecure Enable Block Set */
#define AON__TRDC_MGR_MBC1_NSE_BLK_CLR AON__TRDC_MGR.MBC1_NSE_BLK_CLR.R /* MBC NonSecure Enable Block Clear */
#define AON__TRDC_MGR_MBC1_NSE_BLK_CLR_ALL AON__TRDC_MGR.MBC1_NSE_BLK_CLR_ALL.R /* MBC NonSecure Enable Block Clear All */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC0 AON__TRDC_MGR.MBC1_MEMN_GLBAC[0].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC1 AON__TRDC_MGR.MBC1_MEMN_GLBAC[1].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC2 AON__TRDC_MGR.MBC1_MEMN_GLBAC[2].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC3 AON__TRDC_MGR.MBC1_MEMN_GLBAC[3].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC4 AON__TRDC_MGR.MBC1_MEMN_GLBAC[4].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC5 AON__TRDC_MGR.MBC1_MEMN_GLBAC[5].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC6 AON__TRDC_MGR.MBC1_MEMN_GLBAC[6].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_MEMN_GLBAC7 AON__TRDC_MGR.MBC1_MEMN_GLBAC[7].R /* MBC Global Access Control */
#define AON__TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM0_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM0_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM0_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM0_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM0_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM0_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM0_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM0_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM0_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM0_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM0_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM1_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM1_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM1_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM1_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM1_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM1_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM1_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM1_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM1_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM1_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM1_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM2_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM2_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM2_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM2_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM2_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM2_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM2_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM2_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM2_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM2_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM2_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM3_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM3_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM3_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM3_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM3_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM3_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM3_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM3_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM3_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM3_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM3_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM4_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM4_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM4_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM4_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM4_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM4_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM4_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM4_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM4_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM4_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM4_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM5_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM5_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM5_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM5_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM5_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM5_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM5_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM5_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM5_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM5_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM5_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM6_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM6_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM6_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM6_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM6_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM6_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM6_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM6_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM6_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM6_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM6_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM7_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM7_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM7_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM7_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM7_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM7_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM7_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM7_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM7_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM7_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM7_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM8_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM8_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM8_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM8_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM8_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM8_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM8_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM8_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM8_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM8_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM8_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM9_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM9_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM9_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM9_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM9_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM9_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM9_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM9_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM9_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM9_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM9_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM10_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM10_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM10_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM10_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM10_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM10_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM10_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM10_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM10_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM10_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM10_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM11_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM11_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM11_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM11_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM11_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM11_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM11_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM11_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM11_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM11_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM11_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM12_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM12_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM12_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM12_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM12_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM12_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM12_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM12_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM12_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM12_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM12_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM13_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM13_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM13_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM13_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM13_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM13_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM13_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM13_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM13_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM13_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM13_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM14_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM14_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM14_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM14_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM14_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM14_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM14_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM14_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM14_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM14_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM14_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM15_MEM0_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM15_MEM0_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM15_MEM0_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM0_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM15_MEM0_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM0_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM15_MEM0_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W0 AON__TRDC_MGR.MBC1_DOM15_MEM1_BLK_CFG_W0.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W1 AON__TRDC_MGR.MBC1_DOM15_MEM1_BLK_CFG_W1.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W2 AON__TRDC_MGR.MBC1_DOM15_MEM1_BLK_CFG_W2.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM1_BLK_CFG_W3 AON__TRDC_MGR.MBC1_DOM15_MEM1_BLK_CFG_W3.R /* MBC Memory Block Configuration Word */
#define AON__TRDC_MGR_MBC1_DOM15_MEM1_BLK_NSE_W0 AON__TRDC_MGR.MBC1_DOM15_MEM1_BLK_NSE_W0.R /* MBC Memory Block NonSecure Enable Word */
#define AON__TRDC_MGR_MRC0_GLBCFG AON__TRDC_MGR.MRC0_GLBCFG.R /* MRC Global Configuration Register */
#define AON__TRDC_MGR_MRC0_NSE_RGN_INDIRECT AON__TRDC_MGR.MRC0_NSE_RGN_INDIRECT.R /* MRC NonSecure Enable Region Indirect */
#define AON__TRDC_MGR_MRC0_NSE_RGN_SET AON__TRDC_MGR.MRC0_NSE_RGN_SET.R /* MRC NonSecure Enable Region Set */
#define AON__TRDC_MGR_MRC0_NSE_RGN_CLR AON__TRDC_MGR.MRC0_NSE_RGN_CLR.R /* MRC NonSecure Enable Region Clear */
#define AON__TRDC_MGR_MRC0_NSE_RGN_CLR_ALL AON__TRDC_MGR.MRC0_NSE_RGN_CLR_ALL.R /* MRC NonSecure Enable Region Clear All */
#define AON__TRDC_MGR_MRC0_GLBAC0 AON__TRDC_MGR.MRC0_GLBAC[0].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC1 AON__TRDC_MGR.MRC0_GLBAC[1].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC2 AON__TRDC_MGR.MRC0_GLBAC[2].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC3 AON__TRDC_MGR.MRC0_GLBAC[3].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC4 AON__TRDC_MGR.MRC0_GLBAC[4].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC5 AON__TRDC_MGR.MRC0_GLBAC[5].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC6 AON__TRDC_MGR.MRC0_GLBAC[6].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_GLBAC7 AON__TRDC_MGR.MRC0_GLBAC[7].R /* MRC Global Access Control */
#define AON__TRDC_MGR_MRC0_DOM0_RGD0_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD0_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD1_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD1_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD2_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD2_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD3_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD3_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD4_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD4_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD5_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD5_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD6_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD6_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD7_W0 AON__TRDC_MGR.MRC0_DOM0_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD7_W1 AON__TRDC_MGR.MRC0_DOM0_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM0_RGD_NSE AON__TRDC_MGR.MRC0_DOM0_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM1_RGD0_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD0_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD1_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD1_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD2_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD2_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD3_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD3_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD4_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD4_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD5_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD5_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD6_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD6_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD7_W0 AON__TRDC_MGR.MRC0_DOM1_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD7_W1 AON__TRDC_MGR.MRC0_DOM1_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM1_RGD_NSE AON__TRDC_MGR.MRC0_DOM1_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM2_RGD0_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD0_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD1_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD1_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD2_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD2_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD3_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD3_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD4_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD4_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD5_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD5_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD6_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD6_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD7_W0 AON__TRDC_MGR.MRC0_DOM2_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD7_W1 AON__TRDC_MGR.MRC0_DOM2_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM2_RGD_NSE AON__TRDC_MGR.MRC0_DOM2_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM3_RGD0_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD0_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD1_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD1_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD2_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD2_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD3_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD3_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD4_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD4_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD5_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD5_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD6_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD6_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD7_W0 AON__TRDC_MGR.MRC0_DOM3_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD7_W1 AON__TRDC_MGR.MRC0_DOM3_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM3_RGD_NSE AON__TRDC_MGR.MRC0_DOM3_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM4_RGD0_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD0_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD1_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD1_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD2_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD2_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD3_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD3_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD4_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD4_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD5_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD5_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD6_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD6_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD7_W0 AON__TRDC_MGR.MRC0_DOM4_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD7_W1 AON__TRDC_MGR.MRC0_DOM4_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM4_RGD_NSE AON__TRDC_MGR.MRC0_DOM4_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM5_RGD0_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD0_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD1_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD1_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD2_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD2_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD3_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD3_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD4_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD4_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD5_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD5_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD6_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD6_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD7_W0 AON__TRDC_MGR.MRC0_DOM5_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD7_W1 AON__TRDC_MGR.MRC0_DOM5_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM5_RGD_NSE AON__TRDC_MGR.MRC0_DOM5_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM6_RGD0_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD0_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD1_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD1_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD2_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD2_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD3_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD3_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD4_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD4_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD5_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD5_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD6_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD6_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD7_W0 AON__TRDC_MGR.MRC0_DOM6_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD7_W1 AON__TRDC_MGR.MRC0_DOM6_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM6_RGD_NSE AON__TRDC_MGR.MRC0_DOM6_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM7_RGD0_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD0_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD1_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD1_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD2_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD2_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD3_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD3_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD4_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD4_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD5_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD5_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD6_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD6_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD7_W0 AON__TRDC_MGR.MRC0_DOM7_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD7_W1 AON__TRDC_MGR.MRC0_DOM7_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM7_RGD_NSE AON__TRDC_MGR.MRC0_DOM7_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM8_RGD0_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD0_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD1_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD1_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD2_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD2_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD3_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD3_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD4_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD4_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD5_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD5_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD6_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD6_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD7_W0 AON__TRDC_MGR.MRC0_DOM8_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD7_W1 AON__TRDC_MGR.MRC0_DOM8_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM8_RGD_NSE AON__TRDC_MGR.MRC0_DOM8_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM9_RGD0_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD0_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD1_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD1_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD2_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD2_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD3_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD3_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD4_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD4_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD5_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD5_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD6_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD6_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD7_W0 AON__TRDC_MGR.MRC0_DOM9_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD7_W1 AON__TRDC_MGR.MRC0_DOM9_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM9_RGD_NSE AON__TRDC_MGR.MRC0_DOM9_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM10_RGD0_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD0_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD1_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD1_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD2_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD2_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD3_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD3_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD4_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD4_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD5_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD5_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD6_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD6_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD7_W0 AON__TRDC_MGR.MRC0_DOM10_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD7_W1 AON__TRDC_MGR.MRC0_DOM10_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM10_RGD_NSE AON__TRDC_MGR.MRC0_DOM10_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM11_RGD0_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD0_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD1_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD1_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD2_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD2_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD3_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD3_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD4_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD4_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD5_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD5_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD6_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD6_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD7_W0 AON__TRDC_MGR.MRC0_DOM11_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD7_W1 AON__TRDC_MGR.MRC0_DOM11_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM11_RGD_NSE AON__TRDC_MGR.MRC0_DOM11_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM12_RGD0_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD0_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD1_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD1_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD2_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD2_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD3_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD3_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD4_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD4_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD5_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD5_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD6_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD6_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD7_W0 AON__TRDC_MGR.MRC0_DOM12_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD7_W1 AON__TRDC_MGR.MRC0_DOM12_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM12_RGD_NSE AON__TRDC_MGR.MRC0_DOM12_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM13_RGD0_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD0_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD1_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD1_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD2_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD2_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD3_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD3_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD4_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD4_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD5_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD5_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD6_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD6_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD7_W0 AON__TRDC_MGR.MRC0_DOM13_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD7_W1 AON__TRDC_MGR.MRC0_DOM13_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM13_RGD_NSE AON__TRDC_MGR.MRC0_DOM13_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM14_RGD0_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD0_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD1_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD1_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD2_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD2_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD3_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD3_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD4_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD4_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD5_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD5_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD6_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD6_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD7_W0 AON__TRDC_MGR.MRC0_DOM14_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD7_W1 AON__TRDC_MGR.MRC0_DOM14_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM14_RGD_NSE AON__TRDC_MGR.MRC0_DOM14_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */
#define AON__TRDC_MGR_MRC0_DOM15_RGD0_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[0].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD0_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[0].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD1_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[1].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD1_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[1].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD2_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[2].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD2_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[2].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD3_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[3].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD3_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[3].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD4_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[4].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD4_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[4].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD5_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[5].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD5_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[5].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD6_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[6].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD6_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[6].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD7_W0 AON__TRDC_MGR.MRC0_DOM15_RGD[7].W0.R /* MRC Region Descriptor Word 0 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD7_W1 AON__TRDC_MGR.MRC0_DOM15_RGD[7].W1.R /* MRC Region Descriptor Word 1 */
#define AON__TRDC_MGR_MRC0_DOM15_RGD_NSE AON__TRDC_MGR.MRC0_DOM15_RGD_NSE.R /* MRC Region Descriptor NonSecure Enable */

/* AON_TSTMR */
#define AON__TSTMR1_LOW      AON__TSTMR1.LOW.R             /* Timestamp Timer Low */
#define AON__TSTMR1_HIGH     AON__TSTMR1.HIGH.R            /* Timestamp Timer High */

/* CACHE_ECC_MCM */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CACHE_ECCR AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CACHE_ECCR.R /* CACHE ECC Control Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_INT_STATUS AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.INT_STATUS.R /* Interrupt Status Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_INT_STAT_EN AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.INT_STAT_EN.R /* Interrupt Status Enable Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_INT_SIG_EN AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.INT_SIG_EN.R /* Interrupt Enable Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_ECC_SINGLE_ERROR_INFO.R /* CODE CACHE single bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_ECC_SINGLE_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_ECC_SINGLE_ERROR_ADDR.R /* CODE_CACHE single-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_ECC_MULTI_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_ECC_MULTI_ERROR_INFO.R /* CODE CACHE multi-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_ECC_SINGLE_ERROR_INFO.R /* SYSTEM CACHE single bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_ECC_SINGLE_ERROR_ADDR.R /* SYSTEM_CACHE single-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_ECC_MULTI_ERROR_INFO.R /* SYSTEM CACHE multi-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_ECC_MULTI_ERROR_DATA AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_ECC_MULTI_ERROR_DATA.R /* SYSTEM CACHE multi-bit ECC Error Data Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_TAG0_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_TAG0_ECC_ERROR_INJEC.R /* CODE CACHE TAG0 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_TAG1_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_TAG1_ECC_ERROR_INJEC.R /* CODE CACHE TAG1 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_DATA0_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_DATA0_ECC_ERROR_INJEC.R /* CODE CACHE DATA0 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_CODE_CACHE_DATA1_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.CODE_CACHE_DATA1_ECC_ERROR_INJEC.R /* CODE CACHE DATA1 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYTEM_CACHE_TAG0_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYTEM_CACHE_TAG0_ECC_ERROR_INJEC.R /* SYSTEM CACHE TAG0 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_TAG1_ECC_ERROR_INJEC.R /* SYSTEM CACHE TAG1 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.SYSTEM_CACHE_DATA0_ECC_ERROR_INJEC.R /* SYSTEM CACHE DATA0 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_STSTEM_CACHE_DATA1_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.STSTEM_CACHE_DATA1_ECC_ERROR_INJEC.R /* SYSTEM CACHE DATA1 ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM_FCCU_SW_FAULTS AON__M33_CACHE_CTRL_ECC0__CM33_CACHE_ECC_MCM.FCCU_SW_FAULTS.R /* FCCU Software Faults */

/* IOMUXC */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_DAP_TDI AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_DAP_TDI.R /* SW_MUX_CTL_PAD_DAP_TDI SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_DAP_TMS_SWDIO AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_DAP_TMS_SWDIO.R /* SW_MUX_CTL_PAD_DAP_TMS_SWDIO SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_DAP_TCLK_SWCLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_DAP_TCLK_SWCLK.R /* SW_MUX_CTL_PAD_DAP_TCLK_SWCLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_DAP_TDO_TRACESWO AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_DAP_TDO_TRACESWO.R /* SW_MUX_CTL_PAD_DAP_TDO_TRACESWO SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO00 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO00.R /* SW_MUX_CTL_PAD_GPIO_IO00 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO01 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO01.R /* SW_MUX_CTL_PAD_GPIO_IO01 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO02 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO02.R /* SW_MUX_CTL_PAD_GPIO_IO02 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO03 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO03.R /* SW_MUX_CTL_PAD_GPIO_IO03 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO04 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO04.R /* SW_MUX_CTL_PAD_GPIO_IO04 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO05 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO05.R /* SW_MUX_CTL_PAD_GPIO_IO05 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO06 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO06.R /* SW_MUX_CTL_PAD_GPIO_IO06 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO07 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO07.R /* SW_MUX_CTL_PAD_GPIO_IO07 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO08 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO08.R /* SW_MUX_CTL_PAD_GPIO_IO08 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO09 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO09.R /* SW_MUX_CTL_PAD_GPIO_IO09 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO10 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO10.R /* SW_MUX_CTL_PAD_GPIO_IO10 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO11 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO11.R /* SW_MUX_CTL_PAD_GPIO_IO11 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO12 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO12.R /* SW_MUX_CTL_PAD_GPIO_IO12 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO13 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO13.R /* SW_MUX_CTL_PAD_GPIO_IO13 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO14 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO14.R /* SW_MUX_CTL_PAD_GPIO_IO14 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO15 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO15.R /* SW_MUX_CTL_PAD_GPIO_IO15 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO16 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO16.R /* SW_MUX_CTL_PAD_GPIO_IO16 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO17 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO17.R /* SW_MUX_CTL_PAD_GPIO_IO17 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO18 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO18.R /* SW_MUX_CTL_PAD_GPIO_IO18 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO19 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO19.R /* SW_MUX_CTL_PAD_GPIO_IO19 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO20 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO20.R /* SW_MUX_CTL_PAD_GPIO_IO20 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO21 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO21.R /* SW_MUX_CTL_PAD_GPIO_IO21 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO22 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO22.R /* SW_MUX_CTL_PAD_GPIO_IO22 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO23 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO23.R /* SW_MUX_CTL_PAD_GPIO_IO23 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO24 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO24.R /* SW_MUX_CTL_PAD_GPIO_IO24 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO25 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO25.R /* SW_MUX_CTL_PAD_GPIO_IO25 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO26 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO26.R /* SW_MUX_CTL_PAD_GPIO_IO26 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO27 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO27.R /* SW_MUX_CTL_PAD_GPIO_IO27 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO28 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO28.R /* SW_MUX_CTL_PAD_GPIO_IO28 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO29 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO29.R /* SW_MUX_CTL_PAD_GPIO_IO29 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO30 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO30.R /* SW_MUX_CTL_PAD_GPIO_IO30 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO31 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO31.R /* SW_MUX_CTL_PAD_GPIO_IO31 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO32 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO32.R /* SW_MUX_CTL_PAD_GPIO_IO32 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO33 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO33.R /* SW_MUX_CTL_PAD_GPIO_IO33 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO34 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO34.R /* SW_MUX_CTL_PAD_GPIO_IO34 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO35 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO35.R /* SW_MUX_CTL_PAD_GPIO_IO35 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO36 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO36.R /* SW_MUX_CTL_PAD_GPIO_IO36 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_GPIO_IO37 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_GPIO_IO37.R /* SW_MUX_CTL_PAD_GPIO_IO37 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_CCM_CLKO1.R /* SW_MUX_CTL_PAD_CCM_CLKO1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_CCM_CLKO2.R /* SW_MUX_CTL_PAD_CCM_CLKO2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_CCM_CLKO3.R /* SW_MUX_CTL_PAD_CCM_CLKO3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_CCM_CLKO4 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_CCM_CLKO4.R /* SW_MUX_CTL_PAD_CCM_CLKO4 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_MDC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_MDC.R /* SW_MUX_CTL_PAD_ENET1_MDC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_MDIO AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_MDIO.R /* SW_MUX_CTL_PAD_ENET1_MDIO SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TD3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TD3.R /* SW_MUX_CTL_PAD_ENET1_TD3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TD2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TD2.R /* SW_MUX_CTL_PAD_ENET1_TD2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TD1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TD1.R /* SW_MUX_CTL_PAD_ENET1_TD1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TD0.R /* SW_MUX_CTL_PAD_ENET1_TD0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TX_CTL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TX_CTL.R /* SW_MUX_CTL_PAD_ENET1_TX_CTL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_TXC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_TXC.R /* SW_MUX_CTL_PAD_ENET1_TXC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RX_CTL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RX_CTL.R /* SW_MUX_CTL_PAD_ENET1_RX_CTL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RXC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RXC.R /* SW_MUX_CTL_PAD_ENET1_RXC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RD0.R /* SW_MUX_CTL_PAD_ENET1_RD0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RD1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RD1.R /* SW_MUX_CTL_PAD_ENET1_RD1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RD2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RD2.R /* SW_MUX_CTL_PAD_ENET1_RD2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET1_RD3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET1_RD3.R /* SW_MUX_CTL_PAD_ENET1_RD3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_MDC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_MDC.R /* SW_MUX_CTL_PAD_ENET2_MDC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_MDIO AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_MDIO.R /* SW_MUX_CTL_PAD_ENET2_MDIO SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TD3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TD3.R /* SW_MUX_CTL_PAD_ENET2_TD3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TD2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TD2.R /* SW_MUX_CTL_PAD_ENET2_TD2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TD1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TD1.R /* SW_MUX_CTL_PAD_ENET2_TD1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TD0.R /* SW_MUX_CTL_PAD_ENET2_TD0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TX_CTL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TX_CTL.R /* SW_MUX_CTL_PAD_ENET2_TX_CTL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_TXC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_TXC.R /* SW_MUX_CTL_PAD_ENET2_TXC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RX_CTL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RX_CTL.R /* SW_MUX_CTL_PAD_ENET2_RX_CTL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RXC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RXC.R /* SW_MUX_CTL_PAD_ENET2_RXC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RD0.R /* SW_MUX_CTL_PAD_ENET2_RD0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RD1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RD1.R /* SW_MUX_CTL_PAD_ENET2_RD1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RD2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RD2.R /* SW_MUX_CTL_PAD_ENET2_RD2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_ENET2_RD3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_ENET2_RD3.R /* SW_MUX_CTL_PAD_ENET2_RD3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_CLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_CLK.R /* SW_MUX_CTL_PAD_SD1_CLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_CMD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_CMD.R /* SW_MUX_CTL_PAD_SD1_CMD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA0.R /* SW_MUX_CTL_PAD_SD1_DATA0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA1.R /* SW_MUX_CTL_PAD_SD1_DATA1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA2.R /* SW_MUX_CTL_PAD_SD1_DATA2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA3.R /* SW_MUX_CTL_PAD_SD1_DATA3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA4 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA4.R /* SW_MUX_CTL_PAD_SD1_DATA4 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA5 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA5.R /* SW_MUX_CTL_PAD_SD1_DATA5 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA6 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA6.R /* SW_MUX_CTL_PAD_SD1_DATA6 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_DATA7 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_DATA7.R /* SW_MUX_CTL_PAD_SD1_DATA7 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD1_STROBE AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD1_STROBE.R /* SW_MUX_CTL_PAD_SD1_STROBE SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_VSELECT AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_VSELECT.R /* SW_MUX_CTL_PAD_SD2_VSELECT SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_CLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_CLK.R /* SW_MUX_CTL_PAD_SD3_CLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_CMD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_CMD.R /* SW_MUX_CTL_PAD_SD3_CMD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_DATA0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_DATA0.R /* SW_MUX_CTL_PAD_SD3_DATA0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_DATA1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_DATA1.R /* SW_MUX_CTL_PAD_SD3_DATA1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_DATA2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_DATA2.R /* SW_MUX_CTL_PAD_SD3_DATA2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD3_DATA3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD3_DATA3.R /* SW_MUX_CTL_PAD_SD3_DATA3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA0.R /* SW_MUX_CTL_PAD_XSPI1_DATA0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA1.R /* SW_MUX_CTL_PAD_XSPI1_DATA1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA2.R /* SW_MUX_CTL_PAD_XSPI1_DATA2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA3.R /* SW_MUX_CTL_PAD_XSPI1_DATA3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA4 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA4.R /* SW_MUX_CTL_PAD_XSPI1_DATA4 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA5 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA5.R /* SW_MUX_CTL_PAD_XSPI1_DATA5 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA6 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA6.R /* SW_MUX_CTL_PAD_XSPI1_DATA6 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DATA7 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DATA7.R /* SW_MUX_CTL_PAD_XSPI1_DATA7 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_DQS AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_DQS.R /* SW_MUX_CTL_PAD_XSPI1_DQS SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_SCLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_SCLK.R /* SW_MUX_CTL_PAD_XSPI1_SCLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS0_B AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_SS0_B.R /* SW_MUX_CTL_PAD_XSPI1_SS0_B SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_XSPI1_SS1_B AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_XSPI1_SS1_B.R /* SW_MUX_CTL_PAD_XSPI1_SS1_B SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_CD_B AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_CD_B.R /* SW_MUX_CTL_PAD_SD2_CD_B SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_CLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_CLK.R /* SW_MUX_CTL_PAD_SD2_CLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_CMD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_CMD.R /* SW_MUX_CTL_PAD_SD2_CMD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_DATA0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_DATA0.R /* SW_MUX_CTL_PAD_SD2_DATA0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_DATA1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_DATA1.R /* SW_MUX_CTL_PAD_SD2_DATA1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_DATA2 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_DATA2.R /* SW_MUX_CTL_PAD_SD2_DATA2 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_DATA3 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_DATA3.R /* SW_MUX_CTL_PAD_SD2_DATA3 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SD2_RESET_B AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SD2_RESET_B.R /* SW_MUX_CTL_PAD_SD2_RESET_B SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_I2C1_SCL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_I2C1_SCL.R /* SW_MUX_CTL_PAD_I2C1_SCL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_I2C1_SDA AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_I2C1_SDA.R /* SW_MUX_CTL_PAD_I2C1_SDA SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_I2C2_SCL AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_I2C2_SCL.R /* SW_MUX_CTL_PAD_I2C2_SCL SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_I2C2_SDA AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_I2C2_SDA.R /* SW_MUX_CTL_PAD_I2C2_SDA SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_UART1_RXD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_UART1_RXD.R /* SW_MUX_CTL_PAD_UART1_RXD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_UART1_TXD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_UART1_TXD.R /* SW_MUX_CTL_PAD_UART1_TXD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_UART2_RXD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_UART2_RXD.R /* SW_MUX_CTL_PAD_UART2_RXD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_UART2_TXD AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_UART2_TXD.R /* SW_MUX_CTL_PAD_UART2_TXD SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_PDM_CLK AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_PDM_CLK.R /* SW_MUX_CTL_PAD_PDM_CLK SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_PDM_BIT_STREAM0.R /* SW_MUX_CTL_PAD_PDM_BIT_STREAM0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_PDM_BIT_STREAM1 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_PDM_BIT_STREAM1.R /* SW_MUX_CTL_PAD_PDM_BIT_STREAM1 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SAI1_TXFS AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SAI1_TXFS.R /* SW_MUX_CTL_PAD_SAI1_TXFS SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SAI1_TXC AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SAI1_TXC.R /* SW_MUX_CTL_PAD_SAI1_TXC SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SAI1_TXD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SAI1_TXD0.R /* SW_MUX_CTL_PAD_SAI1_TXD0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_SAI1_RXD0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_SAI1_RXD0.R /* SW_MUX_CTL_PAD_SAI1_RXD0 SW MUX Control Register */

#define AON__IOMUXC0__IOMUXC_SW_MUX_CTL_PAD_FCCU_ERR0 AON__IOMUXC0__IOMUXC.SW_MUX_CTL_PAD_FCCU_ERR0.R /* SW_MUX_CTL_PAD_FCCU_ERR0 SW MUX Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_DAP_TDI AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_DAP_TDI.R /* SW_PAD_CTL_PAD_DAP_TDI SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_DAP_TMS_SWDIO AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_DAP_TMS_SWDIO.R /* SW_PAD_CTL_PAD_DAP_TMS_SWDIO SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_DAP_TCLK_SWCLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_DAP_TCLK_SWCLK.R /* SW_PAD_CTL_PAD_DAP_TCLK_SWCLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_DAP_TDO_TRACESWO AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_DAP_TDO_TRACESWO.R /* SW_PAD_CTL_PAD_DAP_TDO_TRACESWO SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO00 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO00.R /* SW_PAD_CTL_PAD_GPIO_IO00 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO01 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO01.R /* SW_PAD_CTL_PAD_GPIO_IO01 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO02 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO02.R /* SW_PAD_CTL_PAD_GPIO_IO02 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO03 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO03.R /* SW_PAD_CTL_PAD_GPIO_IO03 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO04 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO04.R /* SW_PAD_CTL_PAD_GPIO_IO04 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO05 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO05.R /* SW_PAD_CTL_PAD_GPIO_IO05 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO06 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO06.R /* SW_PAD_CTL_PAD_GPIO_IO06 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO07 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO07.R /* SW_PAD_CTL_PAD_GPIO_IO07 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO08 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO08.R /* SW_PAD_CTL_PAD_GPIO_IO08 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO09 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO09.R /* SW_PAD_CTL_PAD_GPIO_IO09 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO10 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO10.R /* SW_PAD_CTL_PAD_GPIO_IO10 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO11 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO11.R /* SW_PAD_CTL_PAD_GPIO_IO11 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO12 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO12.R /* SW_PAD_CTL_PAD_GPIO_IO12 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO13 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO13.R /* SW_PAD_CTL_PAD_GPIO_IO13 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO14 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO14.R /* SW_PAD_CTL_PAD_GPIO_IO14 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO15 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO15.R /* SW_PAD_CTL_PAD_GPIO_IO15 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO16 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO16.R /* SW_PAD_CTL_PAD_GPIO_IO16 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO17 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO17.R /* SW_PAD_CTL_PAD_GPIO_IO17 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO18 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO18.R /* SW_PAD_CTL_PAD_GPIO_IO18 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO19 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO19.R /* SW_PAD_CTL_PAD_GPIO_IO19 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO20 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO20.R /* SW_PAD_CTL_PAD_GPIO_IO20 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO21 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO21.R /* SW_PAD_CTL_PAD_GPIO_IO21 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO22 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO22.R /* SW_PAD_CTL_PAD_GPIO_IO22 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO23 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO23.R /* SW_PAD_CTL_PAD_GPIO_IO23 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO24 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO24.R /* SW_PAD_CTL_PAD_GPIO_IO24 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO25 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO25.R /* SW_PAD_CTL_PAD_GPIO_IO25 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO26 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO26.R /* SW_PAD_CTL_PAD_GPIO_IO26 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO27 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO27.R /* SW_PAD_CTL_PAD_GPIO_IO27 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO28 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO28.R /* SW_PAD_CTL_PAD_GPIO_IO28 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO29 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO29.R /* SW_PAD_CTL_PAD_GPIO_IO29 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO30 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO30.R /* SW_PAD_CTL_PAD_GPIO_IO30 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO31 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO31.R /* SW_PAD_CTL_PAD_GPIO_IO31 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO32 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO32.R /* SW_PAD_CTL_PAD_GPIO_IO32 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO33 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO33.R /* SW_PAD_CTL_PAD_GPIO_IO33 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO34 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO34.R /* SW_PAD_CTL_PAD_GPIO_IO34 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO35 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO35.R /* SW_PAD_CTL_PAD_GPIO_IO35 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO36 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO36.R /* SW_PAD_CTL_PAD_GPIO_IO36 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_GPIO_IO37 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_GPIO_IO37.R /* SW_PAD_CTL_PAD_GPIO_IO37 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_CCM_CLKO1.R /* SW_PAD_CTL_PAD_CCM_CLKO1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_CCM_CLKO2.R /* SW_PAD_CTL_PAD_CCM_CLKO2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_CCM_CLKO3.R /* SW_PAD_CTL_PAD_CCM_CLKO3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_CCM_CLKO4 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_CCM_CLKO4.R /* SW_PAD_CTL_PAD_CCM_CLKO4 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_MDC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_MDC.R /* SW_PAD_CTL_PAD_ENET1_MDC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_MDIO AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_MDIO.R /* SW_PAD_CTL_PAD_ENET1_MDIO SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TD3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TD3.R /* SW_PAD_CTL_PAD_ENET1_TD3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TD2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TD2.R /* SW_PAD_CTL_PAD_ENET1_TD2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TD1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TD1.R /* SW_PAD_CTL_PAD_ENET1_TD1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TD0.R /* SW_PAD_CTL_PAD_ENET1_TD0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TX_CTL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TX_CTL.R /* SW_PAD_CTL_PAD_ENET1_TX_CTL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_TXC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_TXC.R /* SW_PAD_CTL_PAD_ENET1_TXC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RX_CTL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RX_CTL.R /* SW_PAD_CTL_PAD_ENET1_RX_CTL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RXC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RXC.R /* SW_PAD_CTL_PAD_ENET1_RXC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RD0.R /* SW_PAD_CTL_PAD_ENET1_RD0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RD1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RD1.R /* SW_PAD_CTL_PAD_ENET1_RD1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RD2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RD2.R /* SW_PAD_CTL_PAD_ENET1_RD2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET1_RD3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET1_RD3.R /* SW_PAD_CTL_PAD_ENET1_RD3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_MDC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_MDC.R /* SW_PAD_CTL_PAD_ENET2_MDC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_MDIO AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_MDIO.R /* SW_PAD_CTL_PAD_ENET2_MDIO SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TD3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TD3.R /* SW_PAD_CTL_PAD_ENET2_TD3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TD2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TD2.R /* SW_PAD_CTL_PAD_ENET2_TD2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TD1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TD1.R /* SW_PAD_CTL_PAD_ENET2_TD1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TD0.R /* SW_PAD_CTL_PAD_ENET2_TD0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TX_CTL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TX_CTL.R /* SW_PAD_CTL_PAD_ENET2_TX_CTL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_TXC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_TXC.R /* SW_PAD_CTL_PAD_ENET2_TXC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RX_CTL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RX_CTL.R /* SW_PAD_CTL_PAD_ENET2_RX_CTL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RXC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RXC.R /* SW_PAD_CTL_PAD_ENET2_RXC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RD0.R /* SW_PAD_CTL_PAD_ENET2_RD0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RD1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RD1.R /* SW_PAD_CTL_PAD_ENET2_RD1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RD2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RD2.R /* SW_PAD_CTL_PAD_ENET2_RD2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_ENET2_RD3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_ENET2_RD3.R /* SW_PAD_CTL_PAD_ENET2_RD3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_CLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_CLK.R /* SW_PAD_CTL_PAD_SD1_CLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_CMD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_CMD.R /* SW_PAD_CTL_PAD_SD1_CMD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA0.R /* SW_PAD_CTL_PAD_SD1_DATA0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA1.R /* SW_PAD_CTL_PAD_SD1_DATA1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA2.R /* SW_PAD_CTL_PAD_SD1_DATA2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA3.R /* SW_PAD_CTL_PAD_SD1_DATA3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA4 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA4.R /* SW_PAD_CTL_PAD_SD1_DATA4 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA5 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA5.R /* SW_PAD_CTL_PAD_SD1_DATA5 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA6 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA6.R /* SW_PAD_CTL_PAD_SD1_DATA6 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_DATA7 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_DATA7.R /* SW_PAD_CTL_PAD_SD1_DATA7 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD1_STROBE AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD1_STROBE.R /* SW_PAD_CTL_PAD_SD1_STROBE SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_VSELECT AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_VSELECT.R /* SW_PAD_CTL_PAD_SD2_VSELECT SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_CLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_CLK.R /* SW_PAD_CTL_PAD_SD3_CLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_CMD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_CMD.R /* SW_PAD_CTL_PAD_SD3_CMD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_DATA0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_DATA0.R /* SW_PAD_CTL_PAD_SD3_DATA0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_DATA1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_DATA1.R /* SW_PAD_CTL_PAD_SD3_DATA1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_DATA2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_DATA2.R /* SW_PAD_CTL_PAD_SD3_DATA2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD3_DATA3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD3_DATA3.R /* SW_PAD_CTL_PAD_SD3_DATA3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA0.R /* SW_PAD_CTL_PAD_XSPI1_DATA0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA1.R /* SW_PAD_CTL_PAD_XSPI1_DATA1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA2.R /* SW_PAD_CTL_PAD_XSPI1_DATA2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA3.R /* SW_PAD_CTL_PAD_XSPI1_DATA3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA4 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA4.R /* SW_PAD_CTL_PAD_XSPI1_DATA4 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA5 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA5.R /* SW_PAD_CTL_PAD_XSPI1_DATA5 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA6 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA6.R /* SW_PAD_CTL_PAD_XSPI1_DATA6 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DATA7 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DATA7.R /* SW_PAD_CTL_PAD_XSPI1_DATA7 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_DQS AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_DQS.R /* SW_PAD_CTL_PAD_XSPI1_DQS SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_SCLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_SCLK.R /* SW_PAD_CTL_PAD_XSPI1_SCLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS0_B AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_SS0_B.R /* SW_PAD_CTL_PAD_XSPI1_SS0_B SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_XSPI1_SS1_B AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_XSPI1_SS1_B.R /* SW_PAD_CTL_PAD_XSPI1_SS1_B SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_CD_B AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_CD_B.R /* SW_PAD_CTL_PAD_SD2_CD_B SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_CLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_CLK.R /* SW_PAD_CTL_PAD_SD2_CLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_CMD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_CMD.R /* SW_PAD_CTL_PAD_SD2_CMD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_DATA0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_DATA0.R /* SW_PAD_CTL_PAD_SD2_DATA0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_DATA1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_DATA1.R /* SW_PAD_CTL_PAD_SD2_DATA1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_DATA2 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_DATA2.R /* SW_PAD_CTL_PAD_SD2_DATA2 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_DATA3 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_DATA3.R /* SW_PAD_CTL_PAD_SD2_DATA3 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SD2_RESET_B AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SD2_RESET_B.R /* SW_PAD_CTL_PAD_SD2_RESET_B SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_I2C1_SCL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_I2C1_SCL.R /* SW_PAD_CTL_PAD_I2C1_SCL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_I2C1_SDA AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_I2C1_SDA.R /* SW_PAD_CTL_PAD_I2C1_SDA SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_I2C2_SCL AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_I2C2_SCL.R /* SW_PAD_CTL_PAD_I2C2_SCL SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_I2C2_SDA AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_I2C2_SDA.R /* SW_PAD_CTL_PAD_I2C2_SDA SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_UART1_RXD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_UART1_RXD.R /* SW_PAD_CTL_PAD_UART1_RXD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_UART1_TXD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_UART1_TXD.R /* SW_PAD_CTL_PAD_UART1_TXD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_UART2_RXD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_UART2_RXD.R /* SW_PAD_CTL_PAD_UART2_RXD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_UART2_TXD AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_UART2_TXD.R /* SW_PAD_CTL_PAD_UART2_TXD SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_PDM_CLK AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_PDM_CLK.R /* SW_PAD_CTL_PAD_PDM_CLK SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_PDM_BIT_STREAM0.R /* SW_PAD_CTL_PAD_PDM_BIT_STREAM0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_PDM_BIT_STREAM1 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_PDM_BIT_STREAM1.R /* SW_PAD_CTL_PAD_PDM_BIT_STREAM1 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SAI1_TXFS AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SAI1_TXFS.R /* SW_PAD_CTL_PAD_SAI1_TXFS SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SAI1_TXC AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SAI1_TXC.R /* SW_PAD_CTL_PAD_SAI1_TXC SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SAI1_TXD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SAI1_TXD0.R /* SW_PAD_CTL_PAD_SAI1_TXD0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_SAI1_RXD0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_SAI1_RXD0.R /* SW_PAD_CTL_PAD_SAI1_RXD0 SW PAD Control Register */

#define AON__IOMUXC0__IOMUXC_SW_PAD_CTL_PAD_FCCU_ERR0 AON__IOMUXC0__IOMUXC.SW_PAD_CTL_PAD_FCCU_ERR0.R /* SW_PAD_CTL_PAD_FCCU_ERR0 SW PAD Control Register */
#define AON__IOMUXC0__IOMUXC_CAN1_IPP_IND_CANRX_SELECT_INPUT AON__IOMUXC0__IOMUXC.CAN1_IPP_IND_CANRX_SELECT_INPUT.R /* CAN1_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0.R /* PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1.R /* PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2.R /* PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3 AON__IOMUXC0__IOMUXC.PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3.R /* PDM_IPP_IND_MIC_PDM_BITSTREAM_SELECT_INPUT_3 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT.R /* SAI1_IPP_IND_SAI_MCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_EXT1_CLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.EXT1_CLK_SELECT_INPUT.R /* EXT1_CLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_EMDC_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_EMDC_IN_SELECT_INPUT.R /* NETC_CMPLX_EMDC_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_EMDIO_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_EMDIO_IN_SELECT_INPUT.R /* NETC_CMPLX_EMDIO_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT.R /* NETC_CMPLX_ETH0_RMII_RX_ER_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_ETH1_RMII_RX_ER_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_ETH1_RMII_RX_ER_SELECT_INPUT.R /* NETC_CMPLX_ETH1_RMII_RX_ER_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT.R /* NETC_CMPLX_TMR_1588_TRIG1_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT AON__IOMUXC0__IOMUXC.NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT.R /* NETC_CMPLX_TMR_1588_TRIG2_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6 AON__IOMUXC0__IOMUXC.SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6.R /* SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_6 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7 AON__IOMUXC0__IOMUXC.SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7.R /* SAI2_IPP_IND_SAI_RXDATA_SELECT_INPUT_7 DAISY Register */
#define AON__IOMUXC0__IOMUXC_CAN2_IPP_IND_CANRX_SELECT_INPUT AON__IOMUXC0__IOMUXC.CAN2_IPP_IND_CANRX_SELECT_INPUT.R /* CAN2_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_CAN3_IPP_IND_CANRX_SELECT_INPUT AON__IOMUXC0__IOMUXC.CAN3_IPP_IND_CANRX_SELECT_INPUT.R /* CAN3_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_CAN4_IPP_IND_CANRX_SELECT_INPUT AON__IOMUXC0__IOMUXC.CAN4_IPP_IND_CANRX_SELECT_INPUT.R /* CAN4_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_CAN5_IPP_IND_CANRX_SELECT_INPUT AON__IOMUXC0__IOMUXC.CAN5_IPP_IND_CANRX_SELECT_INPUT.R /* CAN5_IPP_IND_CANRX_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_EARC_PHY_SPDIF_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.EARC_PHY_SPDIF_IN_SELECT_INPUT.R /* EARC_PHY_SPDIF_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_26 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_27 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_30 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_31 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_3 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_4 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_5 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_6 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_7 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_8 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_9 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_10 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_11 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_12 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_13 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_14 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_15 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_16 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_17 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_18 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_19 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_20 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_21 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_22 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_23 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_24 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25 AON__IOMUXC0__IOMUXC.FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25.R /* FLEXIO1_IPP_IND_FLEXIO_SELECT_INPUT_25 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT.R /* FLEXSPI1_I_IPP_IND_DQS_FA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_3 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_4 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_5 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_6 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7 AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7.R /* FLEXSPI1_I_IPP_IND_IO_FA_SELECT_INPUT_7 DAISY Register */
#define AON__IOMUXC0__IOMUXC_FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT AON__IOMUXC0__IOMUXC.FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT.R /* FLEXSPI1_I_IPP_IND_SCK_FA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_I3C2_PIN_SCL_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.I3C2_PIN_SCL_IN_SELECT_INPUT.R /* I3C2_PIN_SCL_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_I3C2_PIN_SDA_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.I3C2_PIN_SDA_IN_SELECT_INPUT.R /* I3C2_PIN_SDA_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C3_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C3_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C4_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C4_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C5_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C5_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C6_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C6_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C7_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C7_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT.R /* LPI2C8_IPP_IND_LPI2C_SCL_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT.R /* LPI2C8_IPP_IND_LPI2C_SDA_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0.R /* LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1.R /* LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2.R /* LPSPI4_IPP_IND_LPSPI_PCS_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT.R /* LPSPI4_IPP_IND_LPSPI_SCK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT.R /* LPSPI4_IPP_IND_LPSPI_SDI_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT.R /* LPSPI4_IPP_IND_LPSPI_SDO_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0.R /* LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1.R /* LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2.R /* LPTMR2_IPP_IND_LPTIMER_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT.R /* LPUART3_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT.R /* LPUART3_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT.R /* LPUART3_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT.R /* LPUART4_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT.R /* LPUART4_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT.R /* LPUART4_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT.R /* LPUART5_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT.R /* LPUART5_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT.R /* LPUART5_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT.R /* LPUART6_IPP_IND_LPUART_CTS_N_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT.R /* LPUART6_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT.R /* LPUART6_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT.R /* LPUART7_IPP_IND_LPUART_RXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT AON__IOMUXC0__IOMUXC.LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT.R /* LPUART7_IPP_IND_LPUART_TXD_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT.R /* SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT.R /* SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT.R /* SAI4_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0.R /* SAI4_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT.R /* SAI4_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT.R /* SAI4_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT.R /* SAI4_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT.R /* SAI5_IPP_IND_SAI_RXBCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0.R /* SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1.R /* SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2.R /* SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3 AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3.R /* SAI5_IPP_IND_SAI_RXDATA_SELECT_INPUT_3 DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT.R /* SAI5_IPP_IND_SAI_RXSYNC_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT.R /* SAI5_IPP_IND_SAI_TXBCLK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT AON__IOMUXC0__IOMUXC.SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT.R /* SAI5_IPP_IND_SAI_TXSYNC_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT.R /* USDHC3_IPP_CARD_CLK_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_CMD_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_CMD_IN_SELECT_INPUT.R /* USDHC3_IPP_CMD_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_DAT0_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_DAT0_IN_SELECT_INPUT.R /* USDHC3_IPP_DAT0_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_DAT1_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_DAT1_IN_SELECT_INPUT.R /* USDHC3_IPP_DAT1_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_DAT2_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_DAT2_IN_SELECT_INPUT.R /* USDHC3_IPP_DAT2_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_USDHC3_IPP_DAT3_IN_SELECT_INPUT AON__IOMUXC0__IOMUXC.USDHC3_IPP_DAT3_IN_SELECT_INPUT.R /* USDHC3_IPP_DAT3_IN_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_IPP_IND_CS_SELECT_INPUT AON__IOMUXC0__IOMUXC.XSPI_IPP_IND_CS_SELECT_INPUT.R /* XSPI_IPP_IND_CS_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_IPP_IND_DQS_SELECT_INPUT AON__IOMUXC0__IOMUXC.XSPI_IPP_IND_DQS_SELECT_INPUT.R /* XSPI_IPP_IND_DQS_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_IPP_IND_SCK_SELECT_INPUT AON__IOMUXC0__IOMUXC.XSPI_IPP_IND_SCK_SELECT_INPUT.R /* XSPI_IPP_IND_SCK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_0 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_0.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_0 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_1 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_1.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_1 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_2 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_2.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_2 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_3 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_3.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_3 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_4 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_4.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_4 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_5 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_5.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_5 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_6 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_6.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_6 DAISY Register */
#define AON__IOMUXC0__IOMUXC_XSPI_SLV_IPP_IND_IO_SELECT_INPUT_7 AON__IOMUXC0__IOMUXC.XSPI_SLV_IPP_IND_IO_SELECT_INPUT_7.R /* XSPI_SLV_IPP_IND_IO_SELECT_INPUT_7 DAISY Register */
#define AON__IOMUXC0__IOMUXC_JTAG_MUX_TCK_SELECT_INPUT AON__IOMUXC0__IOMUXC.JTAG_MUX_TCK_SELECT_INPUT.R /* JTAG_MUX_TCK_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_JTAG_MUX_TDI_SELECT_INPUT AON__IOMUXC0__IOMUXC.JTAG_MUX_TDI_SELECT_INPUT.R /* JTAG_MUX_TDI_SELECT_INPUT DAISY Register */
#define AON__IOMUXC0__IOMUXC_JTAG_MUX_TMS_SELECT_INPUT AON__IOMUXC0__IOMUXC.JTAG_MUX_TMS_SELECT_INPUT.R /* JTAG_MUX_TMS_SELECT_INPUT DAISY Register */

/* IOMUXC_GPR */
#define AON__IOMUXC0__IOMUXC_GPR_GPR0 AON__IOMUXC0__IOMUXC_GPR.GPR0.R /* GPR0 General Purpose Register */

/* M7_A7_MCM */
#define M7__A7_MCM_ERR_INFO_EN M7__A7_MCM.ERR_INFO_EN.R    /* Error Info Enable */
#define M7__A7_MCM_ITCM_ECC_SINGLE_ERROR_INFO M7__A7_MCM.ITCM_ECC_SINGLE_ERROR_INFO.R /* ITCM single-bit ECC Error Information */
#define M7__A7_MCM_ITCM_ECC_SINGLE_ERROR_ADDR M7__A7_MCM.ITCM_ECC_SINGLE_ERROR_ADDR.R /* ITCM single-bit ECC Error Address Register */
#define M7__A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_LSB M7__A7_MCM.ITCM_ECC_SINGLE_ERROR_DATA_LSB.R /* ITCM single-bit ECC Error Data Register */
#define M7__A7_MCM_ITCM_ECC_SINGLE_ERROR_DATA_MSB M7__A7_MCM.ITCM_ECC_SINGLE_ERROR_DATA_MSB.R /* ITCM single-bit ECC Error Data Register */
#define M7__A7_MCM_ITCM_ECC_MULTI_ERROR_INFO M7__A7_MCM.ITCM_ECC_MULTI_ERROR_INFO.R /* ITCM multi-bit ECC Error Information Register */
#define M7__A7_MCM_ITCM_ECC_MULTI_ERROR_ADDR M7__A7_MCM.ITCM_ECC_MULTI_ERROR_ADDR.R /* ITCM multi-bit ECC Error Address Register */
#define M7__A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_LSB M7__A7_MCM.ITCM_ECC_MULTI_ERROR_DATA_LSB.R /* ITCM multi-bit ECC Error Data Register */
#define M7__A7_MCM_ITCM_ECC_MULTI_ERROR_DATA_MSB M7__A7_MCM.ITCM_ECC_MULTI_ERROR_DATA_MSB.R /* ITCM multi-bit ECC Error Data Register */
#define M7__A7_MCM_D0TCM_ECC_SINGLE_ERROR_INFO M7__A7_MCM.D0TCM_ECC_SINGLE_ERROR_INFO.R /* D0TCM single-bit ECC Error Information Register */
#define M7__A7_MCM_D0TCM_ECC_SINGLE_ERROR_ADDR M7__A7_MCM.D0TCM_ECC_SINGLE_ERROR_ADDR.R /* D0TCM single-bit ECC Error Address Register */
#define M7__A7_MCM_D0TCM_ECC_SINGLE_ERROR_DATA M7__A7_MCM.D0TCM_ECC_SINGLE_ERROR_DATA.R /* D0TCM single-bit ECC Error Data Register */
#define M7__A7_MCM_D0TCM_ECC_MULTI_ERROR_INFO M7__A7_MCM.D0TCM_ECC_MULTI_ERROR_INFO.R /* D0TCM multi-bit ECC Error Information Register */
#define M7__A7_MCM_D0TCM_ECC_MULTI_ERROR_ADDR M7__A7_MCM.D0TCM_ECC_MULTI_ERROR_ADDR.R /* D0TCM multi-bit ECC Error Address Register */
#define M7__A7_MCM_D0TCM_ECC_MULTI_ERROR_DATA M7__A7_MCM.D0TCM_ECC_MULTI_ERROR_DATA.R /* D0TCM multi-bit ECC Error Data Register */
#define M7__A7_MCM_D1TCM_ECC_SINGLE_ERROR_INFO M7__A7_MCM.D1TCM_ECC_SINGLE_ERROR_INFO.R /* D1TCM single-bit ECC Error Information Register */
#define M7__A7_MCM_D1TCM_ECC_SINGLE_ERROR_ADDR M7__A7_MCM.D1TCM_ECC_SINGLE_ERROR_ADDR.R /* D1TCM single-bit ECC Error Address Register */
#define M7__A7_MCM_D1TCM_ECC_SINGLE_ERROR_DATA M7__A7_MCM.D1TCM_ECC_SINGLE_ERROR_DATA.R /* D1TCM single-bit ECC Error Data Register */
#define M7__A7_MCM_D1TCM_ECC_MULTI_ERROR_INFO M7__A7_MCM.D1TCM_ECC_MULTI_ERROR_INFO.R /* D1TCM multi-bit ECC Error Information Register */
#define M7__A7_MCM_D1TCM_ECC_MULTI_ERROR_ADDR M7__A7_MCM.D1TCM_ECC_MULTI_ERROR_ADDR.R /* D1TCM multi-bit ECC Error Address Register */
#define M7__A7_MCM_D1TCM_ECC_MULTI_ERROR_DATA M7__A7_MCM.D1TCM_ECC_MULTI_ERROR_DATA.R /* D1TCM multi-bit ECC Error Data Register */
#define M7__A7_MCM_FCCU_SW_FAULTS M7__A7_MCM.FCCU_SW_FAULTS.R /* FCCU Software Faults */

/* MU */
#define AON__MUI_A1__MUA_VER AON__MUI_A1__MUA.VER.R        /* Version ID */
#define AON__MUI_A1__MUA_PAR AON__MUI_A1__MUA.PAR.R        /* Parameter */
#define AON__MUI_A1__MUA_CR  AON__MUI_A1__MUA.CR.R         /* Control */
#define AON__MUI_A1__MUA_SR  AON__MUI_A1__MUA.SR.R         /* Status */
#define AON__MUI_A1__MUA_CCR0 AON__MUI_A1__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A1__MUA_CIER0 AON__MUI_A1__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A1__MUA_CSSR0 AON__MUI_A1__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A1__MUA_CSR0 AON__MUI_A1__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A1__MUA_FCR AON__MUI_A1__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A1__MUA_FSR AON__MUI_A1__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A1__MUA_GIER AON__MUI_A1__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A1__MUA_GCR AON__MUI_A1__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A1__MUA_GSR AON__MUI_A1__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A1__MUA_TCR AON__MUI_A1__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A1__MUA_TSR AON__MUI_A1__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A1__MUA_RCR AON__MUI_A1__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A1__MUA_RSR AON__MUI_A1__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A1__MUA_TR0 AON__MUI_A1__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A1__MUA_TR1 AON__MUI_A1__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A1__MUA_TR2 AON__MUI_A1__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A1__MUA_TR3 AON__MUI_A1__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A1__MUA_RR0 AON__MUI_A1__MUA.RR[0].R      /* Receive */
#define AON__MUI_A1__MUA_RR1 AON__MUI_A1__MUA.RR[1].R      /* Receive */
#define AON__MUI_A1__MUA_RR2 AON__MUI_A1__MUA.RR[2].R      /* Receive */
#define AON__MUI_A1__MUA_RR3 AON__MUI_A1__MUA.RR[3].R      /* Receive */

#define AON__MUI_A2__MUA_VER AON__MUI_A2__MUA.VER.R        /* Version ID */
#define AON__MUI_A2__MUA_PAR AON__MUI_A2__MUA.PAR.R        /* Parameter */
#define AON__MUI_A2__MUA_CR  AON__MUI_A2__MUA.CR.R         /* Control */
#define AON__MUI_A2__MUA_SR  AON__MUI_A2__MUA.SR.R         /* Status */
#define AON__MUI_A2__MUA_CCR0 AON__MUI_A2__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A2__MUA_CIER0 AON__MUI_A2__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A2__MUA_CSSR0 AON__MUI_A2__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A2__MUA_CSR0 AON__MUI_A2__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A2__MUA_FCR AON__MUI_A2__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A2__MUA_FSR AON__MUI_A2__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A2__MUA_GIER AON__MUI_A2__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A2__MUA_GCR AON__MUI_A2__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A2__MUA_GSR AON__MUI_A2__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A2__MUA_TCR AON__MUI_A2__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A2__MUA_TSR AON__MUI_A2__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A2__MUA_RCR AON__MUI_A2__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A2__MUA_RSR AON__MUI_A2__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A2__MUA_TR0 AON__MUI_A2__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A2__MUA_TR1 AON__MUI_A2__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A2__MUA_TR2 AON__MUI_A2__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A2__MUA_TR3 AON__MUI_A2__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A2__MUA_RR0 AON__MUI_A2__MUA.RR[0].R      /* Receive */
#define AON__MUI_A2__MUA_RR1 AON__MUI_A2__MUA.RR[1].R      /* Receive */
#define AON__MUI_A2__MUA_RR2 AON__MUI_A2__MUA.RR[2].R      /* Receive */
#define AON__MUI_A2__MUA_RR3 AON__MUI_A2__MUA.RR[3].R      /* Receive */

#define AON__MUI_A3__MUA_VER AON__MUI_A3__MUA.VER.R        /* Version ID */
#define AON__MUI_A3__MUA_PAR AON__MUI_A3__MUA.PAR.R        /* Parameter */
#define AON__MUI_A3__MUA_CR  AON__MUI_A3__MUA.CR.R         /* Control */
#define AON__MUI_A3__MUA_SR  AON__MUI_A3__MUA.SR.R         /* Status */
#define AON__MUI_A3__MUA_CCR0 AON__MUI_A3__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A3__MUA_CIER0 AON__MUI_A3__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A3__MUA_CSSR0 AON__MUI_A3__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A3__MUA_CSR0 AON__MUI_A3__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A3__MUA_FCR AON__MUI_A3__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A3__MUA_FSR AON__MUI_A3__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A3__MUA_GIER AON__MUI_A3__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A3__MUA_GCR AON__MUI_A3__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A3__MUA_GSR AON__MUI_A3__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A3__MUA_TCR AON__MUI_A3__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A3__MUA_TSR AON__MUI_A3__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A3__MUA_RCR AON__MUI_A3__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A3__MUA_RSR AON__MUI_A3__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A3__MUA_TR0 AON__MUI_A3__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A3__MUA_TR1 AON__MUI_A3__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A3__MUA_TR2 AON__MUI_A3__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A3__MUA_TR3 AON__MUI_A3__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A3__MUA_RR0 AON__MUI_A3__MUA.RR[0].R      /* Receive */
#define AON__MUI_A3__MUA_RR1 AON__MUI_A3__MUA.RR[1].R      /* Receive */
#define AON__MUI_A3__MUA_RR2 AON__MUI_A3__MUA.RR[2].R      /* Receive */
#define AON__MUI_A3__MUA_RR3 AON__MUI_A3__MUA.RR[3].R      /* Receive */

#define AON__MUI_A4__MUA_VER AON__MUI_A4__MUA.VER.R        /* Version ID */
#define AON__MUI_A4__MUA_PAR AON__MUI_A4__MUA.PAR.R        /* Parameter */
#define AON__MUI_A4__MUA_CR  AON__MUI_A4__MUA.CR.R         /* Control */
#define AON__MUI_A4__MUA_SR  AON__MUI_A4__MUA.SR.R         /* Status */
#define AON__MUI_A4__MUA_CCR0 AON__MUI_A4__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A4__MUA_CIER0 AON__MUI_A4__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A4__MUA_CSSR0 AON__MUI_A4__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A4__MUA_CSR0 AON__MUI_A4__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A4__MUA_FCR AON__MUI_A4__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A4__MUA_FSR AON__MUI_A4__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A4__MUA_GIER AON__MUI_A4__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A4__MUA_GCR AON__MUI_A4__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A4__MUA_GSR AON__MUI_A4__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A4__MUA_TCR AON__MUI_A4__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A4__MUA_TSR AON__MUI_A4__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A4__MUA_RCR AON__MUI_A4__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A4__MUA_RSR AON__MUI_A4__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A4__MUA_TR0 AON__MUI_A4__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A4__MUA_TR1 AON__MUI_A4__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A4__MUA_TR2 AON__MUI_A4__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A4__MUA_TR3 AON__MUI_A4__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A4__MUA_RR0 AON__MUI_A4__MUA.RR[0].R      /* Receive */
#define AON__MUI_A4__MUA_RR1 AON__MUI_A4__MUA.RR[1].R      /* Receive */
#define AON__MUI_A4__MUA_RR2 AON__MUI_A4__MUA.RR[2].R      /* Receive */
#define AON__MUI_A4__MUA_RR3 AON__MUI_A4__MUA.RR[3].R      /* Receive */

#define AON__MUI_A5__MUA_VER AON__MUI_A5__MUA.VER.R        /* Version ID */
#define AON__MUI_A5__MUA_PAR AON__MUI_A5__MUA.PAR.R        /* Parameter */
#define AON__MUI_A5__MUA_CR  AON__MUI_A5__MUA.CR.R         /* Control */
#define AON__MUI_A5__MUA_SR  AON__MUI_A5__MUA.SR.R         /* Status */
#define AON__MUI_A5__MUA_CCR0 AON__MUI_A5__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A5__MUA_CIER0 AON__MUI_A5__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A5__MUA_CSSR0 AON__MUI_A5__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A5__MUA_CSR0 AON__MUI_A5__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A5__MUA_FCR AON__MUI_A5__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A5__MUA_FSR AON__MUI_A5__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A5__MUA_GIER AON__MUI_A5__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A5__MUA_GCR AON__MUI_A5__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A5__MUA_GSR AON__MUI_A5__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A5__MUA_TCR AON__MUI_A5__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A5__MUA_TSR AON__MUI_A5__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A5__MUA_RCR AON__MUI_A5__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A5__MUA_RSR AON__MUI_A5__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A5__MUA_TR0 AON__MUI_A5__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A5__MUA_TR1 AON__MUI_A5__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A5__MUA_TR2 AON__MUI_A5__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A5__MUA_TR3 AON__MUI_A5__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A5__MUA_RR0 AON__MUI_A5__MUA.RR[0].R      /* Receive */
#define AON__MUI_A5__MUA_RR1 AON__MUI_A5__MUA.RR[1].R      /* Receive */
#define AON__MUI_A5__MUA_RR2 AON__MUI_A5__MUA.RR[2].R      /* Receive */
#define AON__MUI_A5__MUA_RR3 AON__MUI_A5__MUA.RR[3].R      /* Receive */

#define AON__MUI_A6__MUA_VER AON__MUI_A6__MUA.VER.R        /* Version ID */
#define AON__MUI_A6__MUA_PAR AON__MUI_A6__MUA.PAR.R        /* Parameter */
#define AON__MUI_A6__MUA_CR  AON__MUI_A6__MUA.CR.R         /* Control */
#define AON__MUI_A6__MUA_SR  AON__MUI_A6__MUA.SR.R         /* Status */
#define AON__MUI_A6__MUA_CCR0 AON__MUI_A6__MUA.CCR0.R      /* Core Control 0 */
#define AON__MUI_A6__MUA_CIER0 AON__MUI_A6__MUA.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A6__MUA_CSSR0 AON__MUI_A6__MUA.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A6__MUA_CSR0 AON__MUI_A6__MUA.CSR0.R      /* Core Status 0 */
#define AON__MUI_A6__MUA_FCR AON__MUI_A6__MUA.FCR.R        /* Flag Control */
#define AON__MUI_A6__MUA_FSR AON__MUI_A6__MUA.FSR.R        /* Flag Status */
#define AON__MUI_A6__MUA_GIER AON__MUI_A6__MUA.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A6__MUA_GCR AON__MUI_A6__MUA.GCR.R        /* General-Purpose Control */
#define AON__MUI_A6__MUA_GSR AON__MUI_A6__MUA.GSR.R        /* General-purpose Status */
#define AON__MUI_A6__MUA_TCR AON__MUI_A6__MUA.TCR.R        /* Transmit Control */
#define AON__MUI_A6__MUA_TSR AON__MUI_A6__MUA.TSR.R        /* Transmit Status */
#define AON__MUI_A6__MUA_RCR AON__MUI_A6__MUA.RCR.R        /* Receive Control */
#define AON__MUI_A6__MUA_RSR AON__MUI_A6__MUA.RSR.R        /* Receive Status */
#define AON__MUI_A6__MUA_TR0 AON__MUI_A6__MUA.TR[0].R      /* Transmit */
#define AON__MUI_A6__MUA_TR1 AON__MUI_A6__MUA.TR[1].R      /* Transmit */
#define AON__MUI_A6__MUA_TR2 AON__MUI_A6__MUA.TR[2].R      /* Transmit */
#define AON__MUI_A6__MUA_TR3 AON__MUI_A6__MUA.TR[3].R      /* Transmit */
#define AON__MUI_A6__MUA_RR0 AON__MUI_A6__MUA.RR[0].R      /* Receive */
#define AON__MUI_A6__MUA_RR1 AON__MUI_A6__MUA.RR[1].R      /* Receive */
#define AON__MUI_A6__MUA_RR2 AON__MUI_A6__MUA.RR[2].R      /* Receive */
#define AON__MUI_A6__MUA_RR3 AON__MUI_A6__MUA.RR[3].R      /* Receive */

#define AON__MUI_A1__MUB_VER AON__MUI_A1__MUB.VER.R        /* Version ID */
#define AON__MUI_A1__MUB_PAR AON__MUI_A1__MUB.PAR.R        /* Parameter */
#define AON__MUI_A1__MUB_CR  AON__MUI_A1__MUB.CR.R         /* Control */
#define AON__MUI_A1__MUB_SR  AON__MUI_A1__MUB.SR.R         /* Status */
#define AON__MUI_A1__MUB_CCR0 AON__MUI_A1__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A1__MUB_CIER0 AON__MUI_A1__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A1__MUB_CSSR0 AON__MUI_A1__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A1__MUB_CSR0 AON__MUI_A1__MUB.CSR0.R      /* Core Status 0 */
#define AON__MUI_A1__MUB_FCR AON__MUI_A1__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A1__MUB_FSR AON__MUI_A1__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A1__MUB_GIER AON__MUI_A1__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A1__MUB_GCR AON__MUI_A1__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A1__MUB_GSR AON__MUI_A1__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A1__MUB_TCR AON__MUI_A1__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A1__MUB_TSR AON__MUI_A1__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A1__MUB_RCR AON__MUI_A1__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A1__MUB_RSR AON__MUI_A1__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A1__MUB_TR0 AON__MUI_A1__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A1__MUB_TR1 AON__MUI_A1__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A1__MUB_TR2 AON__MUI_A1__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A1__MUB_TR3 AON__MUI_A1__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A1__MUB_RR0 AON__MUI_A1__MUB.RR[0].R      /* Receive */
#define AON__MUI_A1__MUB_RR1 AON__MUI_A1__MUB.RR[1].R      /* Receive */
#define AON__MUI_A1__MUB_RR2 AON__MUI_A1__MUB.RR[2].R      /* Receive */
#define AON__MUI_A1__MUB_RR3 AON__MUI_A1__MUB.RR[3].R      /* Receive */

#define AON__MUI_A2__MUB_VER AON__MUI_A2__MUB.VER.R        /* Version ID */
#define AON__MUI_A2__MUB_PAR AON__MUI_A2__MUB.PAR.R        /* Parameter */
#define AON__MUI_A2__MUB_CR  AON__MUI_A2__MUB.CR.R         /* Control */
#define AON__MUI_A2__MUB_SR  AON__MUI_A2__MUB.SR.R         /* Status */
#define AON__MUI_A2__MUB_CCR0 AON__MUI_A2__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A2__MUB_CIER0 AON__MUI_A2__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A2__MUB_CSSR0 AON__MUI_A2__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A2__MUB_CSR0 AON__MUI_A2__MUB.CSR0.R      /* Core Status 0 */
#define AON__MUI_A2__MUB_FCR AON__MUI_A2__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A2__MUB_FSR AON__MUI_A2__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A2__MUB_GIER AON__MUI_A2__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A2__MUB_GCR AON__MUI_A2__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A2__MUB_GSR AON__MUI_A2__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A2__MUB_TCR AON__MUI_A2__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A2__MUB_TSR AON__MUI_A2__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A2__MUB_RCR AON__MUI_A2__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A2__MUB_RSR AON__MUI_A2__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A2__MUB_TR0 AON__MUI_A2__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A2__MUB_TR1 AON__MUI_A2__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A2__MUB_TR2 AON__MUI_A2__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A2__MUB_TR3 AON__MUI_A2__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A2__MUB_RR0 AON__MUI_A2__MUB.RR[0].R      /* Receive */
#define AON__MUI_A2__MUB_RR1 AON__MUI_A2__MUB.RR[1].R      /* Receive */
#define AON__MUI_A2__MUB_RR2 AON__MUI_A2__MUB.RR[2].R      /* Receive */
#define AON__MUI_A2__MUB_RR3 AON__MUI_A2__MUB.RR[3].R      /* Receive */

#define AON__MUI_A3__MUB_VER AON__MUI_A3__MUB.VER.R        /* Version ID */
#define AON__MUI_A3__MUB_PAR AON__MUI_A3__MUB.PAR.R        /* Parameter */
#define AON__MUI_A3__MUB_CR  AON__MUI_A3__MUB.CR.R         /* Control */
#define AON__MUI_A3__MUB_SR  AON__MUI_A3__MUB.SR.R         /* Status */
#define AON__MUI_A3__MUB_CCR0 AON__MUI_A3__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A3__MUB_CIER0 AON__MUI_A3__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A3__MUB_CSSR0 AON__MUI_A3__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A3__MUB_CSR0 AON__MUI_A3__MUB.CSR0.R      /* Core Status 0 */
#define AON__MUI_A3__MUB_FCR AON__MUI_A3__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A3__MUB_FSR AON__MUI_A3__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A3__MUB_GIER AON__MUI_A3__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A3__MUB_GCR AON__MUI_A3__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A3__MUB_GSR AON__MUI_A3__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A3__MUB_TCR AON__MUI_A3__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A3__MUB_TSR AON__MUI_A3__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A3__MUB_RCR AON__MUI_A3__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A3__MUB_RSR AON__MUI_A3__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A3__MUB_TR0 AON__MUI_A3__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A3__MUB_TR1 AON__MUI_A3__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A3__MUB_TR2 AON__MUI_A3__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A3__MUB_TR3 AON__MUI_A3__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A3__MUB_RR0 AON__MUI_A3__MUB.RR[0].R      /* Receive */
#define AON__MUI_A3__MUB_RR1 AON__MUI_A3__MUB.RR[1].R      /* Receive */
#define AON__MUI_A3__MUB_RR2 AON__MUI_A3__MUB.RR[2].R      /* Receive */
#define AON__MUI_A3__MUB_RR3 AON__MUI_A3__MUB.RR[3].R      /* Receive */

#define AON__MUI_A4__MUB_VER AON__MUI_A4__MUB.VER.R        /* Version ID */
#define AON__MUI_A4__MUB_PAR AON__MUI_A4__MUB.PAR.R        /* Parameter */
#define AON__MUI_A4__MUB_CR  AON__MUI_A4__MUB.CR.R         /* Control */
#define AON__MUI_A4__MUB_SR  AON__MUI_A4__MUB.SR.R         /* Status */
#define AON__MUI_A4__MUB_CCR0 AON__MUI_A4__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A4__MUB_CIER0 AON__MUI_A4__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A4__MUB_CSSR0 AON__MUI_A4__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A4__MUB_CSR0 AON__MUI_A4__MUB.CSR0.R      /* Core Status 0 */
#define AON__MUI_A4__MUB_FCR AON__MUI_A4__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A4__MUB_FSR AON__MUI_A4__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A4__MUB_GIER AON__MUI_A4__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A4__MUB_GCR AON__MUI_A4__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A4__MUB_GSR AON__MUI_A4__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A4__MUB_TCR AON__MUI_A4__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A4__MUB_TSR AON__MUI_A4__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A4__MUB_RCR AON__MUI_A4__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A4__MUB_RSR AON__MUI_A4__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A4__MUB_TR0 AON__MUI_A4__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A4__MUB_TR1 AON__MUI_A4__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A4__MUB_TR2 AON__MUI_A4__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A4__MUB_TR3 AON__MUI_A4__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A4__MUB_RR0 AON__MUI_A4__MUB.RR[0].R      /* Receive */
#define AON__MUI_A4__MUB_RR1 AON__MUI_A4__MUB.RR[1].R      /* Receive */
#define AON__MUI_A4__MUB_RR2 AON__MUI_A4__MUB.RR[2].R      /* Receive */
#define AON__MUI_A4__MUB_RR3 AON__MUI_A4__MUB.RR[3].R      /* Receive */

#define AON__MUI_A5__MUB_VER AON__MUI_A5__MUB.VER.R        /* Version ID */
#define AON__MUI_A5__MUB_PAR AON__MUI_A5__MUB.PAR.R        /* Parameter */
#define AON__MUI_A5__MUB_CR  AON__MUI_A5__MUB.CR.R         /* Control */
#define AON__MUI_A5__MUB_SR  AON__MUI_A5__MUB.SR.R         /* Status */
#define AON__MUI_A5__MUB_CCR0 AON__MUI_A5__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A5__MUB_CIER0 AON__MUI_A5__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A5__MUB_CSSR0 AON__MUI_A5__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A5__MUB_CSR0 AON__MUI_A5__MUB.CSR0.R      /* Core Status 0 */
#define AON__MUI_A5__MUB_FCR AON__MUI_A5__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A5__MUB_FSR AON__MUI_A5__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A5__MUB_GIER AON__MUI_A5__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A5__MUB_GCR AON__MUI_A5__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A5__MUB_GSR AON__MUI_A5__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A5__MUB_TCR AON__MUI_A5__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A5__MUB_TSR AON__MUI_A5__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A5__MUB_RCR AON__MUI_A5__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A5__MUB_RSR AON__MUI_A5__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A5__MUB_TR0 AON__MUI_A5__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A5__MUB_TR1 AON__MUI_A5__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A5__MUB_TR2 AON__MUI_A5__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A5__MUB_TR3 AON__MUI_A5__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A5__MUB_RR0 AON__MUI_A5__MUB.RR[0].R      /* Receive */
#define AON__MUI_A5__MUB_RR1 AON__MUI_A5__MUB.RR[1].R      /* Receive */
#define AON__MUI_A5__MUB_RR2 AON__MUI_A5__MUB.RR[2].R      /* Receive */
#define AON__MUI_A5__MUB_RR3 AON__MUI_A5__MUB.RR[3].R      /* Receive */

#define AON__MUI_A6__MUB_VER AON__MUI_A6__MUB.VER.R        /* Version ID */
#define AON__MUI_A6__MUB_PAR AON__MUI_A6__MUB.PAR.R        /* Parameter */
#define AON__MUI_A6__MUB_CR  AON__MUI_A6__MUB.CR.R         /* Control */
#define AON__MUI_A6__MUB_SR  AON__MUI_A6__MUB.SR.R         /* Status */
#define AON__MUI_A6__MUB_CCR0 AON__MUI_A6__MUB.CCR0.R      /* Core Control 0 */
#define AON__MUI_A6__MUB_CIER0 AON__MUI_A6__MUB.CIER0.R    /* Core Interrupt Enable 0 */
#define AON__MUI_A6__MUB_CSSR0 AON__MUI_A6__MUB.CSSR0.R    /* Core Sticky Status 0 */
#define AON__MUI_A6__MUB_FCR AON__MUI_A6__MUB.FCR.R        /* Flag Control */
#define AON__MUI_A6__MUB_FSR AON__MUI_A6__MUB.FSR.R        /* Flag Status */
#define AON__MUI_A6__MUB_GIER AON__MUI_A6__MUB.GIER.R      /* General-Purpose Interrupt Enable */
#define AON__MUI_A6__MUB_GCR AON__MUI_A6__MUB.GCR.R        /* General-Purpose Control */
#define AON__MUI_A6__MUB_GSR AON__MUI_A6__MUB.GSR.R        /* General-purpose Status */
#define AON__MUI_A6__MUB_TCR AON__MUI_A6__MUB.TCR.R        /* Transmit Control */
#define AON__MUI_A6__MUB_TSR AON__MUI_A6__MUB.TSR.R        /* Transmit Status */
#define AON__MUI_A6__MUB_RCR AON__MUI_A6__MUB.RCR.R        /* Receive Control */
#define AON__MUI_A6__MUB_RSR AON__MUI_A6__MUB.RSR.R        /* Receive Status */
#define AON__MUI_A6__MUB_TR0 AON__MUI_A6__MUB.TR[0].R      /* Transmit */
#define AON__MUI_A6__MUB_TR1 AON__MUI_A6__MUB.TR[1].R      /* Transmit */
#define AON__MUI_A6__MUB_TR2 AON__MUI_A6__MUB.TR[2].R      /* Transmit */
#define AON__MUI_A6__MUB_TR3 AON__MUI_A6__MUB.TR[3].R      /* Transmit */
#define AON__MUI_A6__MUB_RR0 AON__MUI_A6__MUB.RR[0].R      /* Receive */
#define AON__MUI_A6__MUB_RR1 AON__MUI_A6__MUB.RR[1].R      /* Receive */
#define AON__MUI_A6__MUB_RR2 AON__MUI_A6__MUB.RR[2].R      /* Receive */
#define AON__MUI_A6__MUB_RR3 AON__MUI_A6__MUB.RR[3].R      /* Receive */

/* TCM_ECC_MCM */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_TCMECCR AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.TCMECCR.R /* TCM ECC Control Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_INT_STATUS AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.INT_STATUS.R /* Interrupt Status Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_INT_STAT_EN AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.INT_STAT_EN.R /* Interrupt Status Enable Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_INT_SIG_EN AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.INT_SIG_EN.R /* Interrupt Enable Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_CODE_TCM_ECC_SINGLE_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.CODE_TCM_ECC_SINGLE_ERROR_INFO.R /* CODE_TCM single-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_CODE_TCM_ECC_SINGLE_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.CODE_TCM_ECC_SINGLE_ERROR_ADDR.R /* CODE_TCM single-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_CODE_TCM_ECC_MULTI_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.CODE_TCM_ECC_MULTI_ERROR_INFO.R /* CODE_TCM multi-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_CODE_TCM_ECC_MULTI_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.CODE_TCM_ECC_MULTI_ERROR_ADDR.R /* CODE_TCM multi-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_SYS_TCM_ECC_SINGLE_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.SYS_TCM_ECC_SINGLE_ERROR_INFO.R /* SYS_TCM single-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_SYS_TCM_ECC_SINGLE_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.SYS_TCM_ECC_SINGLE_ERROR_ADDR.R /* SYS_TCM single-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_SYS_TCM_ECC_MULTI_ERROR_INFO AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.SYS_TCM_ECC_MULTI_ERROR_INFO.R /* SYS_TCM multi-bit ECC Error Information Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_SYS_TCM_ECC_MULTI_ERROR_ADDR AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.SYS_TCM_ECC_MULTI_ERROR_ADDR.R /* SYS_TCM multi-bit ECC Error Address Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_CODE_TCM_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.CODE_TCM_ECC_ERROR_INJEC.R /* CODE_TCM ECC Error Injection Register */
#define AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM_SYS_TCM_ECC_ERROR_INJEC AON__M33_CACHE_CTRL_ECC0__CM33_TCM_MCM.SYS_TCM_ECC_ERROR_INJEC.R /* SYS_TCM ECC Error Injection Register */

#endif /* defined(SAFETY_BASE_MIMX95XX) */

#ifdef __MWERKS__
#pragma pop
#endif
#ifdef __ghs__
#pragma ghs endnowarning
#endif
#ifdef __GNUC__
#pragma GCC diagnostic pop
#pragma pack(pop)
#endif
#ifdef  __cplusplus
}
#endif
#endif /* ifdef _SafetyBase_MIMX95XX_SAF_H_ */
